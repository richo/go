
state 0
	$accept: .file $end 
	$$4: .    (4)

	.  reduce 4 (src line 148)

	file  goto 1
	loadsys  goto 2
	$$4  goto 3

state 1
	$accept:  file.$end 

	$end  accept
	.  error


state 2
	file:  loadsys.package imports xdcl_list 
	package: .    (2)

	LPACKAGE  shift 5
	.  reduce 2 (src line 131)

	package  goto 4

state 3
	loadsys:  $$4.import_package import_there 

	LPACKAGE  shift 7
	.  error

	import_package  goto 6

state 4
	file:  loadsys package.imports xdcl_list 
	imports: .    (6)

	.  reduce 6 (src line 165)

	imports  goto 8

state 5
	package:  LPACKAGE.sym ';' 

	LNAME  shift 10
	'?'  shift 12
	'@'  shift 13
	.  error

	sym  goto 9
	hidden_importsym  goto 11

state 6
	loadsys:  $$4 import_package.import_there 
	$$21: .    (21)

	.  reduce 21 (src line 272)

	import_there  goto 14
	$$21  goto 15

state 7
	import_package:  LPACKAGE.LNAME import_safety ';' 

	LNAME  shift 16
	.  error


state 8
	file:  loadsys package imports.xdcl_list 
	imports:  imports.import ';' 
	xdcl_list: .    (219)

	LIMPORT  shift 19
	.  reduce 219 (src line 1539)

	xdcl_list  goto 17
	import  goto 18

state 9
	package:  LPACKAGE sym.';' 

	';'  shift 20
	.  error


state 10
	sym:  LNAME.    (157)

	.  reduce 157 (src line 1113)


state 11
	sym:  hidden_importsym.    (158)

	.  reduce 158 (src line 1122)


state 12
	sym:  '?'.    (159)

	.  reduce 159 (src line 1123)


state 13
	hidden_importsym:  '@'.LLITERAL '.' LNAME 
	hidden_importsym:  '@'.LLITERAL '.' '?' 

	LLITERAL  shift 21
	.  error


state 14
	loadsys:  $$4 import_package import_there.    (5)

	.  reduce 5 (src line 159)


state 15
	import_there:  $$21.hidden_import_list '$' '$' 
	hidden_import_list: .    (345)

	.  reduce 345 (src line 2241)

	hidden_import_list  goto 22

state 16
	import_package:  LPACKAGE LNAME.import_safety ';' 
	import_safety: .    (19)

	LNAME  shift 24
	.  reduce 19 (src line 264)

	import_safety  goto 23

state 17
	file:  loadsys package imports xdcl_list.    (1)
	xdcl_list:  xdcl_list.xdcl ';' 
	xdcl: .    (23)

	$end  reduce 1 (src line 122)
	error  shift 29
	LLITERAL  shift 68
	LBREAK  shift 41
	LCHAN  shift 78
	LCONST  shift 47
	LCONTINUE  shift 42
	LDEFER  shift 44
	LFALL  shift 40
	LFOR  shift 50
	LFUNC  shift 33
	LGO  shift 43
	LGOTO  shift 45
	LIF  shift 53
	LINTERFACE  shift 83
	LMAP  shift 79
	LNAME  shift 10
	LRETURN  shift 46
	LSELECT  shift 52
	LSTRUCT  shift 82
	LSWITCH  shift 51
	LTYPE  shift 32
	LVAR  shift 30
	LCOMM  shift 65
	'+'  shift 60
	'-'  shift 61
	'^'  shift 64
	'*'  shift 58
	'&'  shift 59
	'('  shift 67
	';'  reduce 23 (src line 285)
	'!'  shift 62
	'~'  shift 63
	'['  shift 77
	'?'  shift 12
	'@'  shift 13
	.  error

	sym  goto 56
	expr  goto 48
	fnliteral  goto 73
	for_stmt  goto 35
	if_stmt  goto 38
	non_dcl_stmt  goto 28
	labelname  goto 39
	name  goto 69
	new_name  goto 54
	pexpr  goto 57
	pexpr_no_paren  goto 66
	pseudocall  goto 70
	select_stmt  goto 37
	simple_stmt  goto 34
	switch_stmt  goto 36
	uexpr  goto 55
	xfndcl  goto 27
	xdcl  goto 25
	expr_list  goto 49
	common_dcl  goto 26
	convtype  goto 71
	comptype  goto 72
	interfacetype  goto 81
	structtype  goto 80
	othertype  goto 75
	fntype  goto 74
	hidden_importsym  goto 11
	lconst  goto 31
	fnlitdcl  goto 76

state 18
	imports:  imports import.';' 

	';'  shift 84
	.  error


state 19
	import:  LIMPORT.import_stmt 
	import:  LIMPORT.'(' import_stmt_list osemi ')' 
	import:  LIMPORT.'(' ')' 

	LLITERAL  shift 88
	LNAME  shift 10
	'('  shift 86
	'.'  shift 90
	'?'  shift 12
	'@'  shift 13
	.  error

	import_here  goto 87
	sym  goto 89
	hidden_importsym  goto 11
	import_stmt  goto 85

state 20
	package:  LPACKAGE sym ';'.    (3)

	.  reduce 3 (src line 138)


state 21
	hidden_importsym:  '@' LLITERAL.'.' LNAME 
	hidden_importsym:  '@' LLITERAL.'.' '?' 

	'.'  shift 91
	.  error


state 22
	import_there:  $$21 hidden_import_list.'$' '$' 
	hidden_import_list:  hidden_import_list.hidden_import 

	LCONST  shift 96
	LFUNC  shift 98
	LIMPORT  shift 94
	LTYPE  shift 97
	LVAR  shift 95
	'$'  shift 92
	.  error

	hidden_import  goto 93

state 23
	import_package:  LPACKAGE LNAME import_safety.';' 

	';'  shift 99
	.  error


state 24
	import_safety:  LNAME.    (20)

	.  reduce 20 (src line 265)


state 25
	xdcl_list:  xdcl_list xdcl.';' 

	';'  shift 100
	.  error


state 26
	xdcl:  common_dcl.    (24)

	.  reduce 24 (src line 290)


state 27
	xdcl:  xfndcl.    (25)

	.  reduce 25 (src line 291)


state 28
	xdcl:  non_dcl_stmt.    (26)

	.  reduce 26 (src line 295)


state 29
	xdcl:  error.    (27)

	.  reduce 27 (src line 300)


state 30
	common_dcl:  LVAR.vardcl 
	common_dcl:  LVAR.'(' vardcl_list osemi ')' 
	common_dcl:  LVAR.'(' ')' 

	LNAME  shift 10
	'('  shift 102
	'?'  shift 12
	'@'  shift 13
	.  error

	sym  goto 105
	dcl_name  goto 104
	dcl_name_list  goto 103
	vardcl  goto 101
	hidden_importsym  goto 11

state 31
	common_dcl:  lconst.constdcl 
	common_dcl:  lconst.'(' constdcl osemi ')' 
	common_dcl:  lconst.'(' constdcl ';' constdcl_list osemi ')' 
	common_dcl:  lconst.'(' ')' 

	LNAME  shift 10
	'('  shift 107
	'?'  shift 12
	'@'  shift 13
	.  error

	sym  goto 105
	dcl_name  goto 104
	dcl_name_list  goto 108
	constdcl  goto 106
	hidden_importsym  goto 11

state 32
	common_dcl:  LTYPE.typedcl 
	common_dcl:  LTYPE.'(' typedcl_list osemi ')' 
	common_dcl:  LTYPE.'(' ')' 

	LNAME  shift 10
	'('  shift 110
	'?'  shift 12
	'@'  shift 13
	.  error

	sym  goto 112
	typedclname  goto 111
	typedcl  goto 109
	hidden_importsym  goto 11

state 33
	xfndcl:  LFUNC.fndcl fnbody 
	fntype:  LFUNC.'(' oarg_type_list_ocomma ')' fnres 

	LNAME  shift 10
	LLT  shift 115
	'('  shift 114
	'?'  shift 12
	'@'  shift 13
	.  error

	sym  goto 116
	fndcl  goto 113
	hidden_importsym  goto 11

state 34
	non_dcl_stmt:  simple_stmt.    (257)

	.  reduce 257 (src line 1766)


state 35
	non_dcl_stmt:  for_stmt.    (258)

	.  reduce 258 (src line 1768)


state 36
	non_dcl_stmt:  switch_stmt.    (259)

	.  reduce 259 (src line 1769)


state 37
	non_dcl_stmt:  select_stmt.    (260)

	.  reduce 260 (src line 1770)


state 38
	non_dcl_stmt:  if_stmt.    (261)

	.  reduce 261 (src line 1771)


state 39
	non_dcl_stmt:  labelname.':' $$262 stmt 

	':'  shift 117
	.  error


state 40
	non_dcl_stmt:  LFALL.    (264)

	.  reduce 264 (src line 1788)


state 41
	non_dcl_stmt:  LBREAK.onew_name 
	onew_name: .    (155)

	LNAME  shift 10
	'?'  shift 12
	'@'  shift 13
	.  reduce 155 (src line 1107)

	sym  goto 120
	new_name  goto 119
	onew_name  goto 118
	hidden_importsym  goto 11

state 42
	non_dcl_stmt:  LCONTINUE.onew_name 
	onew_name: .    (155)

	LNAME  shift 10
	'?'  shift 12
	'@'  shift 13
	.  reduce 155 (src line 1107)

	sym  goto 120
	new_name  goto 119
	onew_name  goto 121
	hidden_importsym  goto 11

state 43
	non_dcl_stmt:  LGO.pseudocall 

	LLITERAL  shift 68
	LCHAN  shift 78
	LFUNC  shift 125
	LINTERFACE  shift 83
	LMAP  shift 79
	LNAME  shift 10
	LSTRUCT  shift 82
	'('  shift 67
	'['  shift 77
	'?'  shift 12
	'@'  shift 13
	.  error

	sym  goto 124
	fnliteral  goto 73
	name  goto 69
	pexpr  goto 123
	pexpr_no_paren  goto 66
	pseudocall  goto 122
	convtype  goto 71
	comptype  goto 72
	interfacetype  goto 81
	structtype  goto 80
	othertype  goto 75
	fntype  goto 74
	hidden_importsym  goto 11
	fnlitdcl  goto 76

state 44
	non_dcl_stmt:  LDEFER.pseudocall 

	LLITERAL  shift 68
	LCHAN  shift 78
	LFUNC  shift 125
	LINTERFACE  shift 83
	LMAP  shift 79
	LNAME  shift 10
	LSTRUCT  shift 82
	'('  shift 67
	'['  shift 77
	'?'  shift 12
	'@'  shift 13
	.  error

	sym  goto 124
	fnliteral  goto 73
	name  goto 69
	pexpr  goto 123
	pexpr_no_paren  goto 66
	pseudocall  goto 126
	convtype  goto 71
	comptype  goto 72
	interfacetype  goto 81
	structtype  goto 80
	othertype  goto 75
	fntype  goto 74
	hidden_importsym  goto 11
	fnlitdcl  goto 76

state 45
	non_dcl_stmt:  LGOTO.new_name 

	LNAME  shift 10
	'?'  shift 12
	'@'  shift 13
	.  error

	sym  goto 120
	new_name  goto 127
	hidden_importsym  goto 11

state 46
	non_dcl_stmt:  LRETURN.oexpr_list 
	oexpr_list: .    (293)

	LLITERAL  shift 68
	LCHAN  shift 78
	LFUNC  shift 125
	LINTERFACE  shift 83
	LMAP  shift 79
	LNAME  shift 10
	LSTRUCT  shift 82
	LCOMM  shift 65
	'+'  shift 60
	'-'  shift 61
	'^'  shift 64
	'*'  shift 58
	'&'  shift 59
	'('  shift 67
	'!'  shift 62
	'~'  shift 63
	'['  shift 77
	'?'  shift 12
	'@'  shift 13
	.  reduce 293 (src line 1937)

	sym  goto 124
	expr  goto 130
	fnliteral  goto 73
	name  goto 69
	pexpr  goto 57
	pexpr_no_paren  goto 66
	pseudocall  goto 70
	uexpr  goto 55
	expr_list  goto 129
	oexpr_list  goto 128
	convtype  goto 71
	comptype  goto 72
	interfacetype  goto 81
	structtype  goto 80
	othertype  goto 75
	fntype  goto 74
	hidden_importsym  goto 11
	fnlitdcl  goto 76

state 47
	lconst:  LCONST.    (38)

	.  reduce 38 (src line 354)


state 48
	simple_stmt:  expr.    (49)
	simple_stmt:  expr.LASOP expr 
	simple_stmt:  expr.LINC 
	simple_stmt:  expr.LDEC 
	expr:  expr.LOROR expr 
	expr:  expr.LANDAND expr 
	expr:  expr.LEQ expr 
	expr:  expr.LNE expr 
	expr:  expr.LLT expr 
	expr:  expr.LLE expr 
	expr:  expr.LGE expr 
	expr:  expr.LGT expr 
	expr:  expr.'+' expr 
	expr:  expr.'-' expr 
	expr:  expr.'|' expr 
	expr:  expr.'^' expr 
	expr:  expr.'*' expr 
	expr:  expr.'/' expr 
	expr:  expr.'%' expr 
	expr:  expr.'&' expr 
	expr:  expr.LANDNOT expr 
	expr:  expr.LLSH expr 
	expr:  expr.LRSH expr 
	expr:  expr.LCOMM expr 
	expr_list:  expr.    (277)

	LASOP  shift 131
	LCOLAS  reduce 277 (src line 1872)
	LANDAND  shift 135
	LANDNOT  shift 150
	LCOMM  shift 153
	LDEC  shift 133
	LEQ  shift 136
	LGE  shift 140
	LGT  shift 141
	LINC  shift 132
	LLE  shift 139
	LLSH  shift 151
	LLT  shift 138
	LNE  shift 137
	LOROR  shift 134
	LRSH  shift 152
	'+'  shift 142
	'-'  shift 143
	'|'  shift 144
	'^'  shift 145
	'*'  shift 146
	'/'  shift 147
	'%'  shift 148
	'&'  shift 149
	'='  reduce 277 (src line 1872)
	','  reduce 277 (src line 1872)
	.  reduce 49 (src line 410)


state 49
	simple_stmt:  expr_list.'=' expr_list 
	simple_stmt:  expr_list.LCOLAS expr_list 
	expr_list:  expr_list.',' expr 

	LCOLAS  shift 155
	'='  shift 154
	','  shift 156
	.  error


state 50
	for_stmt:  LFOR.$$74 for_body 
	$$74: .    (74)

	.  reduce 74 (src line 659)

	$$74  goto 157

state 51
	switch_stmt:  LSWITCH.$$88 if_header $$89 LBODY caseblock_list '}' 
	$$88: .    (88)

	.  reduce 88 (src line 754)

	$$88  goto 158

state 52
	select_stmt:  LSELECT.$$91 LBODY caseblock_list '}' 
	$$91: .    (91)

	.  reduce 91 (src line 777)

	$$91  goto 159

state 53
	if_stmt:  LIF.$$78 if_header $$79 loop_body $$80 elseif_list else 
	$$78: .    (78)

	.  reduce 78 (src line 688)

	$$78  goto 160

state 54
	labelname:  new_name.    (163)

	.  reduce 163 (src line 1167)


state 55
	expr:  uexpr.    (93)

	.  reduce 93 (src line 793)


state 56
	new_name:  sym.    (153)
	name:  sym.    (162)

	':'  reduce 153 (src line 1091)
	.  reduce 162 (src line 1158)


state 57
	uexpr:  pexpr.    (114)
	pseudocall:  pexpr.'(' ')' 
	pseudocall:  pexpr.'(' expr_or_type_list ocomma ')' 
	pseudocall:  pexpr.'(' expr_or_type_list LDDD ocomma ')' 
	pexpr_no_paren:  pexpr.'.' sym 
	pexpr_no_paren:  pexpr.'.' '(' expr_or_type ')' 
	pexpr_no_paren:  pexpr.'.' '(' LTYPE ')' 
	pexpr_no_paren:  pexpr.'[' expr ']' 
	pexpr_no_paren:  pexpr.'[' oexpr ':' oexpr ']' 
	pexpr_no_paren:  pexpr.'[' oexpr ':' oexpr ':' oexpr ']' 

	'('  shift 161
	'.'  shift 162
	'['  shift 163
	.  reduce 114 (src line 877)


state 58
	uexpr:  '*'.uexpr 

	LLITERAL  shift 68
	LCHAN  shift 78
	LFUNC  shift 125
	LINTERFACE  shift 83
	LMAP  shift 79
	LNAME  shift 10
	LSTRUCT  shift 82
	LCOMM  shift 65
	'+'  shift 60
	'-'  shift 61
	'^'  shift 64
	'*'  shift 58
	'&'  shift 59
	'('  shift 67
	'!'  shift 62
	'~'  shift 63
	'['  shift 77
	'?'  shift 12
	'@'  shift 13
	.  error

	sym  goto 124
	fnliteral  goto 73
	name  goto 69
	pexpr  goto 57
	pexpr_no_paren  goto 66
	pseudocall  goto 70
	uexpr  goto 164
	convtype  goto 71
	comptype  goto 72
	interfacetype  goto 81
	structtype  goto 80
	othertype  goto 75
	fntype  goto 74
	hidden_importsym  goto 11
	fnlitdcl  goto 76

state 59
	uexpr:  '&'.uexpr 

	LLITERAL  shift 68
	LCHAN  shift 78
	LFUNC  shift 125
	LINTERFACE  shift 83
	LMAP  shift 79
	LNAME  shift 10
	LSTRUCT  shift 82
	LCOMM  shift 65
	'+'  shift 60
	'-'  shift 61
	'^'  shift 64
	'*'  shift 58
	'&'  shift 59
	'('  shift 67
	'!'  shift 62
	'~'  shift 63
	'['  shift 77
	'?'  shift 12
	'@'  shift 13
	.  error

	sym  goto 124
	fnliteral  goto 73
	name  goto 69
	pexpr  goto 57
	pexpr_no_paren  goto 66
	pseudocall  goto 70
	uexpr  goto 165
	convtype  goto 71
	comptype  goto 72
	interfacetype  goto 81
	structtype  goto 80
	othertype  goto 75
	fntype  goto 74
	hidden_importsym  goto 11
	fnlitdcl  goto 76

state 60
	uexpr:  '+'.uexpr 

	LLITERAL  shift 68
	LCHAN  shift 78
	LFUNC  shift 125
	LINTERFACE  shift 83
	LMAP  shift 79
	LNAME  shift 10
	LSTRUCT  shift 82
	LCOMM  shift 65
	'+'  shift 60
	'-'  shift 61
	'^'  shift 64
	'*'  shift 58
	'&'  shift 59
	'('  shift 67
	'!'  shift 62
	'~'  shift 63
	'['  shift 77
	'?'  shift 12
	'@'  shift 13
	.  error

	sym  goto 124
	fnliteral  goto 73
	name  goto 69
	pexpr  goto 57
	pexpr_no_paren  goto 66
	pseudocall  goto 70
	uexpr  goto 166
	convtype  goto 71
	comptype  goto 72
	interfacetype  goto 81
	structtype  goto 80
	othertype  goto 75
	fntype  goto 74
	hidden_importsym  goto 11
	fnlitdcl  goto 76

state 61
	uexpr:  '-'.uexpr 

	LLITERAL  shift 68
	LCHAN  shift 78
	LFUNC  shift 125
	LINTERFACE  shift 83
	LMAP  shift 79
	LNAME  shift 10
	LSTRUCT  shift 82
	LCOMM  shift 65
	'+'  shift 60
	'-'  shift 61
	'^'  shift 64
	'*'  shift 58
	'&'  shift 59
	'('  shift 67
	'!'  shift 62
	'~'  shift 63
	'['  shift 77
	'?'  shift 12
	'@'  shift 13
	.  error

	sym  goto 124
	fnliteral  goto 73
	name  goto 69
	pexpr  goto 57
	pexpr_no_paren  goto 66
	pseudocall  goto 70
	uexpr  goto 167
	convtype  goto 71
	comptype  goto 72
	interfacetype  goto 81
	structtype  goto 80
	othertype  goto 75
	fntype  goto 74
	hidden_importsym  goto 11
	fnlitdcl  goto 76

state 62
	uexpr:  '!'.uexpr 

	LLITERAL  shift 68
	LCHAN  shift 78
	LFUNC  shift 125
	LINTERFACE  shift 83
	LMAP  shift 79
	LNAME  shift 10
	LSTRUCT  shift 82
	LCOMM  shift 65
	'+'  shift 60
	'-'  shift 61
	'^'  shift 64
	'*'  shift 58
	'&'  shift 59
	'('  shift 67
	'!'  shift 62
	'~'  shift 63
	'['  shift 77
	'?'  shift 12
	'@'  shift 13
	.  error

	sym  goto 124
	fnliteral  goto 73
	name  goto 69
	pexpr  goto 57
	pexpr_no_paren  goto 66
	pseudocall  goto 70
	uexpr  goto 168
	convtype  goto 71
	comptype  goto 72
	interfacetype  goto 81
	structtype  goto 80
	othertype  goto 75
	fntype  goto 74
	hidden_importsym  goto 11
	fnlitdcl  goto 76

state 63
	uexpr:  '~'.uexpr 

	LLITERAL  shift 68
	LCHAN  shift 78
	LFUNC  shift 125
	LINTERFACE  shift 83
	LMAP  shift 79
	LNAME  shift 10
	LSTRUCT  shift 82
	LCOMM  shift 65
	'+'  shift 60
	'-'  shift 61
	'^'  shift 64
	'*'  shift 58
	'&'  shift 59
	'('  shift 67
	'!'  shift 62
	'~'  shift 63
	'['  shift 77
	'?'  shift 12
	'@'  shift 13
	.  error

	sym  goto 124
	fnliteral  goto 73
	name  goto 69
	pexpr  goto 57
	pexpr_no_paren  goto 66
	pseudocall  goto 70
	uexpr  goto 169
	convtype  goto 71
	comptype  goto 72
	interfacetype  goto 81
	structtype  goto 80
	othertype  goto 75
	fntype  goto 74
	hidden_importsym  goto 11
	fnlitdcl  goto 76

state 64
	uexpr:  '^'.uexpr 

	LLITERAL  shift 68
	LCHAN  shift 78
	LFUNC  shift 125
	LINTERFACE  shift 83
	LMAP  shift 79
	LNAME  shift 10
	LSTRUCT  shift 82
	LCOMM  shift 65
	'+'  shift 60
	'-'  shift 61
	'^'  shift 64
	'*'  shift 58
	'&'  shift 59
	'('  shift 67
	'!'  shift 62
	'~'  shift 63
	'['  shift 77
	'?'  shift 12
	'@'  shift 13
	.  error

	sym  goto 124
	fnliteral  goto 73
	name  goto 69
	pexpr  goto 57
	pexpr_no_paren  goto 66
	pseudocall  goto 70
	uexpr  goto 170
	convtype  goto 71
	comptype  goto 72
	interfacetype  goto 81
	structtype  goto 80
	othertype  goto 75
	fntype  goto 74
	hidden_importsym  goto 11
	fnlitdcl  goto 76

state 65
	uexpr:  LCOMM.uexpr 

	LLITERAL  shift 68
	LCHAN  shift 78
	LFUNC  shift 125
	LINTERFACE  shift 83
	LMAP  shift 79
	LNAME  shift 10
	LSTRUCT  shift 82
	LCOMM  shift 65
	'+'  shift 60
	'-'  shift 61
	'^'  shift 64
	'*'  shift 58
	'&'  shift 59
	'('  shift 67
	'!'  shift 62
	'~'  shift 63
	'['  shift 77
	'?'  shift 12
	'@'  shift 13
	.  error

	sym  goto 124
	fnliteral  goto 73
	name  goto 69
	pexpr  goto 57
	pexpr_no_paren  goto 66
	pseudocall  goto 70
	uexpr  goto 171
	convtype  goto 71
	comptype  goto 72
	interfacetype  goto 81
	structtype  goto 80
	othertype  goto 75
	fntype  goto 74
	hidden_importsym  goto 11
	fnlitdcl  goto 76

state 66
	pexpr_no_paren:  pexpr_no_paren.'{' start_complit braced_keyval_list '}' 
	pexpr:  pexpr_no_paren.    (146)

	'{'  shift 172
	.  reduce 146 (src line 1054)


state 67
	pexpr_no_paren:  '('.expr_or_type ')' '{' start_complit braced_keyval_list '}' 
	pexpr:  '('.expr_or_type ')' 

	LLITERAL  shift 68
	LCHAN  shift 78
	LFUNC  shift 125
	LINTERFACE  shift 83
	LMAP  shift 79
	LNAME  shift 10
	LSTRUCT  shift 82
	LCOMM  shift 180
	'+'  shift 60
	'-'  shift 61
	'^'  shift 64
	'*'  shift 179
	'&'  shift 59
	'('  shift 67
	'!'  shift 62
	'~'  shift 63
	'['  shift 77
	'?'  shift 12
	'@'  shift 13
	.  error

	sym  goto 124
	expr  goto 174
	expr_or_type  goto 173
	fnliteral  goto 73
	name  goto 69
	non_expr_type  goto 175
	pexpr  goto 57
	pexpr_no_paren  goto 66
	pseudocall  goto 70
	uexpr  goto 55
	convtype  goto 71
	comptype  goto 72
	interfacetype  goto 81
	structtype  goto 80
	recvchantype  goto 176
	othertype  goto 178
	fntype  goto 177
	hidden_importsym  goto 11
	fnlitdcl  goto 76

state 68
	pexpr_no_paren:  LLITERAL.    (126)

	.  reduce 126 (src line 941)


state 69
	pexpr_no_paren:  name.    (127)

	.  reduce 127 (src line 946)


state 70
	pexpr_no_paren:  pseudocall.    (134)

	.  reduce 134 (src line 984)


state 71
	pexpr_no_paren:  convtype.'(' expr ocomma ')' 

	'('  shift 181
	.  error


state 72
	pexpr_no_paren:  comptype.lbrace start_complit braced_keyval_list '}' 

	LBODY  shift 183
	'{'  shift 184
	.  error

	lbrace  goto 182

state 73
	pexpr_no_paren:  fnliteral.    (139)

	.  reduce 139 (src line 1011)


state 74
	convtype:  fntype.    (181)
	fnlitdcl:  fntype.    (216)

	'('  reduce 181 (src line 1220)
	.  reduce 216 (src line 1516)


state 75
	convtype:  othertype.    (182)
	comptype:  othertype.    (183)

	'('  reduce 182 (src line 1222)
	.  reduce 183 (src line 1224)


state 76
	fnliteral:  fnlitdcl.lbrace stmt_list '}' 
	fnliteral:  fnlitdcl.error 

	error  shift 186
	LBODY  shift 183
	'{'  shift 184
	.  error

	lbrace  goto 185

state 77
	othertype:  '['.oexpr ']' ntype 
	othertype:  '['.LDDD ']' ntype 
	oexpr: .    (291)

	LLITERAL  shift 68
	LCHAN  shift 78
	LDDD  shift 188
	LFUNC  shift 125
	LINTERFACE  shift 83
	LMAP  shift 79
	LNAME  shift 10
	LSTRUCT  shift 82
	LCOMM  shift 65
	'+'  shift 60
	'-'  shift 61
	'^'  shift 64
	'*'  shift 58
	'&'  shift 59
	'('  shift 67
	'!'  shift 62
	'~'  shift 63
	'['  shift 77
	'?'  shift 12
	'@'  shift 13
	.  reduce 291 (src line 1931)

	sym  goto 124
	expr  goto 189
	fnliteral  goto 73
	name  goto 69
	oexpr  goto 187
	pexpr  goto 57
	pexpr_no_paren  goto 66
	pseudocall  goto 70
	uexpr  goto 55
	convtype  goto 71
	comptype  goto 72
	interfacetype  goto 81
	structtype  goto 80
	othertype  goto 75
	fntype  goto 74
	hidden_importsym  goto 11
	fnlitdcl  goto 76

state 78
	othertype:  LCHAN.non_recvchantype 
	othertype:  LCHAN.LCOMM ntype 

	LCHAN  shift 78
	LFUNC  shift 125
	LINTERFACE  shift 83
	LMAP  shift 79
	LNAME  shift 10
	LSTRUCT  shift 82
	LCOMM  shift 191
	'*'  shift 197
	'('  shift 196
	'['  shift 77
	'?'  shift 12
	'@'  shift 13
	.  error

	sym  goto 124
	dotname  goto 195
	name  goto 198
	interfacetype  goto 81
	structtype  goto 80
	ptrtype  goto 194
	non_recvchantype  goto 190
	othertype  goto 193
	fntype  goto 192
	hidden_importsym  goto 11

state 79
	othertype:  LMAP.'[' ntype ']' ntype 

	'['  shift 199
	.  error


state 80
	othertype:  structtype.    (196)

	.  reduce 196 (src line 1272)


state 81
	othertype:  interfacetype.    (197)

	.  reduce 197 (src line 1273)


state 82
	structtype:  LSTRUCT.lbrace structdcl_list osemi '}' 
	structtype:  LSTRUCT.lbrace '}' 

	LBODY  shift 183
	'{'  shift 184
	.  error

	lbrace  goto 200

state 83
	interfacetype:  LINTERFACE.lbrace interfacedcl_list osemi '}' 
	interfacetype:  LINTERFACE.lbrace '}' 

	LBODY  shift 183
	'{'  shift 184
	.  error

	lbrace  goto 201

state 84
	imports:  imports import ';'.    (7)

	.  reduce 7 (src line 166)


state 85
	import:  LIMPORT import_stmt.    (8)

	.  reduce 8 (src line 168)


state 86
	import:  LIMPORT '('.import_stmt_list osemi ')' 
	import:  LIMPORT '('.')' 

	LLITERAL  shift 88
	LNAME  shift 10
	')'  shift 203
	'.'  shift 90
	'?'  shift 12
	'@'  shift 13
	.  error

	import_here  goto 87
	sym  goto 89
	hidden_importsym  goto 11
	import_stmt  goto 204
	import_stmt_list  goto 202

state 87
	import_stmt:  import_here.import_package import_there 
	import_stmt:  import_here.import_there 
	$$21: .    (21)

	LPACKAGE  shift 7
	.  reduce 21 (src line 272)

	import_package  goto 205
	import_there  goto 206
	$$21  goto 15

state 88
	import_here:  LLITERAL.    (15)

	.  reduce 15 (src line 224)


state 89
	import_here:  sym.LLITERAL 

	LLITERAL  shift 207
	.  error


state 90
	import_here:  '.'.LLITERAL 

	LLITERAL  shift 208
	.  error


state 91
	hidden_importsym:  '@' LLITERAL '.'.LNAME 
	hidden_importsym:  '@' LLITERAL '.'.'?' 

	LNAME  shift 209
	'?'  shift 210
	.  error


state 92
	import_there:  $$21 hidden_import_list '$'.'$' 

	'$'  shift 211
	.  error


state 93
	hidden_import_list:  hidden_import_list hidden_import.    (346)

	.  reduce 346 (src line 2242)


state 94
	hidden_import:  LIMPORT.LNAME LLITERAL ';' 

	LNAME  shift 212
	.  error


state 95
	hidden_import:  LVAR.hidden_pkg_importsym hidden_type ';' 

	'@'  shift 13
	.  error

	hidden_importsym  goto 214
	hidden_pkg_importsym  goto 213

state 96
	hidden_import:  LCONST.hidden_pkg_importsym '=' hidden_constant ';' 
	hidden_import:  LCONST.hidden_pkg_importsym hidden_type '=' hidden_constant ';' 

	'@'  shift 13
	.  error

	hidden_importsym  goto 214
	hidden_pkg_importsym  goto 215

state 97
	hidden_import:  LTYPE.hidden_pkgtype hidden_type ';' 

	'@'  shift 13
	.  error

	hidden_importsym  goto 214
	hidden_pkg_importsym  goto 217
	hidden_pkgtype  goto 216

state 98
	hidden_import:  LFUNC.hidden_fndcl fnbody ';' 

	'('  shift 220
	'@'  shift 13
	.  error

	hidden_fndcl  goto 218
	hidden_importsym  goto 214
	hidden_pkg_importsym  goto 219

state 99
	import_package:  LPACKAGE LNAME import_safety ';'.    (18)

	.  reduce 18 (src line 247)


state 100
	xdcl_list:  xdcl_list xdcl ';'.    (220)

	.  reduce 220 (src line 1543)


state 101
	common_dcl:  LVAR vardcl.    (28)

	.  reduce 28 (src line 305)


state 102
	common_dcl:  LVAR '('.vardcl_list osemi ')' 
	common_dcl:  LVAR '('.')' 

	LNAME  shift 10
	')'  shift 222
	'?'  shift 12
	'@'  shift 13
	.  error

	sym  goto 105
	dcl_name  goto 104
	dcl_name_list  goto 103
	vardcl  goto 223
	vardcl_list  goto 221
	hidden_importsym  goto 11

state 103
	vardcl:  dcl_name_list.ntype 
	vardcl:  dcl_name_list.ntype '=' expr_list 
	vardcl:  dcl_name_list.'=' expr_list 
	dcl_name_list:  dcl_name_list.',' dcl_name 

	LCHAN  shift 78
	LFUNC  shift 125
	LINTERFACE  shift 83
	LMAP  shift 79
	LNAME  shift 10
	LSTRUCT  shift 82
	LCOMM  shift 233
	'*'  shift 197
	'('  shift 232
	'='  shift 225
	'['  shift 77
	'?'  shift 12
	'@'  shift 13
	','  shift 226
	.  error

	sym  goto 124
	ntype  goto 224
	dotname  goto 231
	name  goto 198
	interfacetype  goto 81
	structtype  goto 80
	ptrtype  goto 230
	recvchantype  goto 227
	othertype  goto 229
	fntype  goto 228
	hidden_importsym  goto 11

state 104
	dcl_name_list:  dcl_name.    (275)

	.  reduce 275 (src line 1862)


state 105
	dcl_name:  sym.    (154)

	.  reduce 154 (src line 1101)


state 106
	common_dcl:  lconst constdcl.    (31)

	.  reduce 31 (src line 318)


state 107
	common_dcl:  lconst '('.constdcl osemi ')' 
	common_dcl:  lconst '('.constdcl ';' constdcl_list osemi ')' 
	common_dcl:  lconst '('.')' 

	LNAME  shift 10
	')'  shift 235
	'?'  shift 12
	'@'  shift 13
	.  error

	sym  goto 105
	dcl_name  goto 104
	dcl_name_list  goto 108
	constdcl  goto 234
	hidden_importsym  goto 11

state 108
	constdcl:  dcl_name_list.ntype '=' expr_list 
	constdcl:  dcl_name_list.'=' expr_list 
	dcl_name_list:  dcl_name_list.',' dcl_name 

	LCHAN  shift 78
	LFUNC  shift 125
	LINTERFACE  shift 83
	LMAP  shift 79
	LNAME  shift 10
	LSTRUCT  shift 82
	LCOMM  shift 233
	'*'  shift 197
	'('  shift 232
	'='  shift 237
	'['  shift 77
	'?'  shift 12
	'@'  shift 13
	','  shift 226
	.  error

	sym  goto 124
	ntype  goto 236
	dotname  goto 231
	name  goto 198
	interfacetype  goto 81
	structtype  goto 80
	ptrtype  goto 230
	recvchantype  goto 227
	othertype  goto 229
	fntype  goto 228
	hidden_importsym  goto 11

state 109
	common_dcl:  LTYPE typedcl.    (35)

	.  reduce 35 (src line 341)


state 110
	common_dcl:  LTYPE '('.typedcl_list osemi ')' 
	common_dcl:  LTYPE '('.')' 

	LNAME  shift 10
	')'  shift 239
	'?'  shift 12
	'@'  shift 13
	.  error

	sym  goto 112
	typedclname  goto 111
	typedcl  goto 240
	typedcl_list  goto 238
	hidden_importsym  goto 11

state 111
	typedcl:  typedclname.ntype 

	LCHAN  shift 78
	LFUNC  shift 125
	LINTERFACE  shift 83
	LMAP  shift 79
	LNAME  shift 10
	LSTRUCT  shift 82
	LCOMM  shift 233
	'*'  shift 197
	'('  shift 232
	'['  shift 77
	'?'  shift 12
	'@'  shift 13
	.  error

	sym  goto 124
	ntype  goto 241
	dotname  goto 231
	name  goto 198
	interfacetype  goto 81
	structtype  goto 80
	ptrtype  goto 230
	recvchantype  goto 227
	othertype  goto 229
	fntype  goto 228
	hidden_importsym  goto 11

state 112
	typedclname:  sym.    (47)

	.  reduce 47 (src line 395)


state 113
	xfndcl:  LFUNC fndcl.fnbody 
	fnbody: .    (211)

	'{'  shift 243
	.  reduce 211 (src line 1489)

	fnbody  goto 242

state 114
	fndcl:  '('.oarg_type_list_ocomma ')' sym '(' oarg_type_list_ocomma ')' fnres 
	fntype:  LFUNC '('.oarg_type_list_ocomma ')' fnres 
	oarg_type_list_ocomma: .    (250)

	LCHAN  shift 78
	LDDD  shift 251
	LFUNC  shift 125
	LINTERFACE  shift 83
	LMAP  shift 79
	LNAME  shift 10
	LSTRUCT  shift 82
	LCOMM  shift 233
	'*'  shift 197
	'('  shift 232
	'['  shift 77
	'?'  shift 12
	'@'  shift 13
	.  reduce 250 (src line 1739)

	sym  goto 248
	ntype  goto 250
	arg_type  goto 246
	dotname  goto 231
	name  goto 198
	name_or_type  goto 247
	oarg_type_list_ocomma  goto 244
	arg_type_list  goto 245
	dotdotdot  goto 249
	interfacetype  goto 81
	structtype  goto 80
	ptrtype  goto 230
	recvchantype  goto 227
	othertype  goto 229
	fntype  goto 228
	hidden_importsym  goto 11

state 115
	fndcl:  LLT.sym LGT sym '(' oarg_type_list_ocomma ')' fnres 

	LNAME  shift 10
	'?'  shift 12
	'@'  shift 13
	.  error

	sym  goto 252
	hidden_importsym  goto 11

state 116
	fndcl:  sym.'(' oarg_type_list_ocomma ')' fnres 

	'('  shift 253
	.  error


state 117
	non_dcl_stmt:  labelname ':'.$$262 stmt 
	$$262: .    (262)

	.  reduce 262 (src line 1772)

	$$262  goto 254

state 118
	non_dcl_stmt:  LBREAK onew_name.    (265)

	.  reduce 265 (src line 1794)


state 119
	onew_name:  new_name.    (156)

	.  reduce 156 (src line 1111)


state 120
	new_name:  sym.    (153)

	.  reduce 153 (src line 1091)


state 121
	non_dcl_stmt:  LCONTINUE onew_name.    (266)

	.  reduce 266 (src line 1798)


state 122
	pexpr_no_paren:  pseudocall.    (134)
	non_dcl_stmt:  LGO pseudocall.    (267)

	'('  reduce 134 (src line 984)
	'.'  reduce 134 (src line 984)
	'{'  reduce 134 (src line 984)
	'['  reduce 134 (src line 984)
	.  reduce 267 (src line 1802)


state 123
	pseudocall:  pexpr.'(' ')' 
	pseudocall:  pexpr.'(' expr_or_type_list ocomma ')' 
	pseudocall:  pexpr.'(' expr_or_type_list LDDD ocomma ')' 
	pexpr_no_paren:  pexpr.'.' sym 
	pexpr_no_paren:  pexpr.'.' '(' expr_or_type ')' 
	pexpr_no_paren:  pexpr.'.' '(' LTYPE ')' 
	pexpr_no_paren:  pexpr.'[' expr ']' 
	pexpr_no_paren:  pexpr.'[' oexpr ':' oexpr ']' 
	pexpr_no_paren:  pexpr.'[' oexpr ':' oexpr ':' oexpr ']' 

	'('  shift 161
	'.'  shift 162
	'['  shift 163
	.  error


state 124
	name:  sym.    (162)

	.  reduce 162 (src line 1158)


state 125
	fntype:  LFUNC.'(' oarg_type_list_ocomma ')' fnres 

	'('  shift 255
	.  error


state 126
	pexpr_no_paren:  pseudocall.    (134)
	non_dcl_stmt:  LDEFER pseudocall.    (268)

	'('  reduce 134 (src line 984)
	'.'  reduce 134 (src line 984)
	'{'  reduce 134 (src line 984)
	'['  reduce 134 (src line 984)
	.  reduce 268 (src line 1806)


state 127
	non_dcl_stmt:  LGOTO new_name.    (269)

	.  reduce 269 (src line 1810)


state 128
	non_dcl_stmt:  LRETURN oexpr_list.    (270)

	.  reduce 270 (src line 1815)


state 129
	expr_list:  expr_list.',' expr 
	oexpr_list:  expr_list.    (294)

	','  shift 156
	.  reduce 294 (src line 1941)


state 130
	expr:  expr.LOROR expr 
	expr:  expr.LANDAND expr 
	expr:  expr.LEQ expr 
	expr:  expr.LNE expr 
	expr:  expr.LLT expr 
	expr:  expr.LLE expr 
	expr:  expr.LGE expr 
	expr:  expr.LGT expr 
	expr:  expr.'+' expr 
	expr:  expr.'-' expr 
	expr:  expr.'|' expr 
	expr:  expr.'^' expr 
	expr:  expr.'*' expr 
	expr:  expr.'/' expr 
	expr:  expr.'%' expr 
	expr:  expr.'&' expr 
	expr:  expr.LANDNOT expr 
	expr:  expr.LLSH expr 
	expr:  expr.LRSH expr 
	expr:  expr.LCOMM expr 
	expr_list:  expr.    (277)

	LANDAND  shift 135
	LANDNOT  shift 150
	LCOMM  shift 153
	LEQ  shift 136
	LGE  shift 140
	LGT  shift 141
	LLE  shift 139
	LLSH  shift 151
	LLT  shift 138
	LNE  shift 137
	LOROR  shift 134
	LRSH  shift 152
	'+'  shift 142
	'-'  shift 143
	'|'  shift 144
	'^'  shift 145
	'*'  shift 146
	'/'  shift 147
	'%'  shift 148
	'&'  shift 149
	.  reduce 277 (src line 1872)


state 131
	simple_stmt:  expr LASOP.expr 

	LLITERAL  shift 68
	LCHAN  shift 78
	LFUNC  shift 125
	LINTERFACE  shift 83
	LMAP  shift 79
	LNAME  shift 10
	LSTRUCT  shift 82
	LCOMM  shift 65
	'+'  shift 60
	'-'  shift 61
	'^'  shift 64
	'*'  shift 58
	'&'  shift 59
	'('  shift 67
	'!'  shift 62
	'~'  shift 63
	'['  shift 77
	'?'  shift 12
	'@'  shift 13
	.  error

	sym  goto 124
	expr  goto 256
	fnliteral  goto 73
	name  goto 69
	pexpr  goto 57
	pexpr_no_paren  goto 66
	pseudocall  goto 70
	uexpr  goto 55
	convtype  goto 71
	comptype  goto 72
	interfacetype  goto 81
	structtype  goto 80
	othertype  goto 75
	fntype  goto 74
	hidden_importsym  goto 11
	fnlitdcl  goto 76

state 132
	simple_stmt:  expr LINC.    (53)

	.  reduce 53 (src line 460)


state 133
	simple_stmt:  expr LDEC.    (54)

	.  reduce 54 (src line 466)


state 134
	expr:  expr LOROR.expr 

	LLITERAL  shift 68
	LCHAN  shift 78
	LFUNC  shift 125
	LINTERFACE  shift 83
	LMAP  shift 79
	LNAME  shift 10
	LSTRUCT  shift 82
	LCOMM  shift 65
	'+'  shift 60
	'-'  shift 61
	'^'  shift 64
	'*'  shift 58
	'&'  shift 59
	'('  shift 67
	'!'  shift 62
	'~'  shift 63
	'['  shift 77
	'?'  shift 12
	'@'  shift 13
	.  error

	sym  goto 124
	expr  goto 257
	fnliteral  goto 73
	name  goto 69
	pexpr  goto 57
	pexpr_no_paren  goto 66
	pseudocall  goto 70
	uexpr  goto 55
	convtype  goto 71
	comptype  goto 72
	interfacetype  goto 81
	structtype  goto 80
	othertype  goto 75
	fntype  goto 74
	hidden_importsym  goto 11
	fnlitdcl  goto 76

state 135
	expr:  expr LANDAND.expr 

	LLITERAL  shift 68
	LCHAN  shift 78
	LFUNC  shift 125
	LINTERFACE  shift 83
	LMAP  shift 79
	LNAME  shift 10
	LSTRUCT  shift 82
	LCOMM  shift 65
	'+'  shift 60
	'-'  shift 61
	'^'  shift 64
	'*'  shift 58
	'&'  shift 59
	'('  shift 67
	'!'  shift 62
	'~'  shift 63
	'['  shift 77
	'?'  shift 12
	'@'  shift 13
	.  error

	sym  goto 124
	expr  goto 258
	fnliteral  goto 73
	name  goto 69
	pexpr  goto 57
	pexpr_no_paren  goto 66
	pseudocall  goto 70
	uexpr  goto 55
	convtype  goto 71
	comptype  goto 72
	interfacetype  goto 81
	structtype  goto 80
	othertype  goto 75
	fntype  goto 74
	hidden_importsym  goto 11
	fnlitdcl  goto 76

state 136
	expr:  expr LEQ.expr 

	LLITERAL  shift 68
	LCHAN  shift 78
	LFUNC  shift 125
	LINTERFACE  shift 83
	LMAP  shift 79
	LNAME  shift 10
	LSTRUCT  shift 82
	LCOMM  shift 65
	'+'  shift 60
	'-'  shift 61
	'^'  shift 64
	'*'  shift 58
	'&'  shift 59
	'('  shift 67
	'!'  shift 62
	'~'  shift 63
	'['  shift 77
	'?'  shift 12
	'@'  shift 13
	.  error

	sym  goto 124
	expr  goto 259
	fnliteral  goto 73
	name  goto 69
	pexpr  goto 57
	pexpr_no_paren  goto 66
	pseudocall  goto 70
	uexpr  goto 55
	convtype  goto 71
	comptype  goto 72
	interfacetype  goto 81
	structtype  goto 80
	othertype  goto 75
	fntype  goto 74
	hidden_importsym  goto 11
	fnlitdcl  goto 76

state 137
	expr:  expr LNE.expr 

	LLITERAL  shift 68
	LCHAN  shift 78
	LFUNC  shift 125
	LINTERFACE  shift 83
	LMAP  shift 79
	LNAME  shift 10
	LSTRUCT  shift 82
	LCOMM  shift 65
	'+'  shift 60
	'-'  shift 61
	'^'  shift 64
	'*'  shift 58
	'&'  shift 59
	'('  shift 67
	'!'  shift 62
	'~'  shift 63
	'['  shift 77
	'?'  shift 12
	'@'  shift 13
	.  error

	sym  goto 124
	expr  goto 260
	fnliteral  goto 73
	name  goto 69
	pexpr  goto 57
	pexpr_no_paren  goto 66
	pseudocall  goto 70
	uexpr  goto 55
	convtype  goto 71
	comptype  goto 72
	interfacetype  goto 81
	structtype  goto 80
	othertype  goto 75
	fntype  goto 74
	hidden_importsym  goto 11
	fnlitdcl  goto 76

state 138
	expr:  expr LLT.expr 

	LLITERAL  shift 68
	LCHAN  shift 78
	LFUNC  shift 125
	LINTERFACE  shift 83
	LMAP  shift 79
	LNAME  shift 10
	LSTRUCT  shift 82
	LCOMM  shift 65
	'+'  shift 60
	'-'  shift 61
	'^'  shift 64
	'*'  shift 58
	'&'  shift 59
	'('  shift 67
	'!'  shift 62
	'~'  shift 63
	'['  shift 77
	'?'  shift 12
	'@'  shift 13
	.  error

	sym  goto 124
	expr  goto 261
	fnliteral  goto 73
	name  goto 69
	pexpr  goto 57
	pexpr_no_paren  goto 66
	pseudocall  goto 70
	uexpr  goto 55
	convtype  goto 71
	comptype  goto 72
	interfacetype  goto 81
	structtype  goto 80
	othertype  goto 75
	fntype  goto 74
	hidden_importsym  goto 11
	fnlitdcl  goto 76

state 139
	expr:  expr LLE.expr 

	LLITERAL  shift 68
	LCHAN  shift 78
	LFUNC  shift 125
	LINTERFACE  shift 83
	LMAP  shift 79
	LNAME  shift 10
	LSTRUCT  shift 82
	LCOMM  shift 65
	'+'  shift 60
	'-'  shift 61
	'^'  shift 64
	'*'  shift 58
	'&'  shift 59
	'('  shift 67
	'!'  shift 62
	'~'  shift 63
	'['  shift 77
	'?'  shift 12
	'@'  shift 13
	.  error

	sym  goto 124
	expr  goto 262
	fnliteral  goto 73
	name  goto 69
	pexpr  goto 57
	pexpr_no_paren  goto 66
	pseudocall  goto 70
	uexpr  goto 55
	convtype  goto 71
	comptype  goto 72
	interfacetype  goto 81
	structtype  goto 80
	othertype  goto 75
	fntype  goto 74
	hidden_importsym  goto 11
	fnlitdcl  goto 76

state 140
	expr:  expr LGE.expr 

	LLITERAL  shift 68
	LCHAN  shift 78
	LFUNC  shift 125
	LINTERFACE  shift 83
	LMAP  shift 79
	LNAME  shift 10
	LSTRUCT  shift 82
	LCOMM  shift 65
	'+'  shift 60
	'-'  shift 61
	'^'  shift 64
	'*'  shift 58
	'&'  shift 59
	'('  shift 67
	'!'  shift 62
	'~'  shift 63
	'['  shift 77
	'?'  shift 12
	'@'  shift 13
	.  error

	sym  goto 124
	expr  goto 263
	fnliteral  goto 73
	name  goto 69
	pexpr  goto 57
	pexpr_no_paren  goto 66
	pseudocall  goto 70
	uexpr  goto 55
	convtype  goto 71
	comptype  goto 72
	interfacetype  goto 81
	structtype  goto 80
	othertype  goto 75
	fntype  goto 74
	hidden_importsym  goto 11
	fnlitdcl  goto 76

state 141
	expr:  expr LGT.expr 

	LLITERAL  shift 68
	LCHAN  shift 78
	LFUNC  shift 125
	LINTERFACE  shift 83
	LMAP  shift 79
	LNAME  shift 10
	LSTRUCT  shift 82
	LCOMM  shift 65
	'+'  shift 60
	'-'  shift 61
	'^'  shift 64
	'*'  shift 58
	'&'  shift 59
	'('  shift 67
	'!'  shift 62
	'~'  shift 63
	'['  shift 77
	'?'  shift 12
	'@'  shift 13
	.  error

	sym  goto 124
	expr  goto 264
	fnliteral  goto 73
	name  goto 69
	pexpr  goto 57
	pexpr_no_paren  goto 66
	pseudocall  goto 70
	uexpr  goto 55
	convtype  goto 71
	comptype  goto 72
	interfacetype  goto 81
	structtype  goto 80
	othertype  goto 75
	fntype  goto 74
	hidden_importsym  goto 11
	fnlitdcl  goto 76

state 142
	expr:  expr '+'.expr 

	LLITERAL  shift 68
	LCHAN  shift 78
	LFUNC  shift 125
	LINTERFACE  shift 83
	LMAP  shift 79
	LNAME  shift 10
	LSTRUCT  shift 82
	LCOMM  shift 65
	'+'  shift 60
	'-'  shift 61
	'^'  shift 64
	'*'  shift 58
	'&'  shift 59
	'('  shift 67
	'!'  shift 62
	'~'  shift 63
	'['  shift 77
	'?'  shift 12
	'@'  shift 13
	.  error

	sym  goto 124
	expr  goto 265
	fnliteral  goto 73
	name  goto 69
	pexpr  goto 57
	pexpr_no_paren  goto 66
	pseudocall  goto 70
	uexpr  goto 55
	convtype  goto 71
	comptype  goto 72
	interfacetype  goto 81
	structtype  goto 80
	othertype  goto 75
	fntype  goto 74
	hidden_importsym  goto 11
	fnlitdcl  goto 76

state 143
	expr:  expr '-'.expr 

	LLITERAL  shift 68
	LCHAN  shift 78
	LFUNC  shift 125
	LINTERFACE  shift 83
	LMAP  shift 79
	LNAME  shift 10
	LSTRUCT  shift 82
	LCOMM  shift 65
	'+'  shift 60
	'-'  shift 61
	'^'  shift 64
	'*'  shift 58
	'&'  shift 59
	'('  shift 67
	'!'  shift 62
	'~'  shift 63
	'['  shift 77
	'?'  shift 12
	'@'  shift 13
	.  error

	sym  goto 124
	expr  goto 266
	fnliteral  goto 73
	name  goto 69
	pexpr  goto 57
	pexpr_no_paren  goto 66
	pseudocall  goto 70
	uexpr  goto 55
	convtype  goto 71
	comptype  goto 72
	interfacetype  goto 81
	structtype  goto 80
	othertype  goto 75
	fntype  goto 74
	hidden_importsym  goto 11
	fnlitdcl  goto 76

state 144
	expr:  expr '|'.expr 

	LLITERAL  shift 68
	LCHAN  shift 78
	LFUNC  shift 125
	LINTERFACE  shift 83
	LMAP  shift 79
	LNAME  shift 10
	LSTRUCT  shift 82
	LCOMM  shift 65
	'+'  shift 60
	'-'  shift 61
	'^'  shift 64
	'*'  shift 58
	'&'  shift 59
	'('  shift 67
	'!'  shift 62
	'~'  shift 63
	'['  shift 77
	'?'  shift 12
	'@'  shift 13
	.  error

	sym  goto 124
	expr  goto 267
	fnliteral  goto 73
	name  goto 69
	pexpr  goto 57
	pexpr_no_paren  goto 66
	pseudocall  goto 70
	uexpr  goto 55
	convtype  goto 71
	comptype  goto 72
	interfacetype  goto 81
	structtype  goto 80
	othertype  goto 75
	fntype  goto 74
	hidden_importsym  goto 11
	fnlitdcl  goto 76

state 145
	expr:  expr '^'.expr 

	LLITERAL  shift 68
	LCHAN  shift 78
	LFUNC  shift 125
	LINTERFACE  shift 83
	LMAP  shift 79
	LNAME  shift 10
	LSTRUCT  shift 82
	LCOMM  shift 65
	'+'  shift 60
	'-'  shift 61
	'^'  shift 64
	'*'  shift 58
	'&'  shift 59
	'('  shift 67
	'!'  shift 62
	'~'  shift 63
	'['  shift 77
	'?'  shift 12
	'@'  shift 13
	.  error

	sym  goto 124
	expr  goto 268
	fnliteral  goto 73
	name  goto 69
	pexpr  goto 57
	pexpr_no_paren  goto 66
	pseudocall  goto 70
	uexpr  goto 55
	convtype  goto 71
	comptype  goto 72
	interfacetype  goto 81
	structtype  goto 80
	othertype  goto 75
	fntype  goto 74
	hidden_importsym  goto 11
	fnlitdcl  goto 76

state 146
	expr:  expr '*'.expr 

	LLITERAL  shift 68
	LCHAN  shift 78
	LFUNC  shift 125
	LINTERFACE  shift 83
	LMAP  shift 79
	LNAME  shift 10
	LSTRUCT  shift 82
	LCOMM  shift 65
	'+'  shift 60
	'-'  shift 61
	'^'  shift 64
	'*'  shift 58
	'&'  shift 59
	'('  shift 67
	'!'  shift 62
	'~'  shift 63
	'['  shift 77
	'?'  shift 12
	'@'  shift 13
	.  error

	sym  goto 124
	expr  goto 269
	fnliteral  goto 73
	name  goto 69
	pexpr  goto 57
	pexpr_no_paren  goto 66
	pseudocall  goto 70
	uexpr  goto 55
	convtype  goto 71
	comptype  goto 72
	interfacetype  goto 81
	structtype  goto 80
	othertype  goto 75
	fntype  goto 74
	hidden_importsym  goto 11
	fnlitdcl  goto 76

state 147
	expr:  expr '/'.expr 

	LLITERAL  shift 68
	LCHAN  shift 78
	LFUNC  shift 125
	LINTERFACE  shift 83
	LMAP  shift 79
	LNAME  shift 10
	LSTRUCT  shift 82
	LCOMM  shift 65
	'+'  shift 60
	'-'  shift 61
	'^'  shift 64
	'*'  shift 58
	'&'  shift 59
	'('  shift 67
	'!'  shift 62
	'~'  shift 63
	'['  shift 77
	'?'  shift 12
	'@'  shift 13
	.  error

	sym  goto 124
	expr  goto 270
	fnliteral  goto 73
	name  goto 69
	pexpr  goto 57
	pexpr_no_paren  goto 66
	pseudocall  goto 70
	uexpr  goto 55
	convtype  goto 71
	comptype  goto 72
	interfacetype  goto 81
	structtype  goto 80
	othertype  goto 75
	fntype  goto 74
	hidden_importsym  goto 11
	fnlitdcl  goto 76

state 148
	expr:  expr '%'.expr 

	LLITERAL  shift 68
	LCHAN  shift 78
	LFUNC  shift 125
	LINTERFACE  shift 83
	LMAP  shift 79
	LNAME  shift 10
	LSTRUCT  shift 82
	LCOMM  shift 65
	'+'  shift 60
	'-'  shift 61
	'^'  shift 64
	'*'  shift 58
	'&'  shift 59
	'('  shift 67
	'!'  shift 62
	'~'  shift 63
	'['  shift 77
	'?'  shift 12
	'@'  shift 13
	.  error

	sym  goto 124
	expr  goto 271
	fnliteral  goto 73
	name  goto 69
	pexpr  goto 57
	pexpr_no_paren  goto 66
	pseudocall  goto 70
	uexpr  goto 55
	convtype  goto 71
	comptype  goto 72
	interfacetype  goto 81
	structtype  goto 80
	othertype  goto 75
	fntype  goto 74
	hidden_importsym  goto 11
	fnlitdcl  goto 76

state 149
	expr:  expr '&'.expr 

	LLITERAL  shift 68
	LCHAN  shift 78
	LFUNC  shift 125
	LINTERFACE  shift 83
	LMAP  shift 79
	LNAME  shift 10
	LSTRUCT  shift 82
	LCOMM  shift 65
	'+'  shift 60
	'-'  shift 61
	'^'  shift 64
	'*'  shift 58
	'&'  shift 59
	'('  shift 67
	'!'  shift 62
	'~'  shift 63
	'['  shift 77
	'?'  shift 12
	'@'  shift 13
	.  error

	sym  goto 124
	expr  goto 272
	fnliteral  goto 73
	name  goto 69
	pexpr  goto 57
	pexpr_no_paren  goto 66
	pseudocall  goto 70
	uexpr  goto 55
	convtype  goto 71
	comptype  goto 72
	interfacetype  goto 81
	structtype  goto 80
	othertype  goto 75
	fntype  goto 74
	hidden_importsym  goto 11
	fnlitdcl  goto 76

state 150
	expr:  expr LANDNOT.expr 

	LLITERAL  shift 68
	LCHAN  shift 78
	LFUNC  shift 125
	LINTERFACE  shift 83
	LMAP  shift 79
	LNAME  shift 10
	LSTRUCT  shift 82
	LCOMM  shift 65
	'+'  shift 60
	'-'  shift 61
	'^'  shift 64
	'*'  shift 58
	'&'  shift 59
	'('  shift 67
	'!'  shift 62
	'~'  shift 63
	'['  shift 77
	'?'  shift 12
	'@'  shift 13
	.  error

	sym  goto 124
	expr  goto 273
	fnliteral  goto 73
	name  goto 69
	pexpr  goto 57
	pexpr_no_paren  goto 66
	pseudocall  goto 70
	uexpr  goto 55
	convtype  goto 71
	comptype  goto 72
	interfacetype  goto 81
	structtype  goto 80
	othertype  goto 75
	fntype  goto 74
	hidden_importsym  goto 11
	fnlitdcl  goto 76

state 151
	expr:  expr LLSH.expr 

	LLITERAL  shift 68
	LCHAN  shift 78
	LFUNC  shift 125
	LINTERFACE  shift 83
	LMAP  shift 79
	LNAME  shift 10
	LSTRUCT  shift 82
	LCOMM  shift 65
	'+'  shift 60
	'-'  shift 61
	'^'  shift 64
	'*'  shift 58
	'&'  shift 59
	'('  shift 67
	'!'  shift 62
	'~'  shift 63
	'['  shift 77
	'?'  shift 12
	'@'  shift 13
	.  error

	sym  goto 124
	expr  goto 274
	fnliteral  goto 73
	name  goto 69
	pexpr  goto 57
	pexpr_no_paren  goto 66
	pseudocall  goto 70
	uexpr  goto 55
	convtype  goto 71
	comptype  goto 72
	interfacetype  goto 81
	structtype  goto 80
	othertype  goto 75
	fntype  goto 74
	hidden_importsym  goto 11
	fnlitdcl  goto 76

state 152
	expr:  expr LRSH.expr 

	LLITERAL  shift 68
	LCHAN  shift 78
	LFUNC  shift 125
	LINTERFACE  shift 83
	LMAP  shift 79
	LNAME  shift 10
	LSTRUCT  shift 82
	LCOMM  shift 65
	'+'  shift 60
	'-'  shift 61
	'^'  shift 64
	'*'  shift 58
	'&'  shift 59
	'('  shift 67
	'!'  shift 62
	'~'  shift 63
	'['  shift 77
	'?'  shift 12
	'@'  shift 13
	.  error

	sym  goto 124
	expr  goto 275
	fnliteral  goto 73
	name  goto 69
	pexpr  goto 57
	pexpr_no_paren  goto 66
	pseudocall  goto 70
	uexpr  goto 55
	convtype  goto 71
	comptype  goto 72
	interfacetype  goto 81
	structtype  goto 80
	othertype  goto 75
	fntype  goto 74
	hidden_importsym  goto 11
	fnlitdcl  goto 76

state 153
	expr:  expr LCOMM.expr 

	LLITERAL  shift 68
	LCHAN  shift 78
	LFUNC  shift 125
	LINTERFACE  shift 83
	LMAP  shift 79
	LNAME  shift 10
	LSTRUCT  shift 82
	LCOMM  shift 65
	'+'  shift 60
	'-'  shift 61
	'^'  shift 64
	'*'  shift 58
	'&'  shift 59
	'('  shift 67
	'!'  shift 62
	'~'  shift 63
	'['  shift 77
	'?'  shift 12
	'@'  shift 13
	.  error

	sym  goto 124
	expr  goto 276
	fnliteral  goto 73
	name  goto 69
	pexpr  goto 57
	pexpr_no_paren  goto 66
	pseudocall  goto 70
	uexpr  goto 55
	convtype  goto 71
	comptype  goto 72
	interfacetype  goto 81
	structtype  goto 80
	othertype  goto 75
	fntype  goto 74
	hidden_importsym  goto 11
	fnlitdcl  goto 76

state 154
	simple_stmt:  expr_list '='.expr_list 

	LLITERAL  shift 68
	LCHAN  shift 78
	LFUNC  shift 125
	LINTERFACE  shift 83
	LMAP  shift 79
	LNAME  shift 10
	LSTRUCT  shift 82
	LCOMM  shift 65
	'+'  shift 60
	'-'  shift 61
	'^'  shift 64
	'*'  shift 58
	'&'  shift 59
	'('  shift 67
	'!'  shift 62
	'~'  shift 63
	'['  shift 77
	'?'  shift 12
	'@'  shift 13
	.  error

	sym  goto 124
	expr  goto 130
	fnliteral  goto 73
	name  goto 69
	pexpr  goto 57
	pexpr_no_paren  goto 66
	pseudocall  goto 70
	uexpr  goto 55
	expr_list  goto 277
	convtype  goto 71
	comptype  goto 72
	interfacetype  goto 81
	structtype  goto 80
	othertype  goto 75
	fntype  goto 74
	hidden_importsym  goto 11
	fnlitdcl  goto 76

state 155
	simple_stmt:  expr_list LCOLAS.expr_list 

	LLITERAL  shift 68
	LCHAN  shift 78
	LFUNC  shift 125
	LINTERFACE  shift 83
	LMAP  shift 79
	LNAME  shift 10
	LSTRUCT  shift 82
	LCOMM  shift 65
	'+'  shift 60
	'-'  shift 61
	'^'  shift 64
	'*'  shift 58
	'&'  shift 59
	'('  shift 67
	'!'  shift 62
	'~'  shift 63
	'['  shift 77
	'?'  shift 12
	'@'  shift 13
	.  error

	sym  goto 124
	expr  goto 130
	fnliteral  goto 73
	name  goto 69
	pexpr  goto 57
	pexpr_no_paren  goto 66
	pseudocall  goto 70
	uexpr  goto 55
	expr_list  goto 278
	convtype  goto 71
	comptype  goto 72
	interfacetype  goto 81
	structtype  goto 80
	othertype  goto 75
	fntype  goto 74
	hidden_importsym  goto 11
	fnlitdcl  goto 76

state 156
	expr_list:  expr_list ','.expr 

	LLITERAL  shift 68
	LCHAN  shift 78
	LFUNC  shift 125
	LINTERFACE  shift 83
	LMAP  shift 79
	LNAME  shift 10
	LSTRUCT  shift 82
	LCOMM  shift 65
	'+'  shift 60
	'-'  shift 61
	'^'  shift 64
	'*'  shift 58
	'&'  shift 59
	'('  shift 67
	'!'  shift 62
	'~'  shift 63
	'['  shift 77
	'?'  shift 12
	'@'  shift 13
	.  error

	sym  goto 124
	expr  goto 279
	fnliteral  goto 73
	name  goto 69
	pexpr  goto 57
	pexpr_no_paren  goto 66
	pseudocall  goto 70
	uexpr  goto 55
	convtype  goto 71
	comptype  goto 72
	interfacetype  goto 81
	structtype  goto 80
	othertype  goto 75
	fntype  goto 74
	hidden_importsym  goto 11
	fnlitdcl  goto 76

state 157
	for_stmt:  LFOR $$74.for_body 
	osimple_stmt: .    (295)

	LLITERAL  shift 68
	LCHAN  shift 78
	LFUNC  shift 125
	LINTERFACE  shift 83
	LMAP  shift 79
	LNAME  shift 10
	LRANGE  shift 286
	LSTRUCT  shift 82
	LCOMM  shift 65
	'+'  shift 60
	'-'  shift 61
	'^'  shift 64
	'*'  shift 58
	'&'  shift 59
	'('  shift 67
	'!'  shift 62
	'~'  shift 63
	'['  shift 77
	'?'  shift 12
	'@'  shift 13
	.  reduce 295 (src line 1943)

	sym  goto 124
	expr  goto 48
	fnliteral  goto 73
	for_body  goto 280
	for_header  goto 281
	name  goto 69
	osimple_stmt  goto 282
	pexpr  goto 57
	pexpr_no_paren  goto 66
	pseudocall  goto 70
	range_stmt  goto 283
	simple_stmt  goto 284
	uexpr  goto 55
	expr_list  goto 285
	convtype  goto 71
	comptype  goto 72
	interfacetype  goto 81
	structtype  goto 80
	othertype  goto 75
	fntype  goto 74
	hidden_importsym  goto 11
	fnlitdcl  goto 76

state 158
	switch_stmt:  LSWITCH $$88.if_header $$89 LBODY caseblock_list '}' 
	osimple_stmt: .    (295)

	LLITERAL  shift 68
	LCHAN  shift 78
	LFUNC  shift 125
	LINTERFACE  shift 83
	LMAP  shift 79
	LNAME  shift 10
	LSTRUCT  shift 82
	LCOMM  shift 65
	'+'  shift 60
	'-'  shift 61
	'^'  shift 64
	'*'  shift 58
	'&'  shift 59
	'('  shift 67
	'!'  shift 62
	'~'  shift 63
	'['  shift 77
	'?'  shift 12
	'@'  shift 13
	.  reduce 295 (src line 1943)

	sym  goto 124
	expr  goto 48
	fnliteral  goto 73
	if_header  goto 287
	name  goto 69
	osimple_stmt  goto 288
	pexpr  goto 57
	pexpr_no_paren  goto 66
	pseudocall  goto 70
	simple_stmt  goto 284
	uexpr  goto 55
	expr_list  goto 49
	convtype  goto 71
	comptype  goto 72
	interfacetype  goto 81
	structtype  goto 80
	othertype  goto 75
	fntype  goto 74
	hidden_importsym  goto 11
	fnlitdcl  goto 76

state 159
	select_stmt:  LSELECT $$91.LBODY caseblock_list '}' 

	LBODY  shift 289
	.  error


state 160
	if_stmt:  LIF $$78.if_header $$79 loop_body $$80 elseif_list else 
	osimple_stmt: .    (295)

	LLITERAL  shift 68
	LCHAN  shift 78
	LFUNC  shift 125
	LINTERFACE  shift 83
	LMAP  shift 79
	LNAME  shift 10
	LSTRUCT  shift 82
	LCOMM  shift 65
	'+'  shift 60
	'-'  shift 61
	'^'  shift 64
	'*'  shift 58
	'&'  shift 59
	'('  shift 67
	'!'  shift 62
	'~'  shift 63
	'['  shift 77
	'?'  shift 12
	'@'  shift 13
	.  reduce 295 (src line 1943)

	sym  goto 124
	expr  goto 48
	fnliteral  goto 73
	if_header  goto 290
	name  goto 69
	osimple_stmt  goto 288
	pexpr  goto 57
	pexpr_no_paren  goto 66
	pseudocall  goto 70
	simple_stmt  goto 284
	uexpr  goto 55
	expr_list  goto 49
	convtype  goto 71
	comptype  goto 72
	interfacetype  goto 81
	structtype  goto 80
	othertype  goto 75
	fntype  goto 74
	hidden_importsym  goto 11
	fnlitdcl  goto 76

state 161
	pseudocall:  pexpr '('.')' 
	pseudocall:  pexpr '('.expr_or_type_list ocomma ')' 
	pseudocall:  pexpr '('.expr_or_type_list LDDD ocomma ')' 

	LLITERAL  shift 68
	LCHAN  shift 78
	LFUNC  shift 125
	LINTERFACE  shift 83
	LMAP  shift 79
	LNAME  shift 10
	LSTRUCT  shift 82
	LCOMM  shift 180
	'+'  shift 60
	'-'  shift 61
	'^'  shift 64
	'*'  shift 179
	'&'  shift 59
	'('  shift 67
	')'  shift 291
	'!'  shift 62
	'~'  shift 63
	'['  shift 77
	'?'  shift 12
	'@'  shift 13
	.  error

	sym  goto 124
	expr  goto 174
	expr_or_type  goto 293
	fnliteral  goto 73
	name  goto 69
	non_expr_type  goto 175
	pexpr  goto 57
	pexpr_no_paren  goto 66
	pseudocall  goto 70
	uexpr  goto 55
	expr_or_type_list  goto 292
	convtype  goto 71
	comptype  goto 72
	interfacetype  goto 81
	structtype  goto 80
	recvchantype  goto 176
	othertype  goto 178
	fntype  goto 177
	hidden_importsym  goto 11
	fnlitdcl  goto 76

state 162
	pexpr_no_paren:  pexpr '.'.sym 
	pexpr_no_paren:  pexpr '.'.'(' expr_or_type ')' 
	pexpr_no_paren:  pexpr '.'.'(' LTYPE ')' 

	LNAME  shift 10
	'('  shift 295
	'?'  shift 12
	'@'  shift 13
	.  error

	sym  goto 294
	hidden_importsym  goto 11

state 163
	pexpr_no_paren:  pexpr '['.expr ']' 
	pexpr_no_paren:  pexpr '['.oexpr ':' oexpr ']' 
	pexpr_no_paren:  pexpr '['.oexpr ':' oexpr ':' oexpr ']' 
	oexpr: .    (291)

	LLITERAL  shift 68
	LCHAN  shift 78
	LFUNC  shift 125
	LINTERFACE  shift 83
	LMAP  shift 79
	LNAME  shift 10
	LSTRUCT  shift 82
	LCOMM  shift 65
	'+'  shift 60
	'-'  shift 61
	'^'  shift 64
	'*'  shift 58
	'&'  shift 59
	'('  shift 67
	'!'  shift 62
	'~'  shift 63
	'['  shift 77
	'?'  shift 12
	'@'  shift 13
	.  reduce 291 (src line 1931)

	sym  goto 124
	expr  goto 296
	fnliteral  goto 73
	name  goto 69
	oexpr  goto 297
	pexpr  goto 57
	pexpr_no_paren  goto 66
	pseudocall  goto 70
	uexpr  goto 55
	convtype  goto 71
	comptype  goto 72
	interfacetype  goto 81
	structtype  goto 80
	othertype  goto 75
	fntype  goto 74
	hidden_importsym  goto 11
	fnlitdcl  goto 76

state 164
	uexpr:  '*' uexpr.    (115)

	.  reduce 115 (src line 879)


state 165
	uexpr:  '&' uexpr.    (116)

	.  reduce 116 (src line 883)


state 166
	uexpr:  '+' uexpr.    (117)

	.  reduce 117 (src line 894)


state 167
	uexpr:  '-' uexpr.    (118)

	.  reduce 118 (src line 898)


state 168
	uexpr:  '!' uexpr.    (119)

	.  reduce 119 (src line 902)


state 169
	uexpr:  '~' uexpr.    (120)

	.  reduce 120 (src line 906)


state 170
	uexpr:  '^' uexpr.    (121)

	.  reduce 121 (src line 911)


state 171
	uexpr:  LCOMM uexpr.    (122)

	.  reduce 122 (src line 915)


state 172
	pexpr_no_paren:  pexpr_no_paren '{'.start_complit braced_keyval_list '}' 
	start_complit: .    (140)

	.  reduce 140 (src line 1013)

	start_complit  goto 298

state 173
	pexpr_no_paren:  '(' expr_or_type.')' '{' start_complit braced_keyval_list '}' 
	pexpr:  '(' expr_or_type.')' 

	')'  shift 299
	.  error


state 174
	expr:  expr.LOROR expr 
	expr:  expr.LANDAND expr 
	expr:  expr.LEQ expr 
	expr:  expr.LNE expr 
	expr:  expr.LLT expr 
	expr:  expr.LLE expr 
	expr:  expr.LGE expr 
	expr:  expr.LGT expr 
	expr:  expr.'+' expr 
	expr:  expr.'-' expr 
	expr:  expr.'|' expr 
	expr:  expr.'^' expr 
	expr:  expr.'*' expr 
	expr:  expr.'/' expr 
	expr:  expr.'%' expr 
	expr:  expr.'&' expr 
	expr:  expr.LANDNOT expr 
	expr:  expr.LLSH expr 
	expr:  expr.LRSH expr 
	expr:  expr.LCOMM expr 
	expr_or_type:  expr.    (148)

	LANDAND  shift 135
	LANDNOT  shift 150
	LCOMM  shift 153
	LEQ  shift 136
	LGE  shift 140
	LGT  shift 141
	LLE  shift 139
	LLSH  shift 151
	LLT  shift 138
	LNE  shift 137
	LOROR  shift 134
	LRSH  shift 152
	'+'  shift 142
	'-'  shift 143
	'|'  shift 144
	'^'  shift 145
	'*'  shift 146
	'/'  shift 147
	'%'  shift 148
	'&'  shift 149
	.  reduce 148 (src line 1069)


state 175
	expr_or_type:  non_expr_type.    (149)

	.  reduce 149 (src line 1071)


state 176
	non_expr_type:  recvchantype.    (172)

	.  reduce 172 (src line 1201)


state 177
	non_expr_type:  fntype.    (173)
	convtype:  fntype.    (181)
	fnlitdcl:  fntype.    (216)

	error  reduce 216 (src line 1516)
	LBODY  reduce 216 (src line 1516)
	'('  reduce 181 (src line 1220)
	'{'  reduce 216 (src line 1516)
	.  reduce 173 (src line 1203)


state 178
	non_expr_type:  othertype.    (174)
	convtype:  othertype.    (182)
	comptype:  othertype.    (183)

	LBODY  reduce 183 (src line 1224)
	'('  reduce 182 (src line 1222)
	'{'  reduce 183 (src line 1224)
	.  reduce 174 (src line 1204)


state 179
	uexpr:  '*'.uexpr 
	non_expr_type:  '*'.non_expr_type 

	LLITERAL  shift 68
	LCHAN  shift 78
	LFUNC  shift 125
	LINTERFACE  shift 83
	LMAP  shift 79
	LNAME  shift 10
	LSTRUCT  shift 82
	LCOMM  shift 180
	'+'  shift 60
	'-'  shift 61
	'^'  shift 64
	'*'  shift 179
	'&'  shift 59
	'('  shift 67
	'!'  shift 62
	'~'  shift 63
	'['  shift 77
	'?'  shift 12
	'@'  shift 13
	.  error

	sym  goto 124
	fnliteral  goto 73
	name  goto 69
	non_expr_type  goto 300
	pexpr  goto 57
	pexpr_no_paren  goto 66
	pseudocall  goto 70
	uexpr  goto 164
	convtype  goto 71
	comptype  goto 72
	interfacetype  goto 81
	structtype  goto 80
	recvchantype  goto 176
	othertype  goto 178
	fntype  goto 177
	hidden_importsym  goto 11
	fnlitdcl  goto 76

state 180
	uexpr:  LCOMM.uexpr 
	recvchantype:  LCOMM.LCHAN ntype 

	LLITERAL  shift 68
	LCHAN  shift 301
	LFUNC  shift 125
	LINTERFACE  shift 83
	LMAP  shift 79
	LNAME  shift 10
	LSTRUCT  shift 82
	LCOMM  shift 65
	'+'  shift 60
	'-'  shift 61
	'^'  shift 64
	'*'  shift 58
	'&'  shift 59
	'('  shift 67
	'!'  shift 62
	'~'  shift 63
	'['  shift 77
	'?'  shift 12
	'@'  shift 13
	.  error

	sym  goto 124
	fnliteral  goto 73
	name  goto 69
	pexpr  goto 57
	pexpr_no_paren  goto 66
	pseudocall  goto 70
	uexpr  goto 171
	convtype  goto 71
	comptype  goto 72
	interfacetype  goto 81
	structtype  goto 80
	othertype  goto 75
	fntype  goto 74
	hidden_importsym  goto 11
	fnlitdcl  goto 76

state 181
	pexpr_no_paren:  convtype '('.expr ocomma ')' 

	LLITERAL  shift 68
	LCHAN  shift 78
	LFUNC  shift 125
	LINTERFACE  shift 83
	LMAP  shift 79
	LNAME  shift 10
	LSTRUCT  shift 82
	LCOMM  shift 65
	'+'  shift 60
	'-'  shift 61
	'^'  shift 64
	'*'  shift 58
	'&'  shift 59
	'('  shift 67
	'!'  shift 62
	'~'  shift 63
	'['  shift 77
	'?'  shift 12
	'@'  shift 13
	.  error

	sym  goto 124
	expr  goto 302
	fnliteral  goto 73
	name  goto 69
	pexpr  goto 57
	pexpr_no_paren  goto 66
	pseudocall  goto 70
	uexpr  goto 55
	convtype  goto 71
	comptype  goto 72
	interfacetype  goto 81
	structtype  goto 80
	othertype  goto 75
	fntype  goto 74
	hidden_importsym  goto 11
	fnlitdcl  goto 76

state 182
	pexpr_no_paren:  comptype lbrace.start_complit braced_keyval_list '}' 
	start_complit: .    (140)

	.  reduce 140 (src line 1013)

	start_complit  goto 303

state 183
	lbrace:  LBODY.    (151)

	.  reduce 151 (src line 1076)


state 184
	lbrace:  '{'.    (152)

	.  reduce 152 (src line 1081)


state 185
	fnliteral:  fnlitdcl lbrace.stmt_list '}' 
	stmt: .    (252)

	error  shift 309
	LLITERAL  shift 68
	LBREAK  shift 41
	LCHAN  shift 78
	LCONST  shift 47
	LCONTINUE  shift 42
	LDEFER  shift 44
	LFALL  shift 40
	LFOR  shift 50
	LFUNC  shift 125
	LGO  shift 43
	LGOTO  shift 45
	LIF  shift 53
	LINTERFACE  shift 83
	LMAP  shift 79
	LNAME  shift 10
	LRETURN  shift 46
	LSELECT  shift 52
	LSTRUCT  shift 82
	LSWITCH  shift 51
	LTYPE  shift 32
	LVAR  shift 30
	LCOMM  shift 65
	'+'  shift 60
	'-'  shift 61
	'^'  shift 64
	'*'  shift 58
	'&'  shift 59
	'('  shift 67
	';'  reduce 252 (src line 1751)
	'{'  shift 310
	'}'  reduce 252 (src line 1751)
	'!'  shift 62
	'~'  shift 63
	'['  shift 77
	'?'  shift 12
	'@'  shift 13
	.  error

	sym  goto 56
	stmt  goto 305
	compound_stmt  goto 306
	expr  goto 48
	fnliteral  goto 73
	for_stmt  goto 35
	if_stmt  goto 38
	non_dcl_stmt  goto 308
	labelname  goto 39
	name  goto 69
	new_name  goto 54
	pexpr  goto 57
	pexpr_no_paren  goto 66
	pseudocall  goto 70
	select_stmt  goto 37
	simple_stmt  goto 34
	switch_stmt  goto 36
	uexpr  goto 55
	expr_list  goto 49
	stmt_list  goto 304
	common_dcl  goto 307
	convtype  goto 71
	comptype  goto 72
	interfacetype  goto 81
	structtype  goto 80
	othertype  goto 75
	fntype  goto 74
	hidden_importsym  goto 11
	lconst  goto 31
	fnlitdcl  goto 76

state 186
	fnliteral:  fnlitdcl error.    (218)

	.  reduce 218 (src line 1528)


state 187
	othertype:  '[' oexpr.']' ntype 

	']'  shift 311
	.  error


state 188
	othertype:  '[' LDDD.']' ntype 

	']'  shift 312
	.  error


state 189
	expr:  expr.LOROR expr 
	expr:  expr.LANDAND expr 
	expr:  expr.LEQ expr 
	expr:  expr.LNE expr 
	expr:  expr.LLT expr 
	expr:  expr.LLE expr 
	expr:  expr.LGE expr 
	expr:  expr.LGT expr 
	expr:  expr.'+' expr 
	expr:  expr.'-' expr 
	expr:  expr.'|' expr 
	expr:  expr.'^' expr 
	expr:  expr.'*' expr 
	expr:  expr.'/' expr 
	expr:  expr.'%' expr 
	expr:  expr.'&' expr 
	expr:  expr.LANDNOT expr 
	expr:  expr.LLSH expr 
	expr:  expr.LRSH expr 
	expr:  expr.LCOMM expr 
	oexpr:  expr.    (292)

	LANDAND  shift 135
	LANDNOT  shift 150
	LCOMM  shift 153
	LEQ  shift 136
	LGE  shift 140
	LGT  shift 141
	LLE  shift 139
	LLSH  shift 151
	LLT  shift 138
	LNE  shift 137
	LOROR  shift 134
	LRSH  shift 152
	'+'  shift 142
	'-'  shift 143
	'|'  shift 144
	'^'  shift 145
	'*'  shift 146
	'/'  shift 147
	'%'  shift 148
	'&'  shift 149
	.  reduce 292 (src line 1935)


state 190
	othertype:  LCHAN non_recvchantype.    (193)

	.  reduce 193 (src line 1258)


state 191
	othertype:  LCHAN LCOMM.ntype 

	LCHAN  shift 78
	LFUNC  shift 125
	LINTERFACE  shift 83
	LMAP  shift 79
	LNAME  shift 10
	LSTRUCT  shift 82
	LCOMM  shift 233
	'*'  shift 197
	'('  shift 232
	'['  shift 77
	'?'  shift 12
	'@'  shift 13
	.  error

	sym  goto 124
	ntype  goto 313
	dotname  goto 231
	name  goto 198
	interfacetype  goto 81
	structtype  goto 80
	ptrtype  goto 230
	recvchantype  goto 227
	othertype  goto 229
	fntype  goto 228
	hidden_importsym  goto 11

state 192
	non_recvchantype:  fntype.    (176)

	.  reduce 176 (src line 1210)


state 193
	non_recvchantype:  othertype.    (177)

	.  reduce 177 (src line 1212)


state 194
	non_recvchantype:  ptrtype.    (178)

	.  reduce 178 (src line 1213)


state 195
	non_recvchantype:  dotname.    (179)

	.  reduce 179 (src line 1214)


state 196
	non_recvchantype:  '('.ntype ')' 

	LCHAN  shift 78
	LFUNC  shift 125
	LINTERFACE  shift 83
	LMAP  shift 79
	LNAME  shift 10
	LSTRUCT  shift 82
	LCOMM  shift 233
	'*'  shift 197
	'('  shift 232
	'['  shift 77
	'?'  shift 12
	'@'  shift 13
	.  error

	sym  goto 124
	ntype  goto 314
	dotname  goto 231
	name  goto 198
	interfacetype  goto 81
	structtype  goto 80
	ptrtype  goto 230
	recvchantype  goto 227
	othertype  goto 229
	fntype  goto 228
	hidden_importsym  goto 11

state 197
	ptrtype:  '*'.ntype 

	LCHAN  shift 78
	LFUNC  shift 125
	LINTERFACE  shift 83
	LMAP  shift 79
	LNAME  shift 10
	LSTRUCT  shift 82
	LCOMM  shift 233
	'*'  shift 197
	'('  shift 232
	'['  shift 77
	'?'  shift 12
	'@'  shift 13
	.  error

	sym  goto 124
	ntype  goto 315
	dotname  goto 231
	name  goto 198
	interfacetype  goto 81
	structtype  goto 80
	ptrtype  goto 230
	recvchantype  goto 227
	othertype  goto 229
	fntype  goto 228
	hidden_importsym  goto 11

state 198
	dotname:  name.    (189)
	dotname:  name.'.' sym 

	'.'  shift 316
	.  reduce 189 (src line 1234)


state 199
	othertype:  LMAP '['.ntype ']' ntype 

	LCHAN  shift 78
	LFUNC  shift 125
	LINTERFACE  shift 83
	LMAP  shift 79
	LNAME  shift 10
	LSTRUCT  shift 82
	LCOMM  shift 233
	'*'  shift 197
	'('  shift 232
	'['  shift 77
	'?'  shift 12
	'@'  shift 13
	.  error

	sym  goto 124
	ntype  goto 317
	dotname  goto 231
	name  goto 198
	interfacetype  goto 81
	structtype  goto 80
	ptrtype  goto 230
	recvchantype  goto 227
	othertype  goto 229
	fntype  goto 228
	hidden_importsym  goto 11

state 200
	structtype:  LSTRUCT lbrace.structdcl_list osemi '}' 
	structtype:  LSTRUCT lbrace.'}' 

	LNAME  shift 327
	'*'  shift 324
	'('  shift 323
	'}'  shift 319
	'?'  shift 12
	'@'  shift 13
	.  error

	sym  goto 120
	packname  goto 326
	embed  goto 322
	new_name  goto 325
	new_name_list  goto 321
	structdcl  goto 320
	structdcl_list  goto 318
	hidden_importsym  goto 11

state 201
	interfacetype:  LINTERFACE lbrace.interfacedcl_list osemi '}' 
	interfacetype:  LINTERFACE lbrace.'}' 

	LNAME  shift 327
	'('  shift 333
	'}'  shift 329
	'?'  shift 12
	'@'  shift 13
	.  error

	sym  goto 120
	packname  goto 332
	interfacedcl  goto 330
	new_name  goto 331
	interfacedcl_list  goto 328
	hidden_importsym  goto 11

state 202
	import:  LIMPORT '(' import_stmt_list.osemi ')' 
	import_stmt_list:  import_stmt_list.';' import_stmt 
	osemi: .    (287)

	';'  shift 335
	.  reduce 287 (src line 1925)

	osemi  goto 334

state 203
	import:  LIMPORT '(' ')'.    (10)

	.  reduce 10 (src line 171)


state 204
	import_stmt_list:  import_stmt.    (13)

	.  reduce 13 (src line 220)


state 205
	import_stmt:  import_here import_package.import_there 
	$$21: .    (21)

	.  reduce 21 (src line 272)

	import_there  goto 336
	$$21  goto 15

state 206
	import_stmt:  import_here import_there.    (12)

	.  reduce 12 (src line 209)


state 207
	import_here:  sym LLITERAL.    (16)

	.  reduce 16 (src line 232)


state 208
	import_here:  '.' LLITERAL.    (17)

	.  reduce 17 (src line 239)


state 209
	hidden_importsym:  '@' LLITERAL '.' LNAME.    (160)

	.  reduce 160 (src line 1128)


state 210
	hidden_importsym:  '@' LLITERAL '.' '?'.    (161)

	.  reduce 161 (src line 1143)


state 211
	import_there:  $$21 hidden_import_list '$' '$'.    (22)

	.  reduce 22 (src line 276)


state 212
	hidden_import:  LIMPORT LNAME.LLITERAL ';' 

	LLITERAL  shift 337
	.  error


state 213
	hidden_import:  LVAR hidden_pkg_importsym.hidden_type ';' 

	LCHAN  shift 349
	LFUNC  shift 351
	LINTERFACE  shift 347
	LMAP  shift 345
	LNAME  shift 343
	LSTRUCT  shift 346
	LCOMM  shift 350
	'*'  shift 348
	'['  shift 344
	'@'  shift 13
	.  error

	hidden_importsym  goto 342
	hidden_type  goto 338
	hidden_type_misc  goto 339
	hidden_type_func  goto 341
	hidden_type_recv_chan  goto 340

state 214
	hidden_pkg_importsym:  hidden_importsym.    (311)

	.  reduce 311 (src line 2017)


state 215
	hidden_import:  LCONST hidden_pkg_importsym.'=' hidden_constant ';' 
	hidden_import:  LCONST hidden_pkg_importsym.hidden_type '=' hidden_constant ';' 

	LCHAN  shift 349
	LFUNC  shift 351
	LINTERFACE  shift 347
	LMAP  shift 345
	LNAME  shift 343
	LSTRUCT  shift 346
	LCOMM  shift 350
	'*'  shift 348
	'='  shift 352
	'['  shift 344
	'@'  shift 13
	.  error

	hidden_importsym  goto 342
	hidden_type  goto 353
	hidden_type_misc  goto 339
	hidden_type_func  goto 341
	hidden_type_recv_chan  goto 340

state 216
	hidden_import:  LTYPE hidden_pkgtype.hidden_type ';' 

	LCHAN  shift 349
	LFUNC  shift 351
	LINTERFACE  shift 347
	LMAP  shift 345
	LNAME  shift 343
	LSTRUCT  shift 346
	LCOMM  shift 350
	'*'  shift 348
	'['  shift 344
	'@'  shift 13
	.  error

	hidden_importsym  goto 342
	hidden_type  goto 354
	hidden_type_misc  goto 339
	hidden_type_func  goto 341
	hidden_type_recv_chan  goto 340

state 217
	hidden_pkgtype:  hidden_pkg_importsym.    (312)

	.  reduce 312 (src line 2024)


state 218
	hidden_import:  LFUNC hidden_fndcl.fnbody ';' 
	fnbody: .    (211)

	'{'  shift 243
	.  reduce 211 (src line 1489)

	fnbody  goto 355

state 219
	hidden_fndcl:  hidden_pkg_importsym.'(' ohidden_funarg_list ')' ohidden_funres 

	'('  shift 356
	.  error


state 220
	hidden_fndcl:  '('.hidden_funarg_list ')' sym '(' ohidden_funarg_list ')' ohidden_funres 

	LNAME  shift 10
	'?'  shift 12
	'@'  shift 13
	.  error

	sym  goto 359
	hidden_importsym  goto 11
	hidden_funarg  goto 358
	hidden_funarg_list  goto 357

state 221
	common_dcl:  LVAR '(' vardcl_list.osemi ')' 
	vardcl_list:  vardcl_list.';' vardcl 
	osemi: .    (287)

	';'  shift 361
	.  reduce 287 (src line 1925)

	osemi  goto 360

state 222
	common_dcl:  LVAR '(' ')'.    (30)

	.  reduce 30 (src line 314)


state 223
	vardcl_list:  vardcl.    (221)

	.  reduce 221 (src line 1555)


state 224
	vardcl:  dcl_name_list ntype.    (39)
	vardcl:  dcl_name_list ntype.'=' expr_list 

	'='  shift 362
	.  reduce 39 (src line 360)


state 225
	vardcl:  dcl_name_list '='.expr_list 

	LLITERAL  shift 68
	LCHAN  shift 78
	LFUNC  shift 125
	LINTERFACE  shift 83
	LMAP  shift 79
	LNAME  shift 10
	LSTRUCT  shift 82
	LCOMM  shift 65
	'+'  shift 60
	'-'  shift 61
	'^'  shift 64
	'*'  shift 58
	'&'  shift 59
	'('  shift 67
	'!'  shift 62
	'~'  shift 63
	'['  shift 77
	'?'  shift 12
	'@'  shift 13
	.  error

	sym  goto 124
	expr  goto 130
	fnliteral  goto 73
	name  goto 69
	pexpr  goto 57
	pexpr_no_paren  goto 66
	pseudocall  goto 70
	uexpr  goto 55
	expr_list  goto 363
	convtype  goto 71
	comptype  goto 72
	interfacetype  goto 81
	structtype  goto 80
	othertype  goto 75
	fntype  goto 74
	hidden_importsym  goto 11
	fnlitdcl  goto 76

state 226
	dcl_name_list:  dcl_name_list ','.dcl_name 

	LNAME  shift 10
	'?'  shift 12
	'@'  shift 13
	.  error

	sym  goto 105
	dcl_name  goto 364
	hidden_importsym  goto 11

state 227
	ntype:  recvchantype.    (166)

	.  reduce 166 (src line 1190)


state 228
	ntype:  fntype.    (167)

	.  reduce 167 (src line 1192)


state 229
	ntype:  othertype.    (168)

	.  reduce 168 (src line 1193)


state 230
	ntype:  ptrtype.    (169)

	.  reduce 169 (src line 1194)


state 231
	ntype:  dotname.    (170)

	.  reduce 170 (src line 1195)


state 232
	ntype:  '('.ntype ')' 

	LCHAN  shift 78
	LFUNC  shift 125
	LINTERFACE  shift 83
	LMAP  shift 79
	LNAME  shift 10
	LSTRUCT  shift 82
	LCOMM  shift 233
	'*'  shift 197
	'('  shift 232
	'['  shift 77
	'?'  shift 12
	'@'  shift 13
	.  error

	sym  goto 124
	ntype  goto 365
	dotname  goto 231
	name  goto 198
	interfacetype  goto 81
	structtype  goto 80
	ptrtype  goto 230
	recvchantype  goto 227
	othertype  goto 229
	fntype  goto 228
	hidden_importsym  goto 11

state 233
	recvchantype:  LCOMM.LCHAN ntype 

	LCHAN  shift 366
	.  error


state 234
	common_dcl:  lconst '(' constdcl.osemi ')' 
	common_dcl:  lconst '(' constdcl.';' constdcl_list osemi ')' 
	osemi: .    (287)

	';'  shift 368
	.  reduce 287 (src line 1925)

	osemi  goto 367

state 235
	common_dcl:  lconst '(' ')'.    (34)

	.  reduce 34 (src line 336)


state 236
	constdcl:  dcl_name_list ntype.'=' expr_list 

	'='  shift 369
	.  error


state 237
	constdcl:  dcl_name_list '='.expr_list 

	LLITERAL  shift 68
	LCHAN  shift 78
	LFUNC  shift 125
	LINTERFACE  shift 83
	LMAP  shift 79
	LNAME  shift 10
	LSTRUCT  shift 82
	LCOMM  shift 65
	'+'  shift 60
	'-'  shift 61
	'^'  shift 64
	'*'  shift 58
	'&'  shift 59
	'('  shift 67
	'!'  shift 62
	'~'  shift 63
	'['  shift 77
	'?'  shift 12
	'@'  shift 13
	.  error

	sym  goto 124
	expr  goto 130
	fnliteral  goto 73
	name  goto 69
	pexpr  goto 57
	pexpr_no_paren  goto 66
	pseudocall  goto 70
	uexpr  goto 55
	expr_list  goto 370
	convtype  goto 71
	comptype  goto 72
	interfacetype  goto 81
	structtype  goto 80
	othertype  goto 75
	fntype  goto 74
	hidden_importsym  goto 11
	fnlitdcl  goto 76

state 238
	common_dcl:  LTYPE '(' typedcl_list.osemi ')' 
	typedcl_list:  typedcl_list.';' typedcl 
	osemi: .    (287)

	';'  shift 372
	.  reduce 287 (src line 1925)

	osemi  goto 371

state 239
	common_dcl:  LTYPE '(' ')'.    (37)

	.  reduce 37 (src line 349)


state 240
	typedcl_list:  typedcl.    (225)

	.  reduce 225 (src line 1569)


state 241
	typedcl:  typedclname ntype.    (48)

	.  reduce 48 (src line 404)


state 242
	xfndcl:  LFUNC fndcl fnbody.    (204)

	.  reduce 204 (src line 1318)


state 243
	fnbody:  '{'.stmt_list '}' 
	stmt: .    (252)

	error  shift 309
	LLITERAL  shift 68
	LBREAK  shift 41
	LCHAN  shift 78
	LCONST  shift 47
	LCONTINUE  shift 42
	LDEFER  shift 44
	LFALL  shift 40
	LFOR  shift 50
	LFUNC  shift 125
	LGO  shift 43
	LGOTO  shift 45
	LIF  shift 53
	LINTERFACE  shift 83
	LMAP  shift 79
	LNAME  shift 10
	LRETURN  shift 46
	LSELECT  shift 52
	LSTRUCT  shift 82
	LSWITCH  shift 51
	LTYPE  shift 32
	LVAR  shift 30
	LCOMM  shift 65
	'+'  shift 60
	'-'  shift 61
	'^'  shift 64
	'*'  shift 58
	'&'  shift 59
	'('  shift 67
	';'  reduce 252 (src line 1751)
	'{'  shift 310
	'}'  reduce 252 (src line 1751)
	'!'  shift 62
	'~'  shift 63
	'['  shift 77
	'?'  shift 12
	'@'  shift 13
	.  error

	sym  goto 56
	stmt  goto 305
	compound_stmt  goto 306
	expr  goto 48
	fnliteral  goto 73
	for_stmt  goto 35
	if_stmt  goto 38
	non_dcl_stmt  goto 308
	labelname  goto 39
	name  goto 69
	new_name  goto 54
	pexpr  goto 57
	pexpr_no_paren  goto 66
	pseudocall  goto 70
	select_stmt  goto 37
	simple_stmt  goto 34
	switch_stmt  goto 36
	uexpr  goto 55
	expr_list  goto 49
	stmt_list  goto 373
	common_dcl  goto 307
	convtype  goto 71
	comptype  goto 72
	interfacetype  goto 81
	structtype  goto 80
	othertype  goto 75
	fntype  goto 74
	hidden_importsym  goto 11
	lconst  goto 31
	fnlitdcl  goto 76

state 244
	fndcl:  '(' oarg_type_list_ocomma.')' sym '(' oarg_type_list_ocomma ')' fnres 
	fntype:  LFUNC '(' oarg_type_list_ocomma.')' fnres 

	')'  shift 374
	.  error


state 245
	arg_type_list:  arg_type_list.',' arg_type 
	oarg_type_list_ocomma:  arg_type_list.ocomma 
	ocomma: .    (289)

	','  shift 375
	.  reduce 289 (src line 1928)

	ocomma  goto 376

state 246
	arg_type_list:  arg_type.    (248)

	.  reduce 248 (src line 1729)


state 247
	arg_type:  name_or_type.    (244)

	.  reduce 244 (src line 1713)


state 248
	name:  sym.    (162)
	arg_type:  sym.name_or_type 
	arg_type:  sym.dotdotdot 

	LCHAN  shift 78
	LDDD  shift 251
	LFUNC  shift 125
	LINTERFACE  shift 83
	LMAP  shift 79
	LNAME  shift 10
	LSTRUCT  shift 82
	LCOMM  shift 233
	'*'  shift 197
	'('  shift 232
	'['  shift 77
	'?'  shift 12
	'@'  shift 13
	.  reduce 162 (src line 1158)

	sym  goto 124
	ntype  goto 250
	dotname  goto 231
	name  goto 198
	name_or_type  goto 377
	dotdotdot  goto 378
	interfacetype  goto 81
	structtype  goto 80
	ptrtype  goto 230
	recvchantype  goto 227
	othertype  goto 229
	fntype  goto 228
	hidden_importsym  goto 11

state 249
	arg_type:  dotdotdot.    (247)

	.  reduce 247 (src line 1727)


state 250
	name_or_type:  ntype.    (150)

	.  reduce 150 (src line 1073)


state 251
	dotdotdot:  LDDD.    (164)
	dotdotdot:  LDDD.ntype 

	LCHAN  shift 78
	LFUNC  shift 125
	LINTERFACE  shift 83
	LMAP  shift 79
	LNAME  shift 10
	LSTRUCT  shift 82
	LCOMM  shift 233
	'*'  shift 197
	'('  shift 232
	'['  shift 77
	'?'  shift 12
	'@'  shift 13
	.  reduce 164 (src line 1179)

	sym  goto 124
	ntype  goto 379
	dotname  goto 231
	name  goto 198
	interfacetype  goto 81
	structtype  goto 80
	ptrtype  goto 230
	recvchantype  goto 227
	othertype  goto 229
	fntype  goto 228
	hidden_importsym  goto 11

state 252
	fndcl:  LLT sym.LGT sym '(' oarg_type_list_ocomma ')' fnres 

	LGT  shift 380
	.  error


state 253
	fndcl:  sym '('.oarg_type_list_ocomma ')' fnres 
	oarg_type_list_ocomma: .    (250)

	LCHAN  shift 78
	LDDD  shift 251
	LFUNC  shift 125
	LINTERFACE  shift 83
	LMAP  shift 79
	LNAME  shift 10
	LSTRUCT  shift 82
	LCOMM  shift 233
	'*'  shift 197
	'('  shift 232
	'['  shift 77
	'?'  shift 12
	'@'  shift 13
	.  reduce 250 (src line 1739)

	sym  goto 248
	ntype  goto 250
	arg_type  goto 246
	dotname  goto 231
	name  goto 198
	name_or_type  goto 247
	oarg_type_list_ocomma  goto 381
	arg_type_list  goto 245
	dotdotdot  goto 249
	interfacetype  goto 81
	structtype  goto 80
	ptrtype  goto 230
	recvchantype  goto 227
	othertype  goto 229
	fntype  goto 228
	hidden_importsym  goto 11

state 254
	non_dcl_stmt:  labelname ':' $$262.stmt 
	stmt: .    (252)

	error  shift 309
	LLITERAL  shift 68
	LBREAK  shift 41
	LCASE  reduce 252 (src line 1751)
	LCHAN  shift 78
	LCONST  shift 47
	LCONTINUE  shift 42
	LDEFAULT  reduce 252 (src line 1751)
	LDEFER  shift 44
	LFALL  shift 40
	LFOR  shift 50
	LFUNC  shift 125
	LGO  shift 43
	LGOTO  shift 45
	LIF  shift 53
	LINTERFACE  shift 83
	LMAP  shift 79
	LNAME  shift 10
	LRETURN  shift 46
	LSELECT  shift 52
	LSTRUCT  shift 82
	LSWITCH  shift 51
	LTYPE  shift 32
	LVAR  shift 30
	LCOMM  shift 65
	'+'  shift 60
	'-'  shift 61
	'^'  shift 64
	'*'  shift 58
	'&'  shift 59
	'('  shift 67
	';'  reduce 252 (src line 1751)
	'{'  shift 310
	'}'  reduce 252 (src line 1751)
	'!'  shift 62
	'~'  shift 63
	'['  shift 77
	'?'  shift 12
	'@'  shift 13
	.  error

	sym  goto 56
	stmt  goto 382
	compound_stmt  goto 306
	expr  goto 48
	fnliteral  goto 73
	for_stmt  goto 35
	if_stmt  goto 38
	non_dcl_stmt  goto 308
	labelname  goto 39
	name  goto 69
	new_name  goto 54
	pexpr  goto 57
	pexpr_no_paren  goto 66
	pseudocall  goto 70
	select_stmt  goto 37
	simple_stmt  goto 34
	switch_stmt  goto 36
	uexpr  goto 55
	expr_list  goto 49
	common_dcl  goto 307
	convtype  goto 71
	comptype  goto 72
	interfacetype  goto 81
	structtype  goto 80
	othertype  goto 75
	fntype  goto 74
	hidden_importsym  goto 11
	lconst  goto 31
	fnlitdcl  goto 76

state 255
	fntype:  LFUNC '('.oarg_type_list_ocomma ')' fnres 
	oarg_type_list_ocomma: .    (250)

	LCHAN  shift 78
	LDDD  shift 251
	LFUNC  shift 125
	LINTERFACE  shift 83
	LMAP  shift 79
	LNAME  shift 10
	LSTRUCT  shift 82
	LCOMM  shift 233
	'*'  shift 197
	'('  shift 232
	'['  shift 77
	'?'  shift 12
	'@'  shift 13
	.  reduce 250 (src line 1739)

	sym  goto 248
	ntype  goto 250
	arg_type  goto 246
	dotname  goto 231
	name  goto 198
	name_or_type  goto 247
	oarg_type_list_ocomma  goto 383
	arg_type_list  goto 245
	dotdotdot  goto 249
	interfacetype  goto 81
	structtype  goto 80
	ptrtype  goto 230
	recvchantype  goto 227
	othertype  goto 229
	fntype  goto 228
	hidden_importsym  goto 11

state 256
	simple_stmt:  expr LASOP expr.    (50)
	expr:  expr.LOROR expr 
	expr:  expr.LANDAND expr 
	expr:  expr.LEQ expr 
	expr:  expr.LNE expr 
	expr:  expr.LLT expr 
	expr:  expr.LLE expr 
	expr:  expr.LGE expr 
	expr:  expr.LGT expr 
	expr:  expr.'+' expr 
	expr:  expr.'-' expr 
	expr:  expr.'|' expr 
	expr:  expr.'^' expr 
	expr:  expr.'*' expr 
	expr:  expr.'/' expr 
	expr:  expr.'%' expr 
	expr:  expr.'&' expr 
	expr:  expr.LANDNOT expr 
	expr:  expr.LLSH expr 
	expr:  expr.LRSH expr 
	expr:  expr.LCOMM expr 

	LANDAND  shift 135
	LANDNOT  shift 150
	LCOMM  shift 153
	LEQ  shift 136
	LGE  shift 140
	LGT  shift 141
	LLE  shift 139
	LLSH  shift 151
	LLT  shift 138
	LNE  shift 137
	LOROR  shift 134
	LRSH  shift 152
	'+'  shift 142
	'-'  shift 143
	'|'  shift 144
	'^'  shift 145
	'*'  shift 146
	'/'  shift 147
	'%'  shift 148
	'&'  shift 149
	.  reduce 50 (src line 425)


state 257
	expr:  expr.LOROR expr 
	expr:  expr LOROR expr.    (94)
	expr:  expr.LANDAND expr 
	expr:  expr.LEQ expr 
	expr:  expr.LNE expr 
	expr:  expr.LLT expr 
	expr:  expr.LLE expr 
	expr:  expr.LGE expr 
	expr:  expr.LGT expr 
	expr:  expr.'+' expr 
	expr:  expr.'-' expr 
	expr:  expr.'|' expr 
	expr:  expr.'^' expr 
	expr:  expr.'*' expr 
	expr:  expr.'/' expr 
	expr:  expr.'%' expr 
	expr:  expr.'&' expr 
	expr:  expr.LANDNOT expr 
	expr:  expr.LLSH expr 
	expr:  expr.LRSH expr 
	expr:  expr.LCOMM expr 

	LANDAND  shift 135
	LANDNOT  shift 150
	LEQ  shift 136
	LGE  shift 140
	LGT  shift 141
	LLE  shift 139
	LLSH  shift 151
	LLT  shift 138
	LNE  shift 137
	LRSH  shift 152
	'+'  shift 142
	'-'  shift 143
	'|'  shift 144
	'^'  shift 145
	'*'  shift 146
	'/'  shift 147
	'%'  shift 148
	'&'  shift 149
	.  reduce 94 (src line 795)


state 258
	expr:  expr.LOROR expr 
	expr:  expr.LANDAND expr 
	expr:  expr LANDAND expr.    (95)
	expr:  expr.LEQ expr 
	expr:  expr.LNE expr 
	expr:  expr.LLT expr 
	expr:  expr.LLE expr 
	expr:  expr.LGE expr 
	expr:  expr.LGT expr 
	expr:  expr.'+' expr 
	expr:  expr.'-' expr 
	expr:  expr.'|' expr 
	expr:  expr.'^' expr 
	expr:  expr.'*' expr 
	expr:  expr.'/' expr 
	expr:  expr.'%' expr 
	expr:  expr.'&' expr 
	expr:  expr.LANDNOT expr 
	expr:  expr.LLSH expr 
	expr:  expr.LRSH expr 
	expr:  expr.LCOMM expr 

	LANDNOT  shift 150
	LEQ  shift 136
	LGE  shift 140
	LGT  shift 141
	LLE  shift 139
	LLSH  shift 151
	LLT  shift 138
	LNE  shift 137
	LRSH  shift 152
	'+'  shift 142
	'-'  shift 143
	'|'  shift 144
	'^'  shift 145
	'*'  shift 146
	'/'  shift 147
	'%'  shift 148
	'&'  shift 149
	.  reduce 95 (src line 799)


state 259
	expr:  expr.LOROR expr 
	expr:  expr.LANDAND expr 
	expr:  expr.LEQ expr 
	expr:  expr LEQ expr.    (96)
	expr:  expr.LNE expr 
	expr:  expr.LLT expr 
	expr:  expr.LLE expr 
	expr:  expr.LGE expr 
	expr:  expr.LGT expr 
	expr:  expr.'+' expr 
	expr:  expr.'-' expr 
	expr:  expr.'|' expr 
	expr:  expr.'^' expr 
	expr:  expr.'*' expr 
	expr:  expr.'/' expr 
	expr:  expr.'%' expr 
	expr:  expr.'&' expr 
	expr:  expr.LANDNOT expr 
	expr:  expr.LLSH expr 
	expr:  expr.LRSH expr 
	expr:  expr.LCOMM expr 

	LANDNOT  shift 150
	LLSH  shift 151
	LRSH  shift 152
	'+'  shift 142
	'-'  shift 143
	'|'  shift 144
	'^'  shift 145
	'*'  shift 146
	'/'  shift 147
	'%'  shift 148
	'&'  shift 149
	.  reduce 96 (src line 803)


state 260
	expr:  expr.LOROR expr 
	expr:  expr.LANDAND expr 
	expr:  expr.LEQ expr 
	expr:  expr.LNE expr 
	expr:  expr LNE expr.    (97)
	expr:  expr.LLT expr 
	expr:  expr.LLE expr 
	expr:  expr.LGE expr 
	expr:  expr.LGT expr 
	expr:  expr.'+' expr 
	expr:  expr.'-' expr 
	expr:  expr.'|' expr 
	expr:  expr.'^' expr 
	expr:  expr.'*' expr 
	expr:  expr.'/' expr 
	expr:  expr.'%' expr 
	expr:  expr.'&' expr 
	expr:  expr.LANDNOT expr 
	expr:  expr.LLSH expr 
	expr:  expr.LRSH expr 
	expr:  expr.LCOMM expr 

	LANDNOT  shift 150
	LLSH  shift 151
	LRSH  shift 152
	'+'  shift 142
	'-'  shift 143
	'|'  shift 144
	'^'  shift 145
	'*'  shift 146
	'/'  shift 147
	'%'  shift 148
	'&'  shift 149
	.  reduce 97 (src line 807)


state 261
	expr:  expr.LOROR expr 
	expr:  expr.LANDAND expr 
	expr:  expr.LEQ expr 
	expr:  expr.LNE expr 
	expr:  expr.LLT expr 
	expr:  expr LLT expr.    (98)
	expr:  expr.LLE expr 
	expr:  expr.LGE expr 
	expr:  expr.LGT expr 
	expr:  expr.'+' expr 
	expr:  expr.'-' expr 
	expr:  expr.'|' expr 
	expr:  expr.'^' expr 
	expr:  expr.'*' expr 
	expr:  expr.'/' expr 
	expr:  expr.'%' expr 
	expr:  expr.'&' expr 
	expr:  expr.LANDNOT expr 
	expr:  expr.LLSH expr 
	expr:  expr.LRSH expr 
	expr:  expr.LCOMM expr 

	LANDNOT  shift 150
	LLSH  shift 151
	LRSH  shift 152
	'+'  shift 142
	'-'  shift 143
	'|'  shift 144
	'^'  shift 145
	'*'  shift 146
	'/'  shift 147
	'%'  shift 148
	'&'  shift 149
	.  reduce 98 (src line 811)


state 262
	expr:  expr.LOROR expr 
	expr:  expr.LANDAND expr 
	expr:  expr.LEQ expr 
	expr:  expr.LNE expr 
	expr:  expr.LLT expr 
	expr:  expr.LLE expr 
	expr:  expr LLE expr.    (99)
	expr:  expr.LGE expr 
	expr:  expr.LGT expr 
	expr:  expr.'+' expr 
	expr:  expr.'-' expr 
	expr:  expr.'|' expr 
	expr:  expr.'^' expr 
	expr:  expr.'*' expr 
	expr:  expr.'/' expr 
	expr:  expr.'%' expr 
	expr:  expr.'&' expr 
	expr:  expr.LANDNOT expr 
	expr:  expr.LLSH expr 
	expr:  expr.LRSH expr 
	expr:  expr.LCOMM expr 

	LANDNOT  shift 150
	LLSH  shift 151
	LRSH  shift 152
	'+'  shift 142
	'-'  shift 143
	'|'  shift 144
	'^'  shift 145
	'*'  shift 146
	'/'  shift 147
	'%'  shift 148
	'&'  shift 149
	.  reduce 99 (src line 815)


state 263
	expr:  expr.LOROR expr 
	expr:  expr.LANDAND expr 
	expr:  expr.LEQ expr 
	expr:  expr.LNE expr 
	expr:  expr.LLT expr 
	expr:  expr.LLE expr 
	expr:  expr.LGE expr 
	expr:  expr LGE expr.    (100)
	expr:  expr.LGT expr 
	expr:  expr.'+' expr 
	expr:  expr.'-' expr 
	expr:  expr.'|' expr 
	expr:  expr.'^' expr 
	expr:  expr.'*' expr 
	expr:  expr.'/' expr 
	expr:  expr.'%' expr 
	expr:  expr.'&' expr 
	expr:  expr.LANDNOT expr 
	expr:  expr.LLSH expr 
	expr:  expr.LRSH expr 
	expr:  expr.LCOMM expr 

	LANDNOT  shift 150
	LLSH  shift 151
	LRSH  shift 152
	'+'  shift 142
	'-'  shift 143
	'|'  shift 144
	'^'  shift 145
	'*'  shift 146
	'/'  shift 147
	'%'  shift 148
	'&'  shift 149
	.  reduce 100 (src line 819)


state 264
	expr:  expr.LOROR expr 
	expr:  expr.LANDAND expr 
	expr:  expr.LEQ expr 
	expr:  expr.LNE expr 
	expr:  expr.LLT expr 
	expr:  expr.LLE expr 
	expr:  expr.LGE expr 
	expr:  expr.LGT expr 
	expr:  expr LGT expr.    (101)
	expr:  expr.'+' expr 
	expr:  expr.'-' expr 
	expr:  expr.'|' expr 
	expr:  expr.'^' expr 
	expr:  expr.'*' expr 
	expr:  expr.'/' expr 
	expr:  expr.'%' expr 
	expr:  expr.'&' expr 
	expr:  expr.LANDNOT expr 
	expr:  expr.LLSH expr 
	expr:  expr.LRSH expr 
	expr:  expr.LCOMM expr 

	LANDNOT  shift 150
	LLSH  shift 151
	LRSH  shift 152
	'+'  shift 142
	'-'  shift 143
	'|'  shift 144
	'^'  shift 145
	'*'  shift 146
	'/'  shift 147
	'%'  shift 148
	'&'  shift 149
	.  reduce 101 (src line 823)


state 265
	expr:  expr.LOROR expr 
	expr:  expr.LANDAND expr 
	expr:  expr.LEQ expr 
	expr:  expr.LNE expr 
	expr:  expr.LLT expr 
	expr:  expr.LLE expr 
	expr:  expr.LGE expr 
	expr:  expr.LGT expr 
	expr:  expr.'+' expr 
	expr:  expr '+' expr.    (102)
	expr:  expr.'-' expr 
	expr:  expr.'|' expr 
	expr:  expr.'^' expr 
	expr:  expr.'*' expr 
	expr:  expr.'/' expr 
	expr:  expr.'%' expr 
	expr:  expr.'&' expr 
	expr:  expr.LANDNOT expr 
	expr:  expr.LLSH expr 
	expr:  expr.LRSH expr 
	expr:  expr.LCOMM expr 

	LANDNOT  shift 150
	LLSH  shift 151
	LRSH  shift 152
	'*'  shift 146
	'/'  shift 147
	'%'  shift 148
	'&'  shift 149
	.  reduce 102 (src line 827)


state 266
	expr:  expr.LOROR expr 
	expr:  expr.LANDAND expr 
	expr:  expr.LEQ expr 
	expr:  expr.LNE expr 
	expr:  expr.LLT expr 
	expr:  expr.LLE expr 
	expr:  expr.LGE expr 
	expr:  expr.LGT expr 
	expr:  expr.'+' expr 
	expr:  expr.'-' expr 
	expr:  expr '-' expr.    (103)
	expr:  expr.'|' expr 
	expr:  expr.'^' expr 
	expr:  expr.'*' expr 
	expr:  expr.'/' expr 
	expr:  expr.'%' expr 
	expr:  expr.'&' expr 
	expr:  expr.LANDNOT expr 
	expr:  expr.LLSH expr 
	expr:  expr.LRSH expr 
	expr:  expr.LCOMM expr 

	LANDNOT  shift 150
	LLSH  shift 151
	LRSH  shift 152
	'*'  shift 146
	'/'  shift 147
	'%'  shift 148
	'&'  shift 149
	.  reduce 103 (src line 831)


state 267
	expr:  expr.LOROR expr 
	expr:  expr.LANDAND expr 
	expr:  expr.LEQ expr 
	expr:  expr.LNE expr 
	expr:  expr.LLT expr 
	expr:  expr.LLE expr 
	expr:  expr.LGE expr 
	expr:  expr.LGT expr 
	expr:  expr.'+' expr 
	expr:  expr.'-' expr 
	expr:  expr.'|' expr 
	expr:  expr '|' expr.    (104)
	expr:  expr.'^' expr 
	expr:  expr.'*' expr 
	expr:  expr.'/' expr 
	expr:  expr.'%' expr 
	expr:  expr.'&' expr 
	expr:  expr.LANDNOT expr 
	expr:  expr.LLSH expr 
	expr:  expr.LRSH expr 
	expr:  expr.LCOMM expr 

	LANDNOT  shift 150
	LLSH  shift 151
	LRSH  shift 152
	'*'  shift 146
	'/'  shift 147
	'%'  shift 148
	'&'  shift 149
	.  reduce 104 (src line 835)


state 268
	expr:  expr.LOROR expr 
	expr:  expr.LANDAND expr 
	expr:  expr.LEQ expr 
	expr:  expr.LNE expr 
	expr:  expr.LLT expr 
	expr:  expr.LLE expr 
	expr:  expr.LGE expr 
	expr:  expr.LGT expr 
	expr:  expr.'+' expr 
	expr:  expr.'-' expr 
	expr:  expr.'|' expr 
	expr:  expr.'^' expr 
	expr:  expr '^' expr.    (105)
	expr:  expr.'*' expr 
	expr:  expr.'/' expr 
	expr:  expr.'%' expr 
	expr:  expr.'&' expr 
	expr:  expr.LANDNOT expr 
	expr:  expr.LLSH expr 
	expr:  expr.LRSH expr 
	expr:  expr.LCOMM expr 

	LANDNOT  shift 150
	LLSH  shift 151
	LRSH  shift 152
	'*'  shift 146
	'/'  shift 147
	'%'  shift 148
	'&'  shift 149
	.  reduce 105 (src line 839)


state 269
	expr:  expr.LOROR expr 
	expr:  expr.LANDAND expr 
	expr:  expr.LEQ expr 
	expr:  expr.LNE expr 
	expr:  expr.LLT expr 
	expr:  expr.LLE expr 
	expr:  expr.LGE expr 
	expr:  expr.LGT expr 
	expr:  expr.'+' expr 
	expr:  expr.'-' expr 
	expr:  expr.'|' expr 
	expr:  expr.'^' expr 
	expr:  expr.'*' expr 
	expr:  expr '*' expr.    (106)
	expr:  expr.'/' expr 
	expr:  expr.'%' expr 
	expr:  expr.'&' expr 
	expr:  expr.LANDNOT expr 
	expr:  expr.LLSH expr 
	expr:  expr.LRSH expr 
	expr:  expr.LCOMM expr 

	.  reduce 106 (src line 843)


state 270
	expr:  expr.LOROR expr 
	expr:  expr.LANDAND expr 
	expr:  expr.LEQ expr 
	expr:  expr.LNE expr 
	expr:  expr.LLT expr 
	expr:  expr.LLE expr 
	expr:  expr.LGE expr 
	expr:  expr.LGT expr 
	expr:  expr.'+' expr 
	expr:  expr.'-' expr 
	expr:  expr.'|' expr 
	expr:  expr.'^' expr 
	expr:  expr.'*' expr 
	expr:  expr.'/' expr 
	expr:  expr '/' expr.    (107)
	expr:  expr.'%' expr 
	expr:  expr.'&' expr 
	expr:  expr.LANDNOT expr 
	expr:  expr.LLSH expr 
	expr:  expr.LRSH expr 
	expr:  expr.LCOMM expr 

	.  reduce 107 (src line 847)


state 271
	expr:  expr.LOROR expr 
	expr:  expr.LANDAND expr 
	expr:  expr.LEQ expr 
	expr:  expr.LNE expr 
	expr:  expr.LLT expr 
	expr:  expr.LLE expr 
	expr:  expr.LGE expr 
	expr:  expr.LGT expr 
	expr:  expr.'+' expr 
	expr:  expr.'-' expr 
	expr:  expr.'|' expr 
	expr:  expr.'^' expr 
	expr:  expr.'*' expr 
	expr:  expr.'/' expr 
	expr:  expr.'%' expr 
	expr:  expr '%' expr.    (108)
	expr:  expr.'&' expr 
	expr:  expr.LANDNOT expr 
	expr:  expr.LLSH expr 
	expr:  expr.LRSH expr 
	expr:  expr.LCOMM expr 

	.  reduce 108 (src line 851)


state 272
	expr:  expr.LOROR expr 
	expr:  expr.LANDAND expr 
	expr:  expr.LEQ expr 
	expr:  expr.LNE expr 
	expr:  expr.LLT expr 
	expr:  expr.LLE expr 
	expr:  expr.LGE expr 
	expr:  expr.LGT expr 
	expr:  expr.'+' expr 
	expr:  expr.'-' expr 
	expr:  expr.'|' expr 
	expr:  expr.'^' expr 
	expr:  expr.'*' expr 
	expr:  expr.'/' expr 
	expr:  expr.'%' expr 
	expr:  expr.'&' expr 
	expr:  expr '&' expr.    (109)
	expr:  expr.LANDNOT expr 
	expr:  expr.LLSH expr 
	expr:  expr.LRSH expr 
	expr:  expr.LCOMM expr 

	.  reduce 109 (src line 855)


state 273
	expr:  expr.LOROR expr 
	expr:  expr.LANDAND expr 
	expr:  expr.LEQ expr 
	expr:  expr.LNE expr 
	expr:  expr.LLT expr 
	expr:  expr.LLE expr 
	expr:  expr.LGE expr 
	expr:  expr.LGT expr 
	expr:  expr.'+' expr 
	expr:  expr.'-' expr 
	expr:  expr.'|' expr 
	expr:  expr.'^' expr 
	expr:  expr.'*' expr 
	expr:  expr.'/' expr 
	expr:  expr.'%' expr 
	expr:  expr.'&' expr 
	expr:  expr.LANDNOT expr 
	expr:  expr LANDNOT expr.    (110)
	expr:  expr.LLSH expr 
	expr:  expr.LRSH expr 
	expr:  expr.LCOMM expr 

	.  reduce 110 (src line 859)


state 274
	expr:  expr.LOROR expr 
	expr:  expr.LANDAND expr 
	expr:  expr.LEQ expr 
	expr:  expr.LNE expr 
	expr:  expr.LLT expr 
	expr:  expr.LLE expr 
	expr:  expr.LGE expr 
	expr:  expr.LGT expr 
	expr:  expr.'+' expr 
	expr:  expr.'-' expr 
	expr:  expr.'|' expr 
	expr:  expr.'^' expr 
	expr:  expr.'*' expr 
	expr:  expr.'/' expr 
	expr:  expr.'%' expr 
	expr:  expr.'&' expr 
	expr:  expr.LANDNOT expr 
	expr:  expr.LLSH expr 
	expr:  expr LLSH expr.    (111)
	expr:  expr.LRSH expr 
	expr:  expr.LCOMM expr 

	.  reduce 111 (src line 863)


state 275
	expr:  expr.LOROR expr 
	expr:  expr.LANDAND expr 
	expr:  expr.LEQ expr 
	expr:  expr.LNE expr 
	expr:  expr.LLT expr 
	expr:  expr.LLE expr 
	expr:  expr.LGE expr 
	expr:  expr.LGT expr 
	expr:  expr.'+' expr 
	expr:  expr.'-' expr 
	expr:  expr.'|' expr 
	expr:  expr.'^' expr 
	expr:  expr.'*' expr 
	expr:  expr.'/' expr 
	expr:  expr.'%' expr 
	expr:  expr.'&' expr 
	expr:  expr.LANDNOT expr 
	expr:  expr.LLSH expr 
	expr:  expr.LRSH expr 
	expr:  expr LRSH expr.    (112)
	expr:  expr.LCOMM expr 

	.  reduce 112 (src line 867)


state 276
	expr:  expr.LOROR expr 
	expr:  expr.LANDAND expr 
	expr:  expr.LEQ expr 
	expr:  expr.LNE expr 
	expr:  expr.LLT expr 
	expr:  expr.LLE expr 
	expr:  expr.LGE expr 
	expr:  expr.LGT expr 
	expr:  expr.'+' expr 
	expr:  expr.'-' expr 
	expr:  expr.'|' expr 
	expr:  expr.'^' expr 
	expr:  expr.'*' expr 
	expr:  expr.'/' expr 
	expr:  expr.'%' expr 
	expr:  expr.'&' expr 
	expr:  expr.LANDNOT expr 
	expr:  expr.LLSH expr 
	expr:  expr.LRSH expr 
	expr:  expr.LCOMM expr 
	expr:  expr LCOMM expr.    (113)

	LANDAND  shift 135
	LANDNOT  shift 150
	LEQ  shift 136
	LGE  shift 140
	LGT  shift 141
	LLE  shift 139
	LLSH  shift 151
	LLT  shift 138
	LNE  shift 137
	LOROR  shift 134
	LRSH  shift 152
	'+'  shift 142
	'-'  shift 143
	'|'  shift 144
	'^'  shift 145
	'*'  shift 146
	'/'  shift 147
	'%'  shift 148
	'&'  shift 149
	.  reduce 113 (src line 872)


state 277
	simple_stmt:  expr_list '=' expr_list.    (51)
	expr_list:  expr_list.',' expr 

	','  shift 156
	.  reduce 51 (src line 430)


state 278
	simple_stmt:  expr_list LCOLAS expr_list.    (52)
	expr_list:  expr_list.',' expr 

	','  shift 156
	.  reduce 52 (src line 442)


state 279
	expr:  expr.LOROR expr 
	expr:  expr.LANDAND expr 
	expr:  expr.LEQ expr 
	expr:  expr.LNE expr 
	expr:  expr.LLT expr 
	expr:  expr.LLE expr 
	expr:  expr.LGE expr 
	expr:  expr.LGT expr 
	expr:  expr.'+' expr 
	expr:  expr.'-' expr 
	expr:  expr.'|' expr 
	expr:  expr.'^' expr 
	expr:  expr.'*' expr 
	expr:  expr.'/' expr 
	expr:  expr.'%' expr 
	expr:  expr.'&' expr 
	expr:  expr.LANDNOT expr 
	expr:  expr.LLSH expr 
	expr:  expr.LRSH expr 
	expr:  expr.LCOMM expr 
	expr_list:  expr_list ',' expr.    (278)

	LANDAND  shift 135
	LANDNOT  shift 150
	LCOMM  shift 153
	LEQ  shift 136
	LGE  shift 140
	LGT  shift 141
	LLE  shift 139
	LLSH  shift 151
	LLT  shift 138
	LNE  shift 137
	LOROR  shift 134
	LRSH  shift 152
	'+'  shift 142
	'-'  shift 143
	'|'  shift 144
	'^'  shift 145
	'*'  shift 146
	'/'  shift 147
	'%'  shift 148
	'&'  shift 149
	.  reduce 278 (src line 1877)


state 280
	for_stmt:  LFOR $$74 for_body.    (75)

	.  reduce 75 (src line 664)


state 281
	for_body:  for_header.loop_body 

	LBODY  shift 385
	.  error

	loop_body  goto 384

state 282
	for_header:  osimple_stmt.';' osimple_stmt ';' osimple_stmt 
	for_header:  osimple_stmt.    (71)

	';'  shift 386
	.  reduce 71 (src line 644)


state 283
	for_header:  range_stmt.    (72)

	.  reduce 72 (src line 650)


state 284
	osimple_stmt:  simple_stmt.    (296)

	.  reduce 296 (src line 1947)


state 285
	simple_stmt:  expr_list.'=' expr_list 
	simple_stmt:  expr_list.LCOLAS expr_list 
	range_stmt:  expr_list.'=' LRANGE expr 
	range_stmt:  expr_list.LCOLAS LRANGE expr 
	expr_list:  expr_list.',' expr 

	LCOLAS  shift 388
	'='  shift 387
	','  shift 156
	.  error


state 286
	range_stmt:  LRANGE.expr 

	LLITERAL  shift 68
	LCHAN  shift 78
	LFUNC  shift 125
	LINTERFACE  shift 83
	LMAP  shift 79
	LNAME  shift 10
	LSTRUCT  shift 82
	LCOMM  shift 65
	'+'  shift 60
	'-'  shift 61
	'^'  shift 64
	'*'  shift 58
	'&'  shift 59
	'('  shift 67
	'!'  shift 62
	'~'  shift 63
	'['  shift 77
	'?'  shift 12
	'@'  shift 13
	.  error

	sym  goto 124
	expr  goto 389
	fnliteral  goto 73
	name  goto 69
	pexpr  goto 57
	pexpr_no_paren  goto 66
	pseudocall  goto 70
	uexpr  goto 55
	convtype  goto 71
	comptype  goto 72
	interfacetype  goto 81
	structtype  goto 80
	othertype  goto 75
	fntype  goto 74
	hidden_importsym  goto 11
	fnlitdcl  goto 76

state 287
	switch_stmt:  LSWITCH $$88 if_header.$$89 LBODY caseblock_list '}' 
	$$89: .    (89)

	.  reduce 89 (src line 759)

	$$89  goto 390

state 288
	if_header:  osimple_stmt.    (76)
	if_header:  osimple_stmt.';' osimple_stmt 

	';'  shift 391
	.  reduce 76 (src line 670)


state 289
	select_stmt:  LSELECT $$91 LBODY.caseblock_list '}' 
	caseblock_list: .    (63)

	.  reduce 63 (src line 590)

	caseblock_list  goto 392

state 290
	if_stmt:  LIF $$78 if_header.$$79 loop_body $$80 elseif_list else 
	$$79: .    (79)

	.  reduce 79 (src line 693)

	$$79  goto 393

state 291
	pseudocall:  pexpr '(' ')'.    (123)

	.  reduce 123 (src line 924)


state 292
	pseudocall:  pexpr '(' expr_or_type_list.ocomma ')' 
	pseudocall:  pexpr '(' expr_or_type_list.LDDD ocomma ')' 
	expr_or_type_list:  expr_or_type_list.',' expr_or_type 
	ocomma: .    (289)

	LDDD  shift 395
	','  shift 396
	.  reduce 289 (src line 1928)

	ocomma  goto 394

state 293
	expr_or_type_list:  expr_or_type.    (279)

	.  reduce 279 (src line 1882)


state 294
	pexpr_no_paren:  pexpr '.' sym.    (128)

	.  reduce 128 (src line 947)


state 295
	pexpr_no_paren:  pexpr '.' '('.expr_or_type ')' 
	pexpr_no_paren:  pexpr '.' '('.LTYPE ')' 

	LLITERAL  shift 68
	LCHAN  shift 78
	LFUNC  shift 125
	LINTERFACE  shift 83
	LMAP  shift 79
	LNAME  shift 10
	LSTRUCT  shift 82
	LTYPE  shift 398
	LCOMM  shift 180
	'+'  shift 60
	'-'  shift 61
	'^'  shift 64
	'*'  shift 179
	'&'  shift 59
	'('  shift 67
	'!'  shift 62
	'~'  shift 63
	'['  shift 77
	'?'  shift 12
	'@'  shift 13
	.  error

	sym  goto 124
	expr  goto 174
	expr_or_type  goto 397
	fnliteral  goto 73
	name  goto 69
	non_expr_type  goto 175
	pexpr  goto 57
	pexpr_no_paren  goto 66
	pseudocall  goto 70
	uexpr  goto 55
	convtype  goto 71
	comptype  goto 72
	interfacetype  goto 81
	structtype  goto 80
	recvchantype  goto 176
	othertype  goto 178
	fntype  goto 177
	hidden_importsym  goto 11
	fnlitdcl  goto 76

state 296
	expr:  expr.LOROR expr 
	expr:  expr.LANDAND expr 
	expr:  expr.LEQ expr 
	expr:  expr.LNE expr 
	expr:  expr.LLT expr 
	expr:  expr.LLE expr 
	expr:  expr.LGE expr 
	expr:  expr.LGT expr 
	expr:  expr.'+' expr 
	expr:  expr.'-' expr 
	expr:  expr.'|' expr 
	expr:  expr.'^' expr 
	expr:  expr.'*' expr 
	expr:  expr.'/' expr 
	expr:  expr.'%' expr 
	expr:  expr.'&' expr 
	expr:  expr.LANDNOT expr 
	expr:  expr.LLSH expr 
	expr:  expr.LRSH expr 
	expr:  expr.LCOMM expr 
	pexpr_no_paren:  pexpr '[' expr.']' 
	oexpr:  expr.    (292)

	LANDAND  shift 135
	LANDNOT  shift 150
	LCOMM  shift 153
	LEQ  shift 136
	LGE  shift 140
	LGT  shift 141
	LLE  shift 139
	LLSH  shift 151
	LLT  shift 138
	LNE  shift 137
	LOROR  shift 134
	LRSH  shift 152
	'+'  shift 142
	'-'  shift 143
	'|'  shift 144
	'^'  shift 145
	'*'  shift 146
	'/'  shift 147
	'%'  shift 148
	'&'  shift 149
	']'  shift 399
	.  reduce 292 (src line 1935)


state 297
	pexpr_no_paren:  pexpr '[' oexpr.':' oexpr ']' 
	pexpr_no_paren:  pexpr '[' oexpr.':' oexpr ':' oexpr ']' 

	':'  shift 400
	.  error


state 298
	pexpr_no_paren:  pexpr_no_paren '{' start_complit.braced_keyval_list '}' 
	braced_keyval_list: .    (285)

	LLITERAL  shift 68
	LCHAN  shift 78
	LFUNC  shift 125
	LINTERFACE  shift 83
	LMAP  shift 79
	LNAME  shift 10
	LSTRUCT  shift 82
	LCOMM  shift 65
	'+'  shift 60
	'-'  shift 61
	'^'  shift 64
	'*'  shift 58
	'&'  shift 59
	'('  shift 67
	'{'  shift 406
	'!'  shift 62
	'~'  shift 63
	'['  shift 77
	'?'  shift 12
	'@'  shift 13
	.  reduce 285 (src line 1913)

	sym  goto 124
	expr  goto 405
	bare_complitexpr  goto 404
	fnliteral  goto 73
	keyval  goto 403
	name  goto 69
	pexpr  goto 57
	pexpr_no_paren  goto 66
	pseudocall  goto 70
	uexpr  goto 55
	keyval_list  goto 402
	braced_keyval_list  goto 401
	convtype  goto 71
	comptype  goto 72
	interfacetype  goto 81
	structtype  goto 80
	othertype  goto 75
	fntype  goto 74
	hidden_importsym  goto 11
	fnlitdcl  goto 76

state 299
	pexpr_no_paren:  '(' expr_or_type ')'.'{' start_complit braced_keyval_list '}' 
	pexpr:  '(' expr_or_type ')'.    (147)

	'{'  shift 407
	.  reduce 147 (src line 1056)


state 300
	non_expr_type:  '*' non_expr_type.    (175)

	.  reduce 175 (src line 1205)


state 301
	othertype:  LCHAN.non_recvchantype 
	othertype:  LCHAN.LCOMM ntype 
	recvchantype:  LCOMM LCHAN.ntype 

	LCHAN  shift 78
	LFUNC  shift 125
	LINTERFACE  shift 83
	LMAP  shift 79
	LNAME  shift 10
	LSTRUCT  shift 82
	LCOMM  shift 408
	'*'  shift 197
	'('  shift 414
	'['  shift 77
	'?'  shift 12
	'@'  shift 13
	.  error

	sym  goto 124
	ntype  goto 409
	dotname  goto 413
	name  goto 198
	interfacetype  goto 81
	structtype  goto 80
	ptrtype  goto 412
	recvchantype  goto 227
	non_recvchantype  goto 190
	othertype  goto 411
	fntype  goto 410
	hidden_importsym  goto 11

state 302
	expr:  expr.LOROR expr 
	expr:  expr.LANDAND expr 
	expr:  expr.LEQ expr 
	expr:  expr.LNE expr 
	expr:  expr.LLT expr 
	expr:  expr.LLE expr 
	expr:  expr.LGE expr 
	expr:  expr.LGT expr 
	expr:  expr.'+' expr 
	expr:  expr.'-' expr 
	expr:  expr.'|' expr 
	expr:  expr.'^' expr 
	expr:  expr.'*' expr 
	expr:  expr.'/' expr 
	expr:  expr.'%' expr 
	expr:  expr.'&' expr 
	expr:  expr.LANDNOT expr 
	expr:  expr.LLSH expr 
	expr:  expr.LRSH expr 
	expr:  expr.LCOMM expr 
	pexpr_no_paren:  convtype '(' expr.ocomma ')' 
	ocomma: .    (289)

	LANDAND  shift 135
	LANDNOT  shift 150
	LCOMM  shift 153
	LEQ  shift 136
	LGE  shift 140
	LGT  shift 141
	LLE  shift 139
	LLSH  shift 151
	LLT  shift 138
	LNE  shift 137
	LOROR  shift 134
	LRSH  shift 152
	'+'  shift 142
	'-'  shift 143
	'|'  shift 144
	'^'  shift 145
	'*'  shift 146
	'/'  shift 147
	'%'  shift 148
	'&'  shift 149
	','  shift 416
	.  reduce 289 (src line 1928)

	ocomma  goto 415

state 303
	pexpr_no_paren:  comptype lbrace start_complit.braced_keyval_list '}' 
	braced_keyval_list: .    (285)

	LLITERAL  shift 68
	LCHAN  shift 78
	LFUNC  shift 125
	LINTERFACE  shift 83
	LMAP  shift 79
	LNAME  shift 10
	LSTRUCT  shift 82
	LCOMM  shift 65
	'+'  shift 60
	'-'  shift 61
	'^'  shift 64
	'*'  shift 58
	'&'  shift 59
	'('  shift 67
	'{'  shift 406
	'!'  shift 62
	'~'  shift 63
	'['  shift 77
	'?'  shift 12
	'@'  shift 13
	.  reduce 285 (src line 1913)

	sym  goto 124
	expr  goto 405
	bare_complitexpr  goto 404
	fnliteral  goto 73
	keyval  goto 403
	name  goto 69
	pexpr  goto 57
	pexpr_no_paren  goto 66
	pseudocall  goto 70
	uexpr  goto 55
	keyval_list  goto 402
	braced_keyval_list  goto 417
	convtype  goto 71
	comptype  goto 72
	interfacetype  goto 81
	structtype  goto 80
	othertype  goto 75
	fntype  goto 74
	hidden_importsym  goto 11
	fnlitdcl  goto 76

state 304
	fnliteral:  fnlitdcl lbrace stmt_list.'}' 
	stmt_list:  stmt_list.';' stmt 

	';'  shift 419
	'}'  shift 418
	.  error


state 305
	stmt_list:  stmt.    (271)

	.  reduce 271 (src line 1836)


state 306
	stmt:  compound_stmt.    (253)

	.  reduce 253 (src line 1755)


state 307
	stmt:  common_dcl.    (254)

	.  reduce 254 (src line 1756)


state 308
	stmt:  non_dcl_stmt.    (255)

	.  reduce 255 (src line 1760)


state 309
	stmt:  error.    (256)

	.  reduce 256 (src line 1761)


state 310
	compound_stmt:  '{'.$$59 stmt_list '}' 
	$$59: .    (59)

	.  reduce 59 (src line 544)

	$$59  goto 420

state 311
	othertype:  '[' oexpr ']'.ntype 

	LCHAN  shift 78
	LFUNC  shift 125
	LINTERFACE  shift 83
	LMAP  shift 79
	LNAME  shift 10
	LSTRUCT  shift 82
	LCOMM  shift 233
	'*'  shift 197
	'('  shift 232
	'['  shift 77
	'?'  shift 12
	'@'  shift 13
	.  error

	sym  goto 124
	ntype  goto 421
	dotname  goto 231
	name  goto 198
	interfacetype  goto 81
	structtype  goto 80
	ptrtype  goto 230
	recvchantype  goto 227
	othertype  goto 229
	fntype  goto 228
	hidden_importsym  goto 11

state 312
	othertype:  '[' LDDD ']'.ntype 

	LCHAN  shift 78
	LFUNC  shift 125
	LINTERFACE  shift 83
	LMAP  shift 79
	LNAME  shift 10
	LSTRUCT  shift 82
	LCOMM  shift 233
	'*'  shift 197
	'('  shift 232
	'['  shift 77
	'?'  shift 12
	'@'  shift 13
	.  error

	sym  goto 124
	ntype  goto 422
	dotname  goto 231
	name  goto 198
	interfacetype  goto 81
	structtype  goto 80
	ptrtype  goto 230
	recvchantype  goto 227
	othertype  goto 229
	fntype  goto 228
	hidden_importsym  goto 11

state 313
	othertype:  LCHAN LCOMM ntype.    (194)

	.  reduce 194 (src line 1263)


state 314
	non_recvchantype:  '(' ntype.')' 

	')'  shift 423
	.  error


state 315
	ptrtype:  '*' ntype.    (198)

	.  reduce 198 (src line 1275)


state 316
	dotname:  name '.'.sym 

	LNAME  shift 10
	'?'  shift 12
	'@'  shift 13
	.  error

	sym  goto 424
	hidden_importsym  goto 11

state 317
	othertype:  LMAP '[' ntype.']' ntype 

	']'  shift 425
	.  error


state 318
	structtype:  LSTRUCT lbrace structdcl_list.osemi '}' 
	structdcl_list:  structdcl_list.';' structdcl 
	osemi: .    (287)

	';'  shift 427
	.  reduce 287 (src line 1925)

	osemi  goto 426

state 319
	structtype:  LSTRUCT lbrace '}'.    (201)

	.  reduce 201 (src line 1295)


state 320
	structdcl_list:  structdcl.    (227)

	.  reduce 227 (src line 1579)


state 321
	structdcl:  new_name_list.ntype oliteral 
	new_name_list:  new_name_list.',' new_name 

	LCHAN  shift 78
	LFUNC  shift 125
	LINTERFACE  shift 83
	LMAP  shift 79
	LNAME  shift 10
	LSTRUCT  shift 82
	LCOMM  shift 233
	'*'  shift 197
	'('  shift 232
	'['  shift 77
	'?'  shift 12
	'@'  shift 13
	','  shift 429
	.  error

	sym  goto 124
	ntype  goto 428
	dotname  goto 231
	name  goto 198
	interfacetype  goto 81
	structtype  goto 80
	ptrtype  goto 230
	recvchantype  goto 227
	othertype  goto 229
	fntype  goto 228
	hidden_importsym  goto 11

state 322
	structdcl:  embed.oliteral 
	oliteral: .    (303)

	LLITERAL  shift 431
	.  reduce 303 (src line 1967)

	oliteral  goto 430

state 323
	structdcl:  '('.embed ')' oliteral 
	structdcl:  '('.'*' embed ')' oliteral 

	LNAME  shift 434
	'*'  shift 433
	.  error

	packname  goto 326
	embed  goto 432

state 324
	structdcl:  '*'.embed oliteral 
	structdcl:  '*'.'(' embed ')' oliteral 

	LNAME  shift 434
	'('  shift 436
	.  error

	packname  goto 326
	embed  goto 435

state 325
	new_name_list:  new_name.    (273)

	.  reduce 273 (src line 1852)


state 326
	embed:  packname.    (239)

	.  reduce 239 (src line 1678)


state 327
	sym:  LNAME.    (157)
	packname:  LNAME.    (237)
	packname:  LNAME.'.' sym 

	LLITERAL  reduce 237 (src line 1653)
	';'  reduce 237 (src line 1653)
	'.'  shift 437
	'}'  reduce 237 (src line 1653)
	.  reduce 157 (src line 1113)


state 328
	interfacetype:  LINTERFACE lbrace interfacedcl_list.osemi '}' 
	interfacedcl_list:  interfacedcl_list.';' interfacedcl 
	osemi: .    (287)

	';'  shift 439
	.  reduce 287 (src line 1925)

	osemi  goto 438

state 329
	interfacetype:  LINTERFACE lbrace '}'.    (203)

	.  reduce 203 (src line 1308)


state 330
	interfacedcl_list:  interfacedcl.    (229)

	.  reduce 229 (src line 1586)


state 331
	interfacedcl:  new_name.indcl 

	'('  shift 441
	.  error

	indcl  goto 440

state 332
	interfacedcl:  packname.    (241)

	.  reduce 241 (src line 1690)


state 333
	interfacedcl:  '('.packname ')' 

	LNAME  shift 434
	.  error

	packname  goto 442

state 334
	import:  LIMPORT '(' import_stmt_list osemi.')' 

	')'  shift 443
	.  error


state 335
	import_stmt_list:  import_stmt_list ';'.import_stmt 
	osemi:  ';'.    (288)

	LLITERAL  shift 88
	LNAME  shift 10
	'.'  shift 90
	'?'  shift 12
	'@'  shift 13
	.  reduce 288 (src line 1926)

	import_here  goto 87
	sym  goto 89
	hidden_importsym  goto 11
	import_stmt  goto 444

state 336
	import_stmt:  import_here import_package import_there.    (11)

	.  reduce 11 (src line 173)


state 337
	hidden_import:  LIMPORT LNAME LLITERAL.';' 

	';'  shift 445
	.  error


state 338
	hidden_import:  LVAR hidden_pkg_importsym hidden_type.';' 

	';'  shift 446
	.  error


state 339
	hidden_type:  hidden_type_misc.    (313)

	.  reduce 313 (src line 2035)


state 340
	hidden_type:  hidden_type_recv_chan.    (314)

	.  reduce 314 (src line 2037)


state 341
	hidden_type:  hidden_type_func.    (315)

	.  reduce 315 (src line 2038)


state 342
	hidden_type_misc:  hidden_importsym.    (318)

	.  reduce 318 (src line 2044)


state 343
	hidden_type_misc:  LNAME.    (319)

	.  reduce 319 (src line 2049)


state 344
	hidden_type_misc:  '['.']' hidden_type 
	hidden_type_misc:  '['.LLITERAL ']' hidden_type 

	LLITERAL  shift 448
	']'  shift 447
	.  error


state 345
	hidden_type_misc:  LMAP.'[' hidden_type ']' hidden_type 

	'['  shift 449
	.  error


state 346
	hidden_type_misc:  LSTRUCT.'{' ohidden_structdcl_list '}' 

	'{'  shift 450
	.  error


state 347
	hidden_type_misc:  LINTERFACE.'{' ohidden_interfacedcl_list '}' 

	'{'  shift 451
	.  error


state 348
	hidden_type_misc:  '*'.hidden_type 

	LCHAN  shift 349
	LFUNC  shift 351
	LINTERFACE  shift 347
	LMAP  shift 345
	LNAME  shift 343
	LSTRUCT  shift 346
	LCOMM  shift 350
	'*'  shift 348
	'['  shift 344
	'@'  shift 13
	.  error

	hidden_importsym  goto 342
	hidden_type  goto 452
	hidden_type_misc  goto 339
	hidden_type_func  goto 341
	hidden_type_recv_chan  goto 340

state 349
	hidden_type_misc:  LCHAN.hidden_type_non_recv_chan 
	hidden_type_misc:  LCHAN.'(' hidden_type_recv_chan ')' 
	hidden_type_misc:  LCHAN.LCOMM hidden_type 

	LCHAN  shift 349
	LFUNC  shift 351
	LINTERFACE  shift 347
	LMAP  shift 345
	LNAME  shift 343
	LSTRUCT  shift 346
	LCOMM  shift 455
	'*'  shift 348
	'('  shift 454
	'['  shift 344
	'@'  shift 13
	.  error

	hidden_importsym  goto 342
	hidden_type_misc  goto 456
	hidden_type_func  goto 457
	hidden_type_non_recv_chan  goto 453

state 350
	hidden_type_recv_chan:  LCOMM.LCHAN hidden_type 

	LCHAN  shift 458
	.  error


state 351
	hidden_type_func:  LFUNC.'(' ohidden_funarg_list ')' ohidden_funres 

	'('  shift 459
	.  error


state 352
	hidden_import:  LCONST hidden_pkg_importsym '='.hidden_constant ';' 

	LLITERAL  shift 463
	LNAME  shift 10
	'-'  shift 464
	'('  shift 462
	'?'  shift 12
	'@'  shift 13
	.  error

	sym  goto 465
	hidden_importsym  goto 11
	hidden_constant  goto 460
	hidden_literal  goto 461

state 353
	hidden_import:  LCONST hidden_pkg_importsym hidden_type.'=' hidden_constant ';' 

	'='  shift 466
	.  error


state 354
	hidden_import:  LTYPE hidden_pkgtype hidden_type.';' 

	';'  shift 467
	.  error


state 355
	hidden_import:  LFUNC hidden_fndcl fnbody.';' 

	';'  shift 468
	.  error


state 356
	hidden_fndcl:  hidden_pkg_importsym '('.ohidden_funarg_list ')' ohidden_funres 
	ohidden_funarg_list: .    (297)

	LNAME  shift 10
	'?'  shift 12
	'@'  shift 13
	.  reduce 297 (src line 1949)

	sym  goto 359
	hidden_importsym  goto 11
	hidden_funarg  goto 358
	hidden_funarg_list  goto 470
	ohidden_funarg_list  goto 469

state 357
	hidden_fndcl:  '(' hidden_funarg_list.')' sym '(' ohidden_funarg_list ')' ohidden_funres 
	hidden_funarg_list:  hidden_funarg_list.',' hidden_funarg 

	')'  shift 471
	','  shift 472
	.  error


state 358
	hidden_funarg_list:  hidden_funarg.    (347)

	.  reduce 347 (src line 2244)


state 359
	hidden_funarg:  sym.hidden_type oliteral 
	hidden_funarg:  sym.LDDD hidden_type oliteral 

	LCHAN  shift 349
	LDDD  shift 474
	LFUNC  shift 351
	LINTERFACE  shift 347
	LMAP  shift 345
	LNAME  shift 343
	LSTRUCT  shift 346
	LCOMM  shift 350
	'*'  shift 348
	'['  shift 344
	'@'  shift 13
	.  error

	hidden_importsym  goto 342
	hidden_type  goto 473
	hidden_type_misc  goto 339
	hidden_type_func  goto 341
	hidden_type_recv_chan  goto 340

state 360
	common_dcl:  LVAR '(' vardcl_list osemi.')' 

	')'  shift 475
	.  error


state 361
	vardcl_list:  vardcl_list ';'.vardcl 
	osemi:  ';'.    (288)

	LNAME  shift 10
	'?'  shift 12
	'@'  shift 13
	.  reduce 288 (src line 1926)

	sym  goto 105
	dcl_name  goto 104
	dcl_name_list  goto 103
	vardcl  goto 476
	hidden_importsym  goto 11

state 362
	vardcl:  dcl_name_list ntype '='.expr_list 

	LLITERAL  shift 68
	LCHAN  shift 78
	LFUNC  shift 125
	LINTERFACE  shift 83
	LMAP  shift 79
	LNAME  shift 10
	LSTRUCT  shift 82
	LCOMM  shift 65
	'+'  shift 60
	'-'  shift 61
	'^'  shift 64
	'*'  shift 58
	'&'  shift 59
	'('  shift 67
	'!'  shift 62
	'~'  shift 63
	'['  shift 77
	'?'  shift 12
	'@'  shift 13
	.  error

	sym  goto 124
	expr  goto 130
	fnliteral  goto 73
	name  goto 69
	pexpr  goto 57
	pexpr_no_paren  goto 66
	pseudocall  goto 70
	uexpr  goto 55
	expr_list  goto 477
	convtype  goto 71
	comptype  goto 72
	interfacetype  goto 81
	structtype  goto 80
	othertype  goto 75
	fntype  goto 74
	hidden_importsym  goto 11
	fnlitdcl  goto 76

state 363
	vardcl:  dcl_name_list '=' expr_list.    (41)
	expr_list:  expr_list.',' expr 

	','  shift 156
	.  reduce 41 (src line 369)


state 364
	dcl_name_list:  dcl_name_list ',' dcl_name.    (276)

	.  reduce 276 (src line 1867)


state 365
	ntype:  '(' ntype.')' 

	')'  shift 478
	.  error


state 366
	recvchantype:  LCOMM LCHAN.ntype 

	LCHAN  shift 78
	LFUNC  shift 125
	LINTERFACE  shift 83
	LMAP  shift 79
	LNAME  shift 10
	LSTRUCT  shift 82
	LCOMM  shift 233
	'*'  shift 197
	'('  shift 232
	'['  shift 77
	'?'  shift 12
	'@'  shift 13
	.  error

	sym  goto 124
	ntype  goto 409
	dotname  goto 231
	name  goto 198
	interfacetype  goto 81
	structtype  goto 80
	ptrtype  goto 230
	recvchantype  goto 227
	othertype  goto 229
	fntype  goto 228
	hidden_importsym  goto 11

state 367
	common_dcl:  lconst '(' constdcl osemi.')' 

	')'  shift 479
	.  error


state 368
	common_dcl:  lconst '(' constdcl ';'.constdcl_list osemi ')' 
	osemi:  ';'.    (288)

	LNAME  shift 10
	'?'  shift 12
	'@'  shift 13
	.  reduce 288 (src line 1926)

	sym  goto 105
	dcl_name  goto 104
	dcl_name_list  goto 483
	constdcl  goto 482
	constdcl1  goto 481
	constdcl_list  goto 480
	hidden_importsym  goto 11

state 369
	constdcl:  dcl_name_list ntype '='.expr_list 

	LLITERAL  shift 68
	LCHAN  shift 78
	LFUNC  shift 125
	LINTERFACE  shift 83
	LMAP  shift 79
	LNAME  shift 10
	LSTRUCT  shift 82
	LCOMM  shift 65
	'+'  shift 60
	'-'  shift 61
	'^'  shift 64
	'*'  shift 58
	'&'  shift 59
	'('  shift 67
	'!'  shift 62
	'~'  shift 63
	'['  shift 77
	'?'  shift 12
	'@'  shift 13
	.  error

	sym  goto 124
	expr  goto 130
	fnliteral  goto 73
	name  goto 69
	pexpr  goto 57
	pexpr_no_paren  goto 66
	pseudocall  goto 70
	uexpr  goto 55
	expr_list  goto 484
	convtype  goto 71
	comptype  goto 72
	interfacetype  goto 81
	structtype  goto 80
	othertype  goto 75
	fntype  goto 74
	hidden_importsym  goto 11
	fnlitdcl  goto 76

state 370
	constdcl:  dcl_name_list '=' expr_list.    (43)
	expr_list:  expr_list.',' expr 

	','  shift 156
	.  reduce 43 (src line 379)


state 371
	common_dcl:  LTYPE '(' typedcl_list osemi.')' 

	')'  shift 485
	.  error


state 372
	typedcl_list:  typedcl_list ';'.typedcl 
	osemi:  ';'.    (288)

	LNAME  shift 10
	'?'  shift 12
	'@'  shift 13
	.  reduce 288 (src line 1926)

	sym  goto 112
	typedclname  goto 111
	typedcl  goto 486
	hidden_importsym  goto 11

state 373
	fnbody:  '{' stmt_list.'}' 
	stmt_list:  stmt_list.';' stmt 

	';'  shift 419
	'}'  shift 487
	.  error


state 374
	fndcl:  '(' oarg_type_list_ocomma ')'.sym '(' oarg_type_list_ocomma ')' fnres 
	fntype:  LFUNC '(' oarg_type_list_ocomma ')'.fnres 
	fnres: .    (213)

	LCHAN  shift 78
	LFUNC  shift 125
	LINTERFACE  shift 83
	LMAP  shift 79
	LNAME  shift 10
	LSTRUCT  shift 82
	LCOMM  shift 233
	'*'  shift 197
	'('  shift 491
	'['  shift 77
	'?'  shift 12
	'@'  shift 13
	.  reduce 213 (src line 1501)

	sym  goto 488
	dotname  goto 496
	name  goto 198
	fnres  goto 489
	interfacetype  goto 81
	structtype  goto 80
	ptrtype  goto 495
	recvchantype  goto 492
	othertype  goto 494
	fnret_type  goto 490
	fntype  goto 493
	hidden_importsym  goto 11

state 375
	arg_type_list:  arg_type_list ','.arg_type 
	ocomma:  ','.    (290)

	LCHAN  shift 78
	LDDD  shift 251
	LFUNC  shift 125
	LINTERFACE  shift 83
	LMAP  shift 79
	LNAME  shift 10
	LSTRUCT  shift 82
	LCOMM  shift 233
	'*'  shift 197
	'('  shift 232
	'['  shift 77
	'?'  shift 12
	'@'  shift 13
	.  reduce 290 (src line 1929)

	sym  goto 248
	ntype  goto 250
	arg_type  goto 497
	dotname  goto 231
	name  goto 198
	name_or_type  goto 247
	dotdotdot  goto 249
	interfacetype  goto 81
	structtype  goto 80
	ptrtype  goto 230
	recvchantype  goto 227
	othertype  goto 229
	fntype  goto 228
	hidden_importsym  goto 11

state 376
	oarg_type_list_ocomma:  arg_type_list ocomma.    (251)

	.  reduce 251 (src line 1743)


state 377
	arg_type:  sym name_or_type.    (245)

	.  reduce 245 (src line 1715)


state 378
	arg_type:  sym dotdotdot.    (246)

	.  reduce 246 (src line 1721)


state 379
	dotdotdot:  LDDD ntype.    (165)

	.  reduce 165 (src line 1185)


state 380
	fndcl:  LLT sym LGT.sym '(' oarg_type_list_ocomma ')' fnres 

	LNAME  shift 10
	'?'  shift 12
	'@'  shift 13
	.  error

	sym  goto 498
	hidden_importsym  goto 11

state 381
	fndcl:  sym '(' oarg_type_list_ocomma.')' fnres 

	')'  shift 499
	.  error


state 382
	non_dcl_stmt:  labelname ':' $$262 stmt.    (263)

	.  reduce 263 (src line 1777)


state 383
	fntype:  LFUNC '(' oarg_type_list_ocomma.')' fnres 

	')'  shift 500
	.  error


state 384
	for_body:  for_header loop_body.    (73)

	.  reduce 73 (src line 652)


state 385
	loop_body:  LBODY.$$65 stmt_list '}' 
	$$65: .    (65)

	.  reduce 65 (src line 599)

	$$65  goto 501

state 386
	for_header:  osimple_stmt ';'.osimple_stmt ';' osimple_stmt 
	osimple_stmt: .    (295)

	LLITERAL  shift 68
	LCHAN  shift 78
	LFUNC  shift 125
	LINTERFACE  shift 83
	LMAP  shift 79
	LNAME  shift 10
	LSTRUCT  shift 82
	LCOMM  shift 65
	'+'  shift 60
	'-'  shift 61
	'^'  shift 64
	'*'  shift 58
	'&'  shift 59
	'('  shift 67
	'!'  shift 62
	'~'  shift 63
	'['  shift 77
	'?'  shift 12
	'@'  shift 13
	.  reduce 295 (src line 1943)

	sym  goto 124
	expr  goto 48
	fnliteral  goto 73
	name  goto 69
	osimple_stmt  goto 502
	pexpr  goto 57
	pexpr_no_paren  goto 66
	pseudocall  goto 70
	simple_stmt  goto 284
	uexpr  goto 55
	expr_list  goto 49
	convtype  goto 71
	comptype  goto 72
	interfacetype  goto 81
	structtype  goto 80
	othertype  goto 75
	fntype  goto 74
	hidden_importsym  goto 11
	fnlitdcl  goto 76

state 387
	simple_stmt:  expr_list '='.expr_list 
	range_stmt:  expr_list '='.LRANGE expr 

	LLITERAL  shift 68
	LCHAN  shift 78
	LFUNC  shift 125
	LINTERFACE  shift 83
	LMAP  shift 79
	LNAME  shift 10
	LRANGE  shift 503
	LSTRUCT  shift 82
	LCOMM  shift 65
	'+'  shift 60
	'-'  shift 61
	'^'  shift 64
	'*'  shift 58
	'&'  shift 59
	'('  shift 67
	'!'  shift 62
	'~'  shift 63
	'['  shift 77
	'?'  shift 12
	'@'  shift 13
	.  error

	sym  goto 124
	expr  goto 130
	fnliteral  goto 73
	name  goto 69
	pexpr  goto 57
	pexpr_no_paren  goto 66
	pseudocall  goto 70
	uexpr  goto 55
	expr_list  goto 277
	convtype  goto 71
	comptype  goto 72
	interfacetype  goto 81
	structtype  goto 80
	othertype  goto 75
	fntype  goto 74
	hidden_importsym  goto 11
	fnlitdcl  goto 76

state 388
	simple_stmt:  expr_list LCOLAS.expr_list 
	range_stmt:  expr_list LCOLAS.LRANGE expr 

	LLITERAL  shift 68
	LCHAN  shift 78
	LFUNC  shift 125
	LINTERFACE  shift 83
	LMAP  shift 79
	LNAME  shift 10
	LRANGE  shift 504
	LSTRUCT  shift 82
	LCOMM  shift 65
	'+'  shift 60
	'-'  shift 61
	'^'  shift 64
	'*'  shift 58
	'&'  shift 59
	'('  shift 67
	'!'  shift 62
	'~'  shift 63
	'['  shift 77
	'?'  shift 12
	'@'  shift 13
	.  error

	sym  goto 124
	expr  goto 130
	fnliteral  goto 73
	name  goto 69
	pexpr  goto 57
	pexpr_no_paren  goto 66
	pseudocall  goto 70
	uexpr  goto 55
	expr_list  goto 278
	convtype  goto 71
	comptype  goto 72
	interfacetype  goto 81
	structtype  goto 80
	othertype  goto 75
	fntype  goto 74
	hidden_importsym  goto 11
	fnlitdcl  goto 76

state 389
	range_stmt:  LRANGE expr.    (69)
	expr:  expr.LOROR expr 
	expr:  expr.LANDAND expr 
	expr:  expr.LEQ expr 
	expr:  expr.LNE expr 
	expr:  expr.LLT expr 
	expr:  expr.LLE expr 
	expr:  expr.LGE expr 
	expr:  expr.LGT expr 
	expr:  expr.'+' expr 
	expr:  expr.'-' expr 
	expr:  expr.'|' expr 
	expr:  expr.'^' expr 
	expr:  expr.'*' expr 
	expr:  expr.'/' expr 
	expr:  expr.'%' expr 
	expr:  expr.'&' expr 
	expr:  expr.LANDNOT expr 
	expr:  expr.LLSH expr 
	expr:  expr.LRSH expr 
	expr:  expr.LCOMM expr 

	LANDAND  shift 135
	LANDNOT  shift 150
	LCOMM  shift 153
	LEQ  shift 136
	LGE  shift 140
	LGT  shift 141
	LLE  shift 139
	LLSH  shift 151
	LLT  shift 138
	LNE  shift 137
	LOROR  shift 134
	LRSH  shift 152
	'+'  shift 142
	'-'  shift 143
	'|'  shift 144
	'^'  shift 145
	'*'  shift 146
	'/'  shift 147
	'%'  shift 148
	'&'  shift 149
	.  reduce 69 (src line 624)


state 390
	switch_stmt:  LSWITCH $$88 if_header $$89.LBODY caseblock_list '}' 

	LBODY  shift 505
	.  error


state 391
	if_header:  osimple_stmt ';'.osimple_stmt 
	osimple_stmt: .    (295)

	LLITERAL  shift 68
	LCHAN  shift 78
	LFUNC  shift 125
	LINTERFACE  shift 83
	LMAP  shift 79
	LNAME  shift 10
	LSTRUCT  shift 82
	LCOMM  shift 65
	'+'  shift 60
	'-'  shift 61
	'^'  shift 64
	'*'  shift 58
	'&'  shift 59
	'('  shift 67
	'!'  shift 62
	'~'  shift 63
	'['  shift 77
	'?'  shift 12
	'@'  shift 13
	.  reduce 295 (src line 1943)

	sym  goto 124
	expr  goto 48
	fnliteral  goto 73
	name  goto 69
	osimple_stmt  goto 506
	pexpr  goto 57
	pexpr_no_paren  goto 66
	pseudocall  goto 70
	simple_stmt  goto 284
	uexpr  goto 55
	expr_list  goto 49
	convtype  goto 71
	comptype  goto 72
	interfacetype  goto 81
	structtype  goto 80
	othertype  goto 75
	fntype  goto 74
	hidden_importsym  goto 11
	fnlitdcl  goto 76

state 392
	caseblock_list:  caseblock_list.caseblock 
	select_stmt:  LSELECT $$91 LBODY caseblock_list.'}' 

	LCASE  shift 510
	LDEFAULT  shift 511
	'}'  shift 508
	.  error

	case  goto 509
	caseblock  goto 507

state 393
	if_stmt:  LIF $$78 if_header $$79.loop_body $$80 elseif_list else 

	LBODY  shift 385
	.  error

	loop_body  goto 512

state 394
	pseudocall:  pexpr '(' expr_or_type_list ocomma.')' 

	')'  shift 513
	.  error


state 395
	pseudocall:  pexpr '(' expr_or_type_list LDDD.ocomma ')' 
	ocomma: .    (289)

	','  shift 416
	.  reduce 289 (src line 1928)

	ocomma  goto 514

state 396
	expr_or_type_list:  expr_or_type_list ','.expr_or_type 
	ocomma:  ','.    (290)

	LLITERAL  shift 68
	LCHAN  shift 78
	LFUNC  shift 125
	LINTERFACE  shift 83
	LMAP  shift 79
	LNAME  shift 10
	LSTRUCT  shift 82
	LCOMM  shift 180
	'+'  shift 60
	'-'  shift 61
	'^'  shift 64
	'*'  shift 179
	'&'  shift 59
	'('  shift 67
	'!'  shift 62
	'~'  shift 63
	'['  shift 77
	'?'  shift 12
	'@'  shift 13
	.  reduce 290 (src line 1929)

	sym  goto 124
	expr  goto 174
	expr_or_type  goto 515
	fnliteral  goto 73
	name  goto 69
	non_expr_type  goto 175
	pexpr  goto 57
	pexpr_no_paren  goto 66
	pseudocall  goto 70
	uexpr  goto 55
	convtype  goto 71
	comptype  goto 72
	interfacetype  goto 81
	structtype  goto 80
	recvchantype  goto 176
	othertype  goto 178
	fntype  goto 177
	hidden_importsym  goto 11
	fnlitdcl  goto 76

state 397
	pexpr_no_paren:  pexpr '.' '(' expr_or_type.')' 

	')'  shift 516
	.  error


state 398
	pexpr_no_paren:  pexpr '.' '(' LTYPE.')' 

	')'  shift 517
	.  error


state 399
	pexpr_no_paren:  pexpr '[' expr ']'.    (131)

	.  reduce 131 (src line 966)


state 400
	pexpr_no_paren:  pexpr '[' oexpr ':'.oexpr ']' 
	pexpr_no_paren:  pexpr '[' oexpr ':'.oexpr ':' oexpr ']' 
	oexpr: .    (291)

	LLITERAL  shift 68
	LCHAN  shift 78
	LFUNC  shift 125
	LINTERFACE  shift 83
	LMAP  shift 79
	LNAME  shift 10
	LSTRUCT  shift 82
	LCOMM  shift 65
	'+'  shift 60
	'-'  shift 61
	'^'  shift 64
	'*'  shift 58
	'&'  shift 59
	'('  shift 67
	'!'  shift 62
	'~'  shift 63
	'['  shift 77
	'?'  shift 12
	'@'  shift 13
	.  reduce 291 (src line 1931)

	sym  goto 124
	expr  goto 189
	fnliteral  goto 73
	name  goto 69
	oexpr  goto 518
	pexpr  goto 57
	pexpr_no_paren  goto 66
	pseudocall  goto 70
	uexpr  goto 55
	convtype  goto 71
	comptype  goto 72
	interfacetype  goto 81
	structtype  goto 80
	othertype  goto 75
	fntype  goto 74
	hidden_importsym  goto 11
	fnlitdcl  goto 76

state 401
	pexpr_no_paren:  pexpr_no_paren '{' start_complit braced_keyval_list.'}' 

	'}'  shift 519
	.  error


state 402
	keyval_list:  keyval_list.',' keyval 
	keyval_list:  keyval_list.',' bare_complitexpr 
	braced_keyval_list:  keyval_list.ocomma 
	ocomma: .    (289)

	','  shift 520
	.  reduce 289 (src line 1928)

	ocomma  goto 521

state 403
	keyval_list:  keyval.    (281)

	.  reduce 281 (src line 1895)


state 404
	keyval_list:  bare_complitexpr.    (282)

	.  reduce 282 (src line 1900)


state 405
	expr:  expr.LOROR expr 
	expr:  expr.LANDAND expr 
	expr:  expr.LEQ expr 
	expr:  expr.LNE expr 
	expr:  expr.LLT expr 
	expr:  expr.LLE expr 
	expr:  expr.LGE expr 
	expr:  expr.LGT expr 
	expr:  expr.'+' expr 
	expr:  expr.'-' expr 
	expr:  expr.'|' expr 
	expr:  expr.'^' expr 
	expr:  expr.'*' expr 
	expr:  expr.'/' expr 
	expr:  expr.'%' expr 
	expr:  expr.'&' expr 
	expr:  expr.LANDNOT expr 
	expr:  expr.LLSH expr 
	expr:  expr.LRSH expr 
	expr:  expr.LCOMM expr 
	keyval:  expr.':' complitexpr 
	bare_complitexpr:  expr.    (142)

	LANDAND  shift 135
	LANDNOT  shift 150
	LCOMM  shift 153
	LEQ  shift 136
	LGE  shift 140
	LGT  shift 141
	LLE  shift 139
	LLSH  shift 151
	LLT  shift 138
	LNE  shift 137
	LOROR  shift 134
	LRSH  shift 152
	'+'  shift 142
	'-'  shift 143
	'|'  shift 144
	'^'  shift 145
	'*'  shift 146
	'/'  shift 147
	'%'  shift 148
	'&'  shift 149
	':'  shift 522
	.  reduce 142 (src line 1026)


state 406
	bare_complitexpr:  '{'.start_complit braced_keyval_list '}' 
	start_complit: .    (140)

	.  reduce 140 (src line 1013)

	start_complit  goto 523

state 407
	pexpr_no_paren:  '(' expr_or_type ')' '{'.start_complit braced_keyval_list '}' 
	start_complit: .    (140)

	.  reduce 140 (src line 1013)

	start_complit  goto 524

state 408
	othertype:  LCHAN LCOMM.ntype 
	recvchantype:  LCOMM.LCHAN ntype 

	LCHAN  shift 301
	LFUNC  shift 125
	LINTERFACE  shift 83
	LMAP  shift 79
	LNAME  shift 10
	LSTRUCT  shift 82
	LCOMM  shift 233
	'*'  shift 197
	'('  shift 232
	'['  shift 77
	'?'  shift 12
	'@'  shift 13
	.  error

	sym  goto 124
	ntype  goto 313
	dotname  goto 231
	name  goto 198
	interfacetype  goto 81
	structtype  goto 80
	ptrtype  goto 230
	recvchantype  goto 227
	othertype  goto 229
	fntype  goto 228
	hidden_importsym  goto 11

state 409
	recvchantype:  LCOMM LCHAN ntype.    (199)

	.  reduce 199 (src line 1281)


state 410
	ntype:  fntype.    (167)
	non_recvchantype:  fntype.    (176)

	LBODY  reduce 176 (src line 1210)
	'('  reduce 176 (src line 1210)
	'{'  reduce 176 (src line 1210)
	.  reduce 167 (src line 1192)


state 411
	ntype:  othertype.    (168)
	non_recvchantype:  othertype.    (177)

	LBODY  reduce 177 (src line 1212)
	'('  reduce 177 (src line 1212)
	'{'  reduce 177 (src line 1212)
	.  reduce 168 (src line 1193)


state 412
	ntype:  ptrtype.    (169)
	non_recvchantype:  ptrtype.    (178)

	LBODY  reduce 178 (src line 1213)
	'('  reduce 178 (src line 1213)
	'{'  reduce 178 (src line 1213)
	.  reduce 169 (src line 1194)


state 413
	ntype:  dotname.    (170)
	non_recvchantype:  dotname.    (179)

	LBODY  reduce 179 (src line 1214)
	'('  reduce 179 (src line 1214)
	'{'  reduce 179 (src line 1214)
	.  reduce 170 (src line 1195)


state 414
	ntype:  '('.ntype ')' 
	non_recvchantype:  '('.ntype ')' 

	LCHAN  shift 78
	LFUNC  shift 125
	LINTERFACE  shift 83
	LMAP  shift 79
	LNAME  shift 10
	LSTRUCT  shift 82
	LCOMM  shift 233
	'*'  shift 197
	'('  shift 232
	'['  shift 77
	'?'  shift 12
	'@'  shift 13
	.  error

	sym  goto 124
	ntype  goto 525
	dotname  goto 231
	name  goto 198
	interfacetype  goto 81
	structtype  goto 80
	ptrtype  goto 230
	recvchantype  goto 227
	othertype  goto 229
	fntype  goto 228
	hidden_importsym  goto 11

state 415
	pexpr_no_paren:  convtype '(' expr ocomma.')' 

	')'  shift 526
	.  error


state 416
	ocomma:  ','.    (290)

	.  reduce 290 (src line 1929)


state 417
	pexpr_no_paren:  comptype lbrace start_complit braced_keyval_list.'}' 

	'}'  shift 527
	.  error


state 418
	fnliteral:  fnlitdcl lbrace stmt_list '}'.    (217)

	.  reduce 217 (src line 1522)


state 419
	stmt_list:  stmt_list ';'.stmt 
	stmt: .    (252)

	error  shift 309
	LLITERAL  shift 68
	LBREAK  shift 41
	LCASE  reduce 252 (src line 1751)
	LCHAN  shift 78
	LCONST  shift 47
	LCONTINUE  shift 42
	LDEFAULT  reduce 252 (src line 1751)
	LDEFER  shift 44
	LFALL  shift 40
	LFOR  shift 50
	LFUNC  shift 125
	LGO  shift 43
	LGOTO  shift 45
	LIF  shift 53
	LINTERFACE  shift 83
	LMAP  shift 79
	LNAME  shift 10
	LRETURN  shift 46
	LSELECT  shift 52
	LSTRUCT  shift 82
	LSWITCH  shift 51
	LTYPE  shift 32
	LVAR  shift 30
	LCOMM  shift 65
	'+'  shift 60
	'-'  shift 61
	'^'  shift 64
	'*'  shift 58
	'&'  shift 59
	'('  shift 67
	';'  reduce 252 (src line 1751)
	'{'  shift 310
	'}'  reduce 252 (src line 1751)
	'!'  shift 62
	'~'  shift 63
	'['  shift 77
	'?'  shift 12
	'@'  shift 13
	.  error

	sym  goto 56
	stmt  goto 528
	compound_stmt  goto 306
	expr  goto 48
	fnliteral  goto 73
	for_stmt  goto 35
	if_stmt  goto 38
	non_dcl_stmt  goto 308
	labelname  goto 39
	name  goto 69
	new_name  goto 54
	pexpr  goto 57
	pexpr_no_paren  goto 66
	pseudocall  goto 70
	select_stmt  goto 37
	simple_stmt  goto 34
	switch_stmt  goto 36
	uexpr  goto 55
	expr_list  goto 49
	common_dcl  goto 307
	convtype  goto 71
	comptype  goto 72
	interfacetype  goto 81
	structtype  goto 80
	othertype  goto 75
	fntype  goto 74
	hidden_importsym  goto 11
	lconst  goto 31
	fnlitdcl  goto 76

state 420
	compound_stmt:  '{' $$59.stmt_list '}' 
	stmt: .    (252)

	error  shift 309
	LLITERAL  shift 68
	LBREAK  shift 41
	LCHAN  shift 78
	LCONST  shift 47
	LCONTINUE  shift 42
	LDEFER  shift 44
	LFALL  shift 40
	LFOR  shift 50
	LFUNC  shift 125
	LGO  shift 43
	LGOTO  shift 45
	LIF  shift 53
	LINTERFACE  shift 83
	LMAP  shift 79
	LNAME  shift 10
	LRETURN  shift 46
	LSELECT  shift 52
	LSTRUCT  shift 82
	LSWITCH  shift 51
	LTYPE  shift 32
	LVAR  shift 30
	LCOMM  shift 65
	'+'  shift 60
	'-'  shift 61
	'^'  shift 64
	'*'  shift 58
	'&'  shift 59
	'('  shift 67
	';'  reduce 252 (src line 1751)
	'{'  shift 310
	'}'  reduce 252 (src line 1751)
	'!'  shift 62
	'~'  shift 63
	'['  shift 77
	'?'  shift 12
	'@'  shift 13
	.  error

	sym  goto 56
	stmt  goto 305
	compound_stmt  goto 306
	expr  goto 48
	fnliteral  goto 73
	for_stmt  goto 35
	if_stmt  goto 38
	non_dcl_stmt  goto 308
	labelname  goto 39
	name  goto 69
	new_name  goto 54
	pexpr  goto 57
	pexpr_no_paren  goto 66
	pseudocall  goto 70
	select_stmt  goto 37
	simple_stmt  goto 34
	switch_stmt  goto 36
	uexpr  goto 55
	expr_list  goto 49
	stmt_list  goto 529
	common_dcl  goto 307
	convtype  goto 71
	comptype  goto 72
	interfacetype  goto 81
	structtype  goto 80
	othertype  goto 75
	fntype  goto 74
	hidden_importsym  goto 11
	lconst  goto 31
	fnlitdcl  goto 76

state 421
	othertype:  '[' oexpr ']' ntype.    (191)

	.  reduce 191 (src line 1248)


state 422
	othertype:  '[' LDDD ']' ntype.    (192)

	.  reduce 192 (src line 1253)


state 423
	non_recvchantype:  '(' ntype ')'.    (180)

	.  reduce 180 (src line 1215)


state 424
	dotname:  name '.' sym.    (190)

	.  reduce 190 (src line 1236)


state 425
	othertype:  LMAP '[' ntype ']'.ntype 

	LCHAN  shift 78
	LFUNC  shift 125
	LINTERFACE  shift 83
	LMAP  shift 79
	LNAME  shift 10
	LSTRUCT  shift 82
	LCOMM  shift 233
	'*'  shift 197
	'('  shift 232
	'['  shift 77
	'?'  shift 12
	'@'  shift 13
	.  error

	sym  goto 124
	ntype  goto 530
	dotname  goto 231
	name  goto 198
	interfacetype  goto 81
	structtype  goto 80
	ptrtype  goto 230
	recvchantype  goto 227
	othertype  goto 229
	fntype  goto 228
	hidden_importsym  goto 11

state 426
	structtype:  LSTRUCT lbrace structdcl_list osemi.'}' 

	'}'  shift 531
	.  error


state 427
	structdcl_list:  structdcl_list ';'.structdcl 
	osemi:  ';'.    (288)

	LNAME  shift 327
	'*'  shift 324
	'('  shift 323
	'?'  shift 12
	'@'  shift 13
	.  reduce 288 (src line 1926)

	sym  goto 120
	packname  goto 326
	embed  goto 322
	new_name  goto 325
	new_name_list  goto 321
	structdcl  goto 532
	hidden_importsym  goto 11

state 428
	structdcl:  new_name_list ntype.oliteral 
	oliteral: .    (303)

	LLITERAL  shift 431
	.  reduce 303 (src line 1967)

	oliteral  goto 533

state 429
	new_name_list:  new_name_list ','.new_name 

	LNAME  shift 10
	'?'  shift 12
	'@'  shift 13
	.  error

	sym  goto 120
	new_name  goto 534
	hidden_importsym  goto 11

state 430
	structdcl:  embed oliteral.    (232)

	.  reduce 232 (src line 1621)


state 431
	oliteral:  LLITERAL.    (304)

	.  reduce 304 (src line 1971)


state 432
	structdcl:  '(' embed.')' oliteral 

	')'  shift 535
	.  error


state 433
	structdcl:  '(' '*'.embed ')' oliteral 

	LNAME  shift 434
	.  error

	packname  goto 326
	embed  goto 536

state 434
	packname:  LNAME.    (237)
	packname:  LNAME.'.' sym 

	'.'  shift 437
	.  reduce 237 (src line 1653)


state 435
	structdcl:  '*' embed.oliteral 
	oliteral: .    (303)

	LLITERAL  shift 431
	.  reduce 303 (src line 1967)

	oliteral  goto 537

state 436
	structdcl:  '*' '('.embed ')' oliteral 

	LNAME  shift 434
	.  error

	packname  goto 326
	embed  goto 538

state 437
	packname:  LNAME '.'.sym 

	LNAME  shift 10
	'?'  shift 12
	'@'  shift 13
	.  error

	sym  goto 539
	hidden_importsym  goto 11

state 438
	interfacetype:  LINTERFACE lbrace interfacedcl_list osemi.'}' 

	'}'  shift 540
	.  error


state 439
	interfacedcl_list:  interfacedcl_list ';'.interfacedcl 
	osemi:  ';'.    (288)

	LNAME  shift 327
	'('  shift 333
	'?'  shift 12
	'@'  shift 13
	.  reduce 288 (src line 1926)

	sym  goto 120
	packname  goto 332
	interfacedcl  goto 541
	new_name  goto 331
	hidden_importsym  goto 11

state 440
	interfacedcl:  new_name indcl.    (240)

	.  reduce 240 (src line 1684)


state 441
	indcl:  '('.oarg_type_list_ocomma ')' fnres 
	oarg_type_list_ocomma: .    (250)

	LCHAN  shift 78
	LDDD  shift 251
	LFUNC  shift 125
	LINTERFACE  shift 83
	LMAP  shift 79
	LNAME  shift 10
	LSTRUCT  shift 82
	LCOMM  shift 233
	'*'  shift 197
	'('  shift 232
	'['  shift 77
	'?'  shift 12
	'@'  shift 13
	.  reduce 250 (src line 1739)

	sym  goto 248
	ntype  goto 250
	arg_type  goto 246
	dotname  goto 231
	name  goto 198
	name_or_type  goto 247
	oarg_type_list_ocomma  goto 542
	arg_type_list  goto 245
	dotdotdot  goto 249
	interfacetype  goto 81
	structtype  goto 80
	ptrtype  goto 230
	recvchantype  goto 227
	othertype  goto 229
	fntype  goto 228
	hidden_importsym  goto 11

state 442
	interfacedcl:  '(' packname.')' 

	')'  shift 543
	.  error


state 443
	import:  LIMPORT '(' import_stmt_list osemi ')'.    (9)

	.  reduce 9 (src line 170)


state 444
	import_stmt_list:  import_stmt_list ';' import_stmt.    (14)

	.  reduce 14 (src line 222)


state 445
	hidden_import:  LIMPORT LNAME LLITERAL ';'.    (305)

	.  reduce 305 (src line 1976)


state 446
	hidden_import:  LVAR hidden_pkg_importsym hidden_type ';'.    (306)

	.  reduce 306 (src line 1981)


state 447
	hidden_type_misc:  '[' ']'.hidden_type 

	LCHAN  shift 349
	LFUNC  shift 351
	LINTERFACE  shift 347
	LMAP  shift 345
	LNAME  shift 343
	LSTRUCT  shift 346
	LCOMM  shift 350
	'*'  shift 348
	'['  shift 344
	'@'  shift 13
	.  error

	hidden_importsym  goto 342
	hidden_type  goto 544
	hidden_type_misc  goto 339
	hidden_type_func  goto 341
	hidden_type_recv_chan  goto 340

state 448
	hidden_type_misc:  '[' LLITERAL.']' hidden_type 

	']'  shift 545
	.  error


state 449
	hidden_type_misc:  LMAP '['.hidden_type ']' hidden_type 

	LCHAN  shift 349
	LFUNC  shift 351
	LINTERFACE  shift 347
	LMAP  shift 345
	LNAME  shift 343
	LSTRUCT  shift 346
	LCOMM  shift 350
	'*'  shift 348
	'['  shift 344
	'@'  shift 13
	.  error

	hidden_importsym  goto 342
	hidden_type  goto 546
	hidden_type_misc  goto 339
	hidden_type_func  goto 341
	hidden_type_recv_chan  goto 340

state 450
	hidden_type_misc:  LSTRUCT '{'.ohidden_structdcl_list '}' 
	ohidden_structdcl_list: .    (299)

	LNAME  shift 10
	'?'  shift 12
	'@'  shift 13
	.  reduce 299 (src line 1955)

	sym  goto 550
	hidden_importsym  goto 11
	hidden_structdcl  goto 549
	hidden_structdcl_list  goto 548
	ohidden_structdcl_list  goto 547

state 451
	hidden_type_misc:  LINTERFACE '{'.ohidden_interfacedcl_list '}' 
	ohidden_interfacedcl_list: .    (301)

	LCHAN  shift 349
	LFUNC  shift 351
	LINTERFACE  shift 347
	LMAP  shift 345
	LNAME  shift 556
	LSTRUCT  shift 346
	LCOMM  shift 350
	'*'  shift 348
	'['  shift 344
	'?'  shift 12
	'@'  shift 13
	.  reduce 301 (src line 1961)

	sym  goto 554
	hidden_importsym  goto 557
	hidden_interfacedcl  goto 553
	hidden_interfacedcl_list  goto 552
	ohidden_interfacedcl_list  goto 551
	hidden_type  goto 555
	hidden_type_misc  goto 339
	hidden_type_func  goto 341
	hidden_type_recv_chan  goto 340

state 452
	hidden_type_misc:  '*' hidden_type.    (325)

	.  reduce 325 (src line 2080)


state 453
	hidden_type_misc:  LCHAN hidden_type_non_recv_chan.    (326)

	.  reduce 326 (src line 2084)


state 454
	hidden_type_misc:  LCHAN '('.hidden_type_recv_chan ')' 

	LCOMM  shift 350
	.  error

	hidden_type_recv_chan  goto 558

state 455
	hidden_type_misc:  LCHAN LCOMM.hidden_type 

	LCHAN  shift 349
	LFUNC  shift 351
	LINTERFACE  shift 347
	LMAP  shift 345
	LNAME  shift 343
	LSTRUCT  shift 346
	LCOMM  shift 350
	'*'  shift 348
	'['  shift 344
	'@'  shift 13
	.  error

	hidden_importsym  goto 342
	hidden_type  goto 559
	hidden_type_misc  goto 339
	hidden_type_func  goto 341
	hidden_type_recv_chan  goto 340

state 456
	hidden_type_non_recv_chan:  hidden_type_misc.    (316)

	.  reduce 316 (src line 2040)


state 457
	hidden_type_non_recv_chan:  hidden_type_func.    (317)

	.  reduce 317 (src line 2042)


state 458
	hidden_type_recv_chan:  LCOMM LCHAN.hidden_type 

	LCHAN  shift 349
	LFUNC  shift 351
	LINTERFACE  shift 347
	LMAP  shift 345
	LNAME  shift 343
	LSTRUCT  shift 346
	LCOMM  shift 350
	'*'  shift 348
	'['  shift 344
	'@'  shift 13
	.  error

	hidden_importsym  goto 342
	hidden_type  goto 560
	hidden_type_misc  goto 339
	hidden_type_func  goto 341
	hidden_type_recv_chan  goto 340

state 459
	hidden_type_func:  LFUNC '('.ohidden_funarg_list ')' ohidden_funres 
	ohidden_funarg_list: .    (297)

	LNAME  shift 10
	'?'  shift 12
	'@'  shift 13
	.  reduce 297 (src line 1949)

	sym  goto 359
	hidden_importsym  goto 11
	hidden_funarg  goto 358
	hidden_funarg_list  goto 470
	ohidden_funarg_list  goto 561

state 460
	hidden_import:  LCONST hidden_pkg_importsym '=' hidden_constant.';' 

	';'  shift 562
	.  error


state 461
	hidden_constant:  hidden_literal.    (343)

	.  reduce 343 (src line 2227)


state 462
	hidden_constant:  '('.hidden_literal '+' hidden_literal ')' 

	LLITERAL  shift 463
	LNAME  shift 10
	'-'  shift 464
	'?'  shift 12
	'@'  shift 13
	.  error

	sym  goto 465
	hidden_importsym  goto 11
	hidden_literal  goto 563

state 463
	hidden_literal:  LLITERAL.    (340)

	.  reduce 340 (src line 2196)


state 464
	hidden_literal:  '-'.LLITERAL 

	LLITERAL  shift 564
	.  error


state 465
	hidden_literal:  sym.    (342)

	.  reduce 342 (src line 2219)


state 466
	hidden_import:  LCONST hidden_pkg_importsym hidden_type '='.hidden_constant ';' 

	LLITERAL  shift 463
	LNAME  shift 10
	'-'  shift 464
	'('  shift 462
	'?'  shift 12
	'@'  shift 13
	.  error

	sym  goto 465
	hidden_importsym  goto 11
	hidden_constant  goto 565
	hidden_literal  goto 461

state 467
	hidden_import:  LTYPE hidden_pkgtype hidden_type ';'.    (309)

	.  reduce 309 (src line 1993)


state 468
	hidden_import:  LFUNC hidden_fndcl fnbody ';'.    (310)

	.  reduce 310 (src line 1997)


state 469
	hidden_fndcl:  hidden_pkg_importsym '(' ohidden_funarg_list.')' ohidden_funres 

	')'  shift 566
	.  error


state 470
	ohidden_funarg_list:  hidden_funarg_list.    (298)
	hidden_funarg_list:  hidden_funarg_list.',' hidden_funarg 

	','  shift 472
	.  reduce 298 (src line 1953)


state 471
	hidden_fndcl:  '(' hidden_funarg_list ')'.sym '(' ohidden_funarg_list ')' ohidden_funres 

	LNAME  shift 10
	'?'  shift 12
	'@'  shift 13
	.  error

	sym  goto 567
	hidden_importsym  goto 11

state 472
	hidden_funarg_list:  hidden_funarg_list ','.hidden_funarg 

	LNAME  shift 10
	'?'  shift 12
	'@'  shift 13
	.  error

	sym  goto 359
	hidden_importsym  goto 11
	hidden_funarg  goto 568

state 473
	hidden_funarg:  sym hidden_type.oliteral 
	oliteral: .    (303)

	LLITERAL  shift 431
	.  reduce 303 (src line 1967)

	oliteral  goto 569

state 474
	hidden_funarg:  sym LDDD.hidden_type oliteral 

	LCHAN  shift 349
	LFUNC  shift 351
	LINTERFACE  shift 347
	LMAP  shift 345
	LNAME  shift 343
	LSTRUCT  shift 346
	LCOMM  shift 350
	'*'  shift 348
	'['  shift 344
	'@'  shift 13
	.  error

	hidden_importsym  goto 342
	hidden_type  goto 570
	hidden_type_misc  goto 339
	hidden_type_func  goto 341
	hidden_type_recv_chan  goto 340

state 475
	common_dcl:  LVAR '(' vardcl_list osemi ')'.    (29)

	.  reduce 29 (src line 310)


state 476
	vardcl_list:  vardcl_list ';' vardcl.    (222)

	.  reduce 222 (src line 1557)


state 477
	vardcl:  dcl_name_list ntype '=' expr_list.    (40)
	expr_list:  expr_list.',' expr 

	','  shift 156
	.  reduce 40 (src line 365)


state 478
	ntype:  '(' ntype ')'.    (171)

	.  reduce 171 (src line 1196)


state 479
	common_dcl:  lconst '(' constdcl osemi ')'.    (32)

	.  reduce 32 (src line 324)


state 480
	common_dcl:  lconst '(' constdcl ';' constdcl_list.osemi ')' 
	constdcl_list:  constdcl_list.';' constdcl1 
	osemi: .    (287)

	';'  shift 572
	.  reduce 287 (src line 1925)

	osemi  goto 571

state 481
	constdcl_list:  constdcl1.    (223)

	.  reduce 223 (src line 1562)


state 482
	constdcl1:  constdcl.    (44)

	.  reduce 44 (src line 384)


state 483
	constdcl:  dcl_name_list.ntype '=' expr_list 
	constdcl:  dcl_name_list.'=' expr_list 
	constdcl1:  dcl_name_list.ntype 
	constdcl1:  dcl_name_list.    (46)
	dcl_name_list:  dcl_name_list.',' dcl_name 

	LCHAN  shift 78
	LFUNC  shift 125
	LINTERFACE  shift 83
	LMAP  shift 79
	LNAME  shift 10
	LSTRUCT  shift 82
	LCOMM  shift 233
	'*'  shift 197
	'('  shift 232
	'='  shift 237
	'['  shift 77
	'?'  shift 12
	'@'  shift 13
	','  shift 226
	.  reduce 46 (src line 390)

	sym  goto 124
	ntype  goto 573
	dotname  goto 231
	name  goto 198
	interfacetype  goto 81
	structtype  goto 80
	ptrtype  goto 230
	recvchantype  goto 227
	othertype  goto 229
	fntype  goto 228
	hidden_importsym  goto 11

state 484
	constdcl:  dcl_name_list ntype '=' expr_list.    (42)
	expr_list:  expr_list.',' expr 

	','  shift 156
	.  reduce 42 (src line 374)


state 485
	common_dcl:  LTYPE '(' typedcl_list osemi ')'.    (36)

	.  reduce 36 (src line 345)


state 486
	typedcl_list:  typedcl_list ';' typedcl.    (226)

	.  reduce 226 (src line 1574)


state 487
	fnbody:  '{' stmt_list '}'.    (212)

	.  reduce 212 (src line 1493)


state 488
	name:  sym.    (162)
	fndcl:  '(' oarg_type_list_ocomma ')' sym.'(' oarg_type_list_ocomma ')' fnres 

	'('  shift 574
	.  reduce 162 (src line 1158)


state 489
	fntype:  LFUNC '(' oarg_type_list_ocomma ')' fnres.    (210)

	.  reduce 210 (src line 1480)


state 490
	fnres:  fnret_type.    (214)

	.  reduce 214 (src line 1506)


state 491
	fnres:  '('.oarg_type_list_ocomma ')' 
	oarg_type_list_ocomma: .    (250)

	LCHAN  shift 78
	LDDD  shift 251
	LFUNC  shift 125
	LINTERFACE  shift 83
	LMAP  shift 79
	LNAME  shift 10
	LSTRUCT  shift 82
	LCOMM  shift 233
	'*'  shift 197
	'('  shift 232
	'['  shift 77
	'?'  shift 12
	'@'  shift 13
	.  reduce 250 (src line 1739)

	sym  goto 248
	ntype  goto 250
	arg_type  goto 246
	dotname  goto 231
	name  goto 198
	name_or_type  goto 247
	oarg_type_list_ocomma  goto 575
	arg_type_list  goto 245
	dotdotdot  goto 249
	interfacetype  goto 81
	structtype  goto 80
	ptrtype  goto 230
	recvchantype  goto 227
	othertype  goto 229
	fntype  goto 228
	hidden_importsym  goto 11

state 492
	fnret_type:  recvchantype.    (184)

	.  reduce 184 (src line 1227)


state 493
	fnret_type:  fntype.    (185)

	.  reduce 185 (src line 1229)


state 494
	fnret_type:  othertype.    (186)

	.  reduce 186 (src line 1230)


state 495
	fnret_type:  ptrtype.    (187)

	.  reduce 187 (src line 1231)


state 496
	fnret_type:  dotname.    (188)

	.  reduce 188 (src line 1232)


state 497
	arg_type_list:  arg_type_list ',' arg_type.    (249)

	.  reduce 249 (src line 1734)


state 498
	fndcl:  LLT sym LGT sym.'(' oarg_type_list_ocomma ')' fnres 

	'('  shift 576
	.  error


state 499
	fndcl:  sym '(' oarg_type_list_ocomma ')'.fnres 
	fnres: .    (213)

	LCHAN  shift 78
	LFUNC  shift 125
	LINTERFACE  shift 83
	LMAP  shift 79
	LNAME  shift 10
	LSTRUCT  shift 82
	LCOMM  shift 233
	'*'  shift 197
	'('  shift 491
	'['  shift 77
	'?'  shift 12
	'@'  shift 13
	.  reduce 213 (src line 1501)

	sym  goto 124
	dotname  goto 496
	name  goto 198
	fnres  goto 577
	interfacetype  goto 81
	structtype  goto 80
	ptrtype  goto 495
	recvchantype  goto 492
	othertype  goto 494
	fnret_type  goto 490
	fntype  goto 493
	hidden_importsym  goto 11

state 500
	fntype:  LFUNC '(' oarg_type_list_ocomma ')'.fnres 
	fnres: .    (213)

	LCHAN  shift 78
	LFUNC  shift 125
	LINTERFACE  shift 83
	LMAP  shift 79
	LNAME  shift 10
	LSTRUCT  shift 82
	LCOMM  shift 233
	'*'  shift 197
	'('  shift 491
	'['  shift 77
	'?'  shift 12
	'@'  shift 13
	.  reduce 213 (src line 1501)

	sym  goto 124
	dotname  goto 496
	name  goto 198
	fnres  goto 489
	interfacetype  goto 81
	structtype  goto 80
	ptrtype  goto 495
	recvchantype  goto 492
	othertype  goto 494
	fnret_type  goto 490
	fntype  goto 493
	hidden_importsym  goto 11

state 501
	loop_body:  LBODY $$65.stmt_list '}' 
	stmt: .    (252)

	error  shift 309
	LLITERAL  shift 68
	LBREAK  shift 41
	LCHAN  shift 78
	LCONST  shift 47
	LCONTINUE  shift 42
	LDEFER  shift 44
	LFALL  shift 40
	LFOR  shift 50
	LFUNC  shift 125
	LGO  shift 43
	LGOTO  shift 45
	LIF  shift 53
	LINTERFACE  shift 83
	LMAP  shift 79
	LNAME  shift 10
	LRETURN  shift 46
	LSELECT  shift 52
	LSTRUCT  shift 82
	LSWITCH  shift 51
	LTYPE  shift 32
	LVAR  shift 30
	LCOMM  shift 65
	'+'  shift 60
	'-'  shift 61
	'^'  shift 64
	'*'  shift 58
	'&'  shift 59
	'('  shift 67
	';'  reduce 252 (src line 1751)
	'{'  shift 310
	'}'  reduce 252 (src line 1751)
	'!'  shift 62
	'~'  shift 63
	'['  shift 77
	'?'  shift 12
	'@'  shift 13
	.  error

	sym  goto 56
	stmt  goto 305
	compound_stmt  goto 306
	expr  goto 48
	fnliteral  goto 73
	for_stmt  goto 35
	if_stmt  goto 38
	non_dcl_stmt  goto 308
	labelname  goto 39
	name  goto 69
	new_name  goto 54
	pexpr  goto 57
	pexpr_no_paren  goto 66
	pseudocall  goto 70
	select_stmt  goto 37
	simple_stmt  goto 34
	switch_stmt  goto 36
	uexpr  goto 55
	expr_list  goto 49
	stmt_list  goto 578
	common_dcl  goto 307
	convtype  goto 71
	comptype  goto 72
	interfacetype  goto 81
	structtype  goto 80
	othertype  goto 75
	fntype  goto 74
	hidden_importsym  goto 11
	lconst  goto 31
	fnlitdcl  goto 76

state 502
	for_header:  osimple_stmt ';' osimple_stmt.';' osimple_stmt 

	';'  shift 579
	.  error


state 503
	range_stmt:  expr_list '=' LRANGE.expr 

	LLITERAL  shift 68
	LCHAN  shift 78
	LFUNC  shift 125
	LINTERFACE  shift 83
	LMAP  shift 79
	LNAME  shift 10
	LSTRUCT  shift 82
	LCOMM  shift 65
	'+'  shift 60
	'-'  shift 61
	'^'  shift 64
	'*'  shift 58
	'&'  shift 59
	'('  shift 67
	'!'  shift 62
	'~'  shift 63
	'['  shift 77
	'?'  shift 12
	'@'  shift 13
	.  error

	sym  goto 124
	expr  goto 580
	fnliteral  goto 73
	name  goto 69
	pexpr  goto 57
	pexpr_no_paren  goto 66
	pseudocall  goto 70
	uexpr  goto 55
	convtype  goto 71
	comptype  goto 72
	interfacetype  goto 81
	structtype  goto 80
	othertype  goto 75
	fntype  goto 74
	hidden_importsym  goto 11
	fnlitdcl  goto 76

state 504
	range_stmt:  expr_list LCOLAS LRANGE.expr 

	LLITERAL  shift 68
	LCHAN  shift 78
	LFUNC  shift 125
	LINTERFACE  shift 83
	LMAP  shift 79
	LNAME  shift 10
	LSTRUCT  shift 82
	LCOMM  shift 65
	'+'  shift 60
	'-'  shift 61
	'^'  shift 64
	'*'  shift 58
	'&'  shift 59
	'('  shift 67
	'!'  shift 62
	'~'  shift 63
	'['  shift 77
	'?'  shift 12
	'@'  shift 13
	.  error

	sym  goto 124
	expr  goto 581
	fnliteral  goto 73
	name  goto 69
	pexpr  goto 57
	pexpr_no_paren  goto 66
	pseudocall  goto 70
	uexpr  goto 55
	convtype  goto 71
	comptype  goto 72
	interfacetype  goto 81
	structtype  goto 80
	othertype  goto 75
	fntype  goto 74
	hidden_importsym  goto 11
	fnlitdcl  goto 76

state 505
	switch_stmt:  LSWITCH $$88 if_header $$89 LBODY.caseblock_list '}' 
	caseblock_list: .    (63)

	.  reduce 63 (src line 590)

	caseblock_list  goto 582

state 506
	if_header:  osimple_stmt ';' osimple_stmt.    (77)

	.  reduce 77 (src line 677)


state 507
	caseblock_list:  caseblock_list caseblock.    (64)

	.  reduce 64 (src line 594)


state 508
	select_stmt:  LSELECT $$91 LBODY caseblock_list '}'.    (92)

	.  reduce 92 (src line 782)


state 509
	caseblock:  case.$$61 stmt_list 
	$$61: .    (61)

	.  reduce 61 (src line 559)

	$$61  goto 583

state 510
	case:  LCASE.expr_or_type_list ':' 
	case:  LCASE.expr_or_type_list '=' expr ':' 
	case:  LCASE.expr_or_type_list LCOLAS expr ':' 

	LLITERAL  shift 68
	LCHAN  shift 78
	LFUNC  shift 125
	LINTERFACE  shift 83
	LMAP  shift 79
	LNAME  shift 10
	LSTRUCT  shift 82
	LCOMM  shift 180
	'+'  shift 60
	'-'  shift 61
	'^'  shift 64
	'*'  shift 179
	'&'  shift 59
	'('  shift 67
	'!'  shift 62
	'~'  shift 63
	'['  shift 77
	'?'  shift 12
	'@'  shift 13
	.  error

	sym  goto 124
	expr  goto 174
	expr_or_type  goto 293
	fnliteral  goto 73
	name  goto 69
	non_expr_type  goto 175
	pexpr  goto 57
	pexpr_no_paren  goto 66
	pseudocall  goto 70
	uexpr  goto 55
	expr_or_type_list  goto 584
	convtype  goto 71
	comptype  goto 72
	interfacetype  goto 81
	structtype  goto 80
	recvchantype  goto 176
	othertype  goto 178
	fntype  goto 177
	hidden_importsym  goto 11
	fnlitdcl  goto 76

state 511
	case:  LDEFAULT.':' 

	':'  shift 585
	.  error


state 512
	if_stmt:  LIF $$78 if_header $$79 loop_body.$$80 elseif_list else 
	$$80: .    (80)

	.  reduce 80 (src line 699)

	$$80  goto 586

state 513
	pseudocall:  pexpr '(' expr_or_type_list ocomma ')'.    (124)

	.  reduce 124 (src line 929)


state 514
	pseudocall:  pexpr '(' expr_or_type_list LDDD ocomma.')' 

	')'  shift 587
	.  error


state 515
	expr_or_type_list:  expr_or_type_list ',' expr_or_type.    (280)

	.  reduce 280 (src line 1887)


state 516
	pexpr_no_paren:  pexpr '.' '(' expr_or_type ')'.    (129)

	.  reduce 129 (src line 958)


state 517
	pexpr_no_paren:  pexpr '.' '(' LTYPE ')'.    (130)

	.  reduce 130 (src line 962)


state 518
	pexpr_no_paren:  pexpr '[' oexpr ':' oexpr.']' 
	pexpr_no_paren:  pexpr '[' oexpr ':' oexpr.':' oexpr ']' 

	':'  shift 589
	']'  shift 588
	.  error


state 519
	pexpr_no_paren:  pexpr_no_paren '{' start_complit braced_keyval_list '}'.    (137)

	.  reduce 137 (src line 998)


state 520
	keyval_list:  keyval_list ','.keyval 
	keyval_list:  keyval_list ','.bare_complitexpr 
	ocomma:  ','.    (290)

	LLITERAL  shift 68
	LCHAN  shift 78
	LFUNC  shift 125
	LINTERFACE  shift 83
	LMAP  shift 79
	LNAME  shift 10
	LSTRUCT  shift 82
	LCOMM  shift 65
	'+'  shift 60
	'-'  shift 61
	'^'  shift 64
	'*'  shift 58
	'&'  shift 59
	'('  shift 67
	'{'  shift 406
	'!'  shift 62
	'~'  shift 63
	'['  shift 77
	'?'  shift 12
	'@'  shift 13
	.  reduce 290 (src line 1929)

	sym  goto 124
	expr  goto 405
	bare_complitexpr  goto 591
	fnliteral  goto 73
	keyval  goto 590
	name  goto 69
	pexpr  goto 57
	pexpr_no_paren  goto 66
	pseudocall  goto 70
	uexpr  goto 55
	convtype  goto 71
	comptype  goto 72
	interfacetype  goto 81
	structtype  goto 80
	othertype  goto 75
	fntype  goto 74
	hidden_importsym  goto 11
	fnlitdcl  goto 76

state 521
	braced_keyval_list:  keyval_list ocomma.    (286)

	.  reduce 286 (src line 1917)


state 522
	keyval:  expr ':'.complitexpr 

	LLITERAL  shift 68
	LCHAN  shift 78
	LFUNC  shift 125
	LINTERFACE  shift 83
	LMAP  shift 79
	LNAME  shift 10
	LSTRUCT  shift 82
	LCOMM  shift 65
	'+'  shift 60
	'-'  shift 61
	'^'  shift 64
	'*'  shift 58
	'&'  shift 59
	'('  shift 67
	'{'  shift 594
	'!'  shift 62
	'~'  shift 63
	'['  shift 77
	'?'  shift 12
	'@'  shift 13
	.  error

	sym  goto 124
	expr  goto 593
	complitexpr  goto 592
	fnliteral  goto 73
	name  goto 69
	pexpr  goto 57
	pexpr_no_paren  goto 66
	pseudocall  goto 70
	uexpr  goto 55
	convtype  goto 71
	comptype  goto 72
	interfacetype  goto 81
	structtype  goto 80
	othertype  goto 75
	fntype  goto 74
	hidden_importsym  goto 11
	fnlitdcl  goto 76

state 523
	bare_complitexpr:  '{' start_complit.braced_keyval_list '}' 
	braced_keyval_list: .    (285)

	LLITERAL  shift 68
	LCHAN  shift 78
	LFUNC  shift 125
	LINTERFACE  shift 83
	LMAP  shift 79
	LNAME  shift 10
	LSTRUCT  shift 82
	LCOMM  shift 65
	'+'  shift 60
	'-'  shift 61
	'^'  shift 64
	'*'  shift 58
	'&'  shift 59
	'('  shift 67
	'{'  shift 406
	'!'  shift 62
	'~'  shift 63
	'['  shift 77
	'?'  shift 12
	'@'  shift 13
	.  reduce 285 (src line 1913)

	sym  goto 124
	expr  goto 405
	bare_complitexpr  goto 404
	fnliteral  goto 73
	keyval  goto 403
	name  goto 69
	pexpr  goto 57
	pexpr_no_paren  goto 66
	pseudocall  goto 70
	uexpr  goto 55
	keyval_list  goto 402
	braced_keyval_list  goto 595
	convtype  goto 71
	comptype  goto 72
	interfacetype  goto 81
	structtype  goto 80
	othertype  goto 75
	fntype  goto 74
	hidden_importsym  goto 11
	fnlitdcl  goto 76

state 524
	pexpr_no_paren:  '(' expr_or_type ')' '{' start_complit.braced_keyval_list '}' 
	braced_keyval_list: .    (285)

	LLITERAL  shift 68
	LCHAN  shift 78
	LFUNC  shift 125
	LINTERFACE  shift 83
	LMAP  shift 79
	LNAME  shift 10
	LSTRUCT  shift 82
	LCOMM  shift 65
	'+'  shift 60
	'-'  shift 61
	'^'  shift 64
	'*'  shift 58
	'&'  shift 59
	'('  shift 67
	'{'  shift 406
	'!'  shift 62
	'~'  shift 63
	'['  shift 77
	'?'  shift 12
	'@'  shift 13
	.  reduce 285 (src line 1913)

	sym  goto 124
	expr  goto 405
	bare_complitexpr  goto 404
	fnliteral  goto 73
	keyval  goto 403
	name  goto 69
	pexpr  goto 57
	pexpr_no_paren  goto 66
	pseudocall  goto 70
	uexpr  goto 55
	keyval_list  goto 402
	braced_keyval_list  goto 596
	convtype  goto 71
	comptype  goto 72
	interfacetype  goto 81
	structtype  goto 80
	othertype  goto 75
	fntype  goto 74
	hidden_importsym  goto 11
	fnlitdcl  goto 76

state 525
	ntype:  '(' ntype.')' 
	non_recvchantype:  '(' ntype.')' 

	')'  shift 597
	.  error


state 526
	pexpr_no_paren:  convtype '(' expr ocomma ')'.    (135)

	.  reduce 135 (src line 985)


state 527
	pexpr_no_paren:  comptype lbrace start_complit braced_keyval_list '}'.    (136)

	.  reduce 136 (src line 991)


state 528
	stmt_list:  stmt_list ';' stmt.    (272)

	.  reduce 272 (src line 1844)


state 529
	compound_stmt:  '{' $$59 stmt_list.'}' 
	stmt_list:  stmt_list.';' stmt 

	';'  shift 419
	'}'  shift 598
	.  error


state 530
	othertype:  LMAP '[' ntype ']' ntype.    (195)

	.  reduce 195 (src line 1268)


state 531
	structtype:  LSTRUCT lbrace structdcl_list osemi '}'.    (200)

	.  reduce 200 (src line 1288)


state 532
	structdcl_list:  structdcl_list ';' structdcl.    (228)

	.  reduce 228 (src line 1581)


state 533
	structdcl:  new_name_list ntype oliteral.    (231)

	.  reduce 231 (src line 1596)


state 534
	new_name_list:  new_name_list ',' new_name.    (274)

	.  reduce 274 (src line 1857)


state 535
	structdcl:  '(' embed ')'.oliteral 
	oliteral: .    (303)

	LLITERAL  shift 431
	.  reduce 303 (src line 1967)

	oliteral  goto 599

state 536
	structdcl:  '(' '*' embed.')' oliteral 

	')'  shift 600
	.  error


state 537
	structdcl:  '*' embed oliteral.    (234)

	.  reduce 234 (src line 1632)


state 538
	structdcl:  '*' '(' embed.')' oliteral 

	')'  shift 601
	.  error


state 539
	packname:  LNAME '.' sym.    (238)

	.  reduce 238 (src line 1664)


state 540
	interfacetype:  LINTERFACE lbrace interfacedcl_list osemi '}'.    (202)

	.  reduce 202 (src line 1301)


state 541
	interfacedcl_list:  interfacedcl_list ';' interfacedcl.    (230)

	.  reduce 230 (src line 1591)


state 542
	indcl:  '(' oarg_type_list_ocomma.')' fnres 

	')'  shift 602
	.  error


state 543
	interfacedcl:  '(' packname ')'.    (242)

	.  reduce 242 (src line 1694)


state 544
	hidden_type_misc:  '[' ']' hidden_type.    (320)

	.  reduce 320 (src line 2060)


state 545
	hidden_type_misc:  '[' LLITERAL ']'.hidden_type 

	LCHAN  shift 349
	LFUNC  shift 351
	LINTERFACE  shift 347
	LMAP  shift 345
	LNAME  shift 343
	LSTRUCT  shift 346
	LCOMM  shift 350
	'*'  shift 348
	'['  shift 344
	'@'  shift 13
	.  error

	hidden_importsym  goto 342
	hidden_type  goto 603
	hidden_type_misc  goto 339
	hidden_type_func  goto 341
	hidden_type_recv_chan  goto 340

state 546
	hidden_type_misc:  LMAP '[' hidden_type.']' hidden_type 

	']'  shift 604
	.  error


state 547
	hidden_type_misc:  LSTRUCT '{' ohidden_structdcl_list.'}' 

	'}'  shift 605
	.  error


state 548
	ohidden_structdcl_list:  hidden_structdcl_list.    (300)
	hidden_structdcl_list:  hidden_structdcl_list.';' hidden_structdcl 

	';'  shift 606
	.  reduce 300 (src line 1959)


state 549
	hidden_structdcl_list:  hidden_structdcl.    (349)

	.  reduce 349 (src line 2254)


state 550
	hidden_structdcl:  sym.hidden_type oliteral 

	LCHAN  shift 349
	LFUNC  shift 351
	LINTERFACE  shift 347
	LMAP  shift 345
	LNAME  shift 343
	LSTRUCT  shift 346
	LCOMM  shift 350
	'*'  shift 348
	'['  shift 344
	'@'  shift 13
	.  error

	hidden_importsym  goto 342
	hidden_type  goto 607
	hidden_type_misc  goto 339
	hidden_type_func  goto 341
	hidden_type_recv_chan  goto 340

state 551
	hidden_type_misc:  LINTERFACE '{' ohidden_interfacedcl_list.'}' 

	'}'  shift 608
	.  error


state 552
	ohidden_interfacedcl_list:  hidden_interfacedcl_list.    (302)
	hidden_interfacedcl_list:  hidden_interfacedcl_list.';' hidden_interfacedcl 

	';'  shift 609
	.  reduce 302 (src line 1965)


state 553
	hidden_interfacedcl_list:  hidden_interfacedcl.    (351)

	.  reduce 351 (src line 2264)


state 554
	hidden_interfacedcl:  sym.'(' ohidden_funarg_list ')' ohidden_funres 

	'('  shift 610
	.  error


state 555
	hidden_interfacedcl:  hidden_type.    (335)

	.  reduce 335 (src line 2171)


state 556
	sym:  LNAME.    (157)
	hidden_type_misc:  LNAME.    (319)

	'('  reduce 157 (src line 1113)
	.  reduce 319 (src line 2049)


state 557
	sym:  hidden_importsym.    (158)
	hidden_type_misc:  hidden_importsym.    (318)

	'('  reduce 158 (src line 1122)
	.  reduce 318 (src line 2044)


state 558
	hidden_type_misc:  LCHAN '(' hidden_type_recv_chan.')' 

	')'  shift 611
	.  error


state 559
	hidden_type_misc:  LCHAN LCOMM hidden_type.    (328)

	.  reduce 328 (src line 2096)


state 560
	hidden_type_recv_chan:  LCOMM LCHAN hidden_type.    (329)

	.  reduce 329 (src line 2103)


state 561
	hidden_type_func:  LFUNC '(' ohidden_funarg_list.')' ohidden_funres 

	')'  shift 612
	.  error


state 562
	hidden_import:  LCONST hidden_pkg_importsym '=' hidden_constant ';'.    (307)

	.  reduce 307 (src line 1985)


state 563
	hidden_constant:  '(' hidden_literal.'+' hidden_literal ')' 

	'+'  shift 613
	.  error


state 564
	hidden_literal:  '-' LLITERAL.    (341)

	.  reduce 341 (src line 2201)


state 565
	hidden_import:  LCONST hidden_pkg_importsym hidden_type '=' hidden_constant.';' 

	';'  shift 614
	.  error


state 566
	hidden_fndcl:  hidden_pkg_importsym '(' ohidden_funarg_list ')'.ohidden_funres 
	ohidden_funres: .    (336)

	LCHAN  shift 349
	LFUNC  shift 351
	LINTERFACE  shift 347
	LMAP  shift 345
	LNAME  shift 343
	LSTRUCT  shift 346
	LCOMM  shift 350
	'*'  shift 348
	'('  shift 617
	'['  shift 344
	'@'  shift 13
	.  reduce 336 (src line 2176)

	hidden_importsym  goto 342
	hidden_funres  goto 616
	ohidden_funres  goto 615
	hidden_type  goto 618
	hidden_type_misc  goto 339
	hidden_type_func  goto 341
	hidden_type_recv_chan  goto 340

state 567
	hidden_fndcl:  '(' hidden_funarg_list ')' sym.'(' ohidden_funarg_list ')' ohidden_funres 

	'('  shift 619
	.  error


state 568
	hidden_funarg_list:  hidden_funarg_list ',' hidden_funarg.    (348)

	.  reduce 348 (src line 2249)


state 569
	hidden_funarg:  sym hidden_type oliteral.    (331)

	.  reduce 331 (src line 2117)


state 570
	hidden_funarg:  sym LDDD hidden_type.oliteral 
	oliteral: .    (303)

	LLITERAL  shift 431
	.  reduce 303 (src line 1967)

	oliteral  goto 620

state 571
	common_dcl:  lconst '(' constdcl ';' constdcl_list osemi.')' 

	')'  shift 621
	.  error


state 572
	constdcl_list:  constdcl_list ';'.constdcl1 
	osemi:  ';'.    (288)

	LNAME  shift 10
	'?'  shift 12
	'@'  shift 13
	.  reduce 288 (src line 1926)

	sym  goto 105
	dcl_name  goto 104
	dcl_name_list  goto 483
	constdcl  goto 482
	constdcl1  goto 622
	hidden_importsym  goto 11

state 573
	constdcl:  dcl_name_list ntype.'=' expr_list 
	constdcl1:  dcl_name_list ntype.    (45)

	'='  shift 369
	.  reduce 45 (src line 386)


state 574
	fndcl:  '(' oarg_type_list_ocomma ')' sym '('.oarg_type_list_ocomma ')' fnres 
	oarg_type_list_ocomma: .    (250)

	LCHAN  shift 78
	LDDD  shift 251
	LFUNC  shift 125
	LINTERFACE  shift 83
	LMAP  shift 79
	LNAME  shift 10
	LSTRUCT  shift 82
	LCOMM  shift 233
	'*'  shift 197
	'('  shift 232
	'['  shift 77
	'?'  shift 12
	'@'  shift 13
	.  reduce 250 (src line 1739)

	sym  goto 248
	ntype  goto 250
	arg_type  goto 246
	dotname  goto 231
	name  goto 198
	name_or_type  goto 247
	oarg_type_list_ocomma  goto 623
	arg_type_list  goto 245
	dotdotdot  goto 249
	interfacetype  goto 81
	structtype  goto 80
	ptrtype  goto 230
	recvchantype  goto 227
	othertype  goto 229
	fntype  goto 228
	hidden_importsym  goto 11

state 575
	fnres:  '(' oarg_type_list_ocomma.')' 

	')'  shift 624
	.  error


state 576
	fndcl:  LLT sym LGT sym '('.oarg_type_list_ocomma ')' fnres 
	oarg_type_list_ocomma: .    (250)

	LCHAN  shift 78
	LDDD  shift 251
	LFUNC  shift 125
	LINTERFACE  shift 83
	LMAP  shift 79
	LNAME  shift 10
	LSTRUCT  shift 82
	LCOMM  shift 233
	'*'  shift 197
	'('  shift 232
	'['  shift 77
	'?'  shift 12
	'@'  shift 13
	.  reduce 250 (src line 1739)

	sym  goto 248
	ntype  goto 250
	arg_type  goto 246
	dotname  goto 231
	name  goto 198
	name_or_type  goto 247
	oarg_type_list_ocomma  goto 625
	arg_type_list  goto 245
	dotdotdot  goto 249
	interfacetype  goto 81
	structtype  goto 80
	ptrtype  goto 230
	recvchantype  goto 227
	othertype  goto 229
	fntype  goto 228
	hidden_importsym  goto 11

state 577
	fndcl:  sym '(' oarg_type_list_ocomma ')' fnres.    (206)

	.  reduce 206 (src line 1369)


state 578
	loop_body:  LBODY $$65 stmt_list.'}' 
	stmt_list:  stmt_list.';' stmt 

	';'  shift 419
	'}'  shift 626
	.  error


state 579
	for_header:  osimple_stmt ';' osimple_stmt ';'.osimple_stmt 
	osimple_stmt: .    (295)

	LLITERAL  shift 68
	LCHAN  shift 78
	LFUNC  shift 125
	LINTERFACE  shift 83
	LMAP  shift 79
	LNAME  shift 10
	LSTRUCT  shift 82
	LCOMM  shift 65
	'+'  shift 60
	'-'  shift 61
	'^'  shift 64
	'*'  shift 58
	'&'  shift 59
	'('  shift 67
	'!'  shift 62
	'~'  shift 63
	'['  shift 77
	'?'  shift 12
	'@'  shift 13
	.  reduce 295 (src line 1943)

	sym  goto 124
	expr  goto 48
	fnliteral  goto 73
	name  goto 69
	osimple_stmt  goto 627
	pexpr  goto 57
	pexpr_no_paren  goto 66
	pseudocall  goto 70
	simple_stmt  goto 284
	uexpr  goto 55
	expr_list  goto 49
	convtype  goto 71
	comptype  goto 72
	interfacetype  goto 81
	structtype  goto 80
	othertype  goto 75
	fntype  goto 74
	hidden_importsym  goto 11
	fnlitdcl  goto 76

state 580
	range_stmt:  expr_list '=' LRANGE expr.    (67)
	expr:  expr.LOROR expr 
	expr:  expr.LANDAND expr 
	expr:  expr.LEQ expr 
	expr:  expr.LNE expr 
	expr:  expr.LLT expr 
	expr:  expr.LLE expr 
	expr:  expr.LGE expr 
	expr:  expr.LGT expr 
	expr:  expr.'+' expr 
	expr:  expr.'-' expr 
	expr:  expr.'|' expr 
	expr:  expr.'^' expr 
	expr:  expr.'*' expr 
	expr:  expr.'/' expr 
	expr:  expr.'%' expr 
	expr:  expr.'&' expr 
	expr:  expr.LANDNOT expr 
	expr:  expr.LLSH expr 
	expr:  expr.LRSH expr 
	expr:  expr.LCOMM expr 

	LANDAND  shift 135
	LANDNOT  shift 150
	LCOMM  shift 153
	LEQ  shift 136
	LGE  shift 140
	LGT  shift 141
	LLE  shift 139
	LLSH  shift 151
	LLT  shift 138
	LNE  shift 137
	LOROR  shift 134
	LRSH  shift 152
	'+'  shift 142
	'-'  shift 143
	'|'  shift 144
	'^'  shift 145
	'*'  shift 146
	'/'  shift 147
	'%'  shift 148
	'&'  shift 149
	.  reduce 67 (src line 610)


state 581
	range_stmt:  expr_list LCOLAS LRANGE expr.    (68)
	expr:  expr.LOROR expr 
	expr:  expr.LANDAND expr 
	expr:  expr.LEQ expr 
	expr:  expr.LNE expr 
	expr:  expr.LLT expr 
	expr:  expr.LLE expr 
	expr:  expr.LGE expr 
	expr:  expr.LGT expr 
	expr:  expr.'+' expr 
	expr:  expr.'-' expr 
	expr:  expr.'|' expr 
	expr:  expr.'^' expr 
	expr:  expr.'*' expr 
	expr:  expr.'/' expr 
	expr:  expr.'%' expr 
	expr:  expr.'&' expr 
	expr:  expr.LANDNOT expr 
	expr:  expr.LLSH expr 
	expr:  expr.LRSH expr 
	expr:  expr.LCOMM expr 

	LANDAND  shift 135
	LANDNOT  shift 150
	LCOMM  shift 153
	LEQ  shift 136
	LGE  shift 140
	LGT  shift 141
	LLE  shift 139
	LLSH  shift 151
	LLT  shift 138
	LNE  shift 137
	LOROR  shift 134
	LRSH  shift 152
	'+'  shift 142
	'-'  shift 143
	'|'  shift 144
	'^'  shift 145
	'*'  shift 146
	'/'  shift 147
	'%'  shift 148
	'&'  shift 149
	.  reduce 68 (src line 617)


state 582
	caseblock_list:  caseblock_list.caseblock 
	switch_stmt:  LSWITCH $$88 if_header $$89 LBODY caseblock_list.'}' 

	LCASE  shift 510
	LDEFAULT  shift 511
	'}'  shift 628
	.  error

	case  goto 509
	caseblock  goto 507

state 583
	caseblock:  case $$61.stmt_list 
	stmt: .    (252)

	error  shift 309
	LLITERAL  shift 68
	LBREAK  shift 41
	LCASE  reduce 252 (src line 1751)
	LCHAN  shift 78
	LCONST  shift 47
	LCONTINUE  shift 42
	LDEFAULT  reduce 252 (src line 1751)
	LDEFER  shift 44
	LFALL  shift 40
	LFOR  shift 50
	LFUNC  shift 125
	LGO  shift 43
	LGOTO  shift 45
	LIF  shift 53
	LINTERFACE  shift 83
	LMAP  shift 79
	LNAME  shift 10
	LRETURN  shift 46
	LSELECT  shift 52
	LSTRUCT  shift 82
	LSWITCH  shift 51
	LTYPE  shift 32
	LVAR  shift 30
	LCOMM  shift 65
	'+'  shift 60
	'-'  shift 61
	'^'  shift 64
	'*'  shift 58
	'&'  shift 59
	'('  shift 67
	';'  reduce 252 (src line 1751)
	'{'  shift 310
	'}'  reduce 252 (src line 1751)
	'!'  shift 62
	'~'  shift 63
	'['  shift 77
	'?'  shift 12
	'@'  shift 13
	.  error

	sym  goto 56
	stmt  goto 305
	compound_stmt  goto 306
	expr  goto 48
	fnliteral  goto 73
	for_stmt  goto 35
	if_stmt  goto 38
	non_dcl_stmt  goto 308
	labelname  goto 39
	name  goto 69
	new_name  goto 54
	pexpr  goto 57
	pexpr_no_paren  goto 66
	pseudocall  goto 70
	select_stmt  goto 37
	simple_stmt  goto 34
	switch_stmt  goto 36
	uexpr  goto 55
	expr_list  goto 49
	stmt_list  goto 629
	common_dcl  goto 307
	convtype  goto 71
	comptype  goto 72
	interfacetype  goto 81
	structtype  goto 80
	othertype  goto 75
	fntype  goto 74
	hidden_importsym  goto 11
	lconst  goto 31
	fnlitdcl  goto 76

state 584
	case:  LCASE expr_or_type_list.':' 
	case:  LCASE expr_or_type_list.'=' expr ':' 
	case:  LCASE expr_or_type_list.LCOLAS expr ':' 
	expr_or_type_list:  expr_or_type_list.',' expr_or_type 

	LCOLAS  shift 632
	'='  shift 631
	':'  shift 630
	','  shift 633
	.  error


state 585
	case:  LDEFAULT ':'.    (58)

	.  reduce 58 (src line 524)


state 586
	if_stmt:  LIF $$78 if_header $$79 loop_body $$80.elseif_list else 
	elseif_list: .    (84)

	.  reduce 84 (src line 734)

	elseif_list  goto 634

state 587
	pseudocall:  pexpr '(' expr_or_type_list LDDD ocomma ')'.    (125)

	.  reduce 125 (src line 934)


state 588
	pexpr_no_paren:  pexpr '[' oexpr ':' oexpr ']'.    (132)

	.  reduce 132 (src line 970)


state 589
	pexpr_no_paren:  pexpr '[' oexpr ':' oexpr ':'.oexpr ']' 
	oexpr: .    (291)

	LLITERAL  shift 68
	LCHAN  shift 78
	LFUNC  shift 125
	LINTERFACE  shift 83
	LMAP  shift 79
	LNAME  shift 10
	LSTRUCT  shift 82
	LCOMM  shift 65
	'+'  shift 60
	'-'  shift 61
	'^'  shift 64
	'*'  shift 58
	'&'  shift 59
	'('  shift 67
	'!'  shift 62
	'~'  shift 63
	'['  shift 77
	'?'  shift 12
	'@'  shift 13
	.  reduce 291 (src line 1931)

	sym  goto 124
	expr  goto 189
	fnliteral  goto 73
	name  goto 69
	oexpr  goto 635
	pexpr  goto 57
	pexpr_no_paren  goto 66
	pseudocall  goto 70
	uexpr  goto 55
	convtype  goto 71
	comptype  goto 72
	interfacetype  goto 81
	structtype  goto 80
	othertype  goto 75
	fntype  goto 74
	hidden_importsym  goto 11
	fnlitdcl  goto 76

state 590
	keyval_list:  keyval_list ',' keyval.    (283)

	.  reduce 283 (src line 1904)


state 591
	keyval_list:  keyval_list ',' bare_complitexpr.    (284)

	.  reduce 284 (src line 1908)


state 592
	keyval:  expr ':' complitexpr.    (141)

	.  reduce 141 (src line 1020)


state 593
	expr:  expr.LOROR expr 
	expr:  expr.LANDAND expr 
	expr:  expr.LEQ expr 
	expr:  expr.LNE expr 
	expr:  expr.LLT expr 
	expr:  expr.LLE expr 
	expr:  expr.LGE expr 
	expr:  expr.LGT expr 
	expr:  expr.'+' expr 
	expr:  expr.'-' expr 
	expr:  expr.'|' expr 
	expr:  expr.'^' expr 
	expr:  expr.'*' expr 
	expr:  expr.'/' expr 
	expr:  expr.'%' expr 
	expr:  expr.'&' expr 
	expr:  expr.LANDNOT expr 
	expr:  expr.LLSH expr 
	expr:  expr.LRSH expr 
	expr:  expr.LCOMM expr 
	complitexpr:  expr.    (144)

	LANDAND  shift 135
	LANDNOT  shift 150
	LCOMM  shift 153
	LEQ  shift 136
	LGE  shift 140
	LGT  shift 141
	LLE  shift 139
	LLSH  shift 151
	LLT  shift 138
	LNE  shift 137
	LOROR  shift 134
	LRSH  shift 152
	'+'  shift 142
	'-'  shift 143
	'|'  shift 144
	'^'  shift 145
	'*'  shift 146
	'/'  shift 147
	'%'  shift 148
	'&'  shift 149
	.  reduce 144 (src line 1046)


state 594
	complitexpr:  '{'.start_complit braced_keyval_list '}' 
	start_complit: .    (140)

	.  reduce 140 (src line 1013)

	start_complit  goto 636

state 595
	bare_complitexpr:  '{' start_complit braced_keyval_list.'}' 

	'}'  shift 637
	.  error


state 596
	pexpr_no_paren:  '(' expr_or_type ')' '{' start_complit braced_keyval_list.'}' 

	'}'  shift 638
	.  error


state 597
	ntype:  '(' ntype ')'.    (171)
	non_recvchantype:  '(' ntype ')'.    (180)

	LBODY  reduce 180 (src line 1215)
	'('  reduce 180 (src line 1215)
	'{'  reduce 180 (src line 1215)
	.  reduce 171 (src line 1196)


state 598
	compound_stmt:  '{' $$59 stmt_list '}'.    (60)

	.  reduce 60 (src line 549)


state 599
	structdcl:  '(' embed ')' oliteral.    (233)

	.  reduce 233 (src line 1626)


state 600
	structdcl:  '(' '*' embed ')'.oliteral 
	oliteral: .    (303)

	LLITERAL  shift 431
	.  reduce 303 (src line 1967)

	oliteral  goto 639

state 601
	structdcl:  '*' '(' embed ')'.oliteral 
	oliteral: .    (303)

	LLITERAL  shift 431
	.  reduce 303 (src line 1967)

	oliteral  goto 640

state 602
	indcl:  '(' oarg_type_list_ocomma ')'.fnres 
	fnres: .    (213)

	LCHAN  shift 78
	LFUNC  shift 125
	LINTERFACE  shift 83
	LMAP  shift 79
	LNAME  shift 10
	LSTRUCT  shift 82
	LCOMM  shift 233
	'*'  shift 197
	'('  shift 491
	'['  shift 77
	'?'  shift 12
	'@'  shift 13
	.  reduce 213 (src line 1501)

	sym  goto 124
	dotname  goto 496
	name  goto 198
	fnres  goto 641
	interfacetype  goto 81
	structtype  goto 80
	ptrtype  goto 495
	recvchantype  goto 492
	othertype  goto 494
	fnret_type  goto 490
	fntype  goto 493
	hidden_importsym  goto 11

state 603
	hidden_type_misc:  '[' LLITERAL ']' hidden_type.    (321)

	.  reduce 321 (src line 2064)


state 604
	hidden_type_misc:  LMAP '[' hidden_type ']'.hidden_type 

	LCHAN  shift 349
	LFUNC  shift 351
	LINTERFACE  shift 347
	LMAP  shift 345
	LNAME  shift 343
	LSTRUCT  shift 346
	LCOMM  shift 350
	'*'  shift 348
	'['  shift 344
	'@'  shift 13
	.  error

	hidden_importsym  goto 342
	hidden_type  goto 642
	hidden_type_misc  goto 339
	hidden_type_func  goto 341
	hidden_type_recv_chan  goto 340

state 605
	hidden_type_misc:  LSTRUCT '{' ohidden_structdcl_list '}'.    (323)

	.  reduce 323 (src line 2072)


state 606
	hidden_structdcl_list:  hidden_structdcl_list ';'.hidden_structdcl 

	LNAME  shift 10
	'?'  shift 12
	'@'  shift 13
	.  error

	sym  goto 550
	hidden_importsym  goto 11
	hidden_structdcl  goto 643

state 607
	hidden_structdcl:  sym hidden_type.oliteral 
	oliteral: .    (303)

	LLITERAL  shift 431
	.  reduce 303 (src line 1967)

	oliteral  goto 644

state 608
	hidden_type_misc:  LINTERFACE '{' ohidden_interfacedcl_list '}'.    (324)

	.  reduce 324 (src line 2076)


state 609
	hidden_interfacedcl_list:  hidden_interfacedcl_list ';'.hidden_interfacedcl 

	LCHAN  shift 349
	LFUNC  shift 351
	LINTERFACE  shift 347
	LMAP  shift 345
	LNAME  shift 556
	LSTRUCT  shift 346
	LCOMM  shift 350
	'*'  shift 348
	'['  shift 344
	'?'  shift 12
	'@'  shift 13
	.  error

	sym  goto 554
	hidden_importsym  goto 557
	hidden_interfacedcl  goto 645
	hidden_type  goto 555
	hidden_type_misc  goto 339
	hidden_type_func  goto 341
	hidden_type_recv_chan  goto 340

state 610
	hidden_interfacedcl:  sym '('.ohidden_funarg_list ')' ohidden_funres 
	ohidden_funarg_list: .    (297)

	LNAME  shift 10
	'?'  shift 12
	'@'  shift 13
	.  reduce 297 (src line 1949)

	sym  goto 359
	hidden_importsym  goto 11
	hidden_funarg  goto 358
	hidden_funarg_list  goto 470
	ohidden_funarg_list  goto 646

state 611
	hidden_type_misc:  LCHAN '(' hidden_type_recv_chan ')'.    (327)

	.  reduce 327 (src line 2090)


state 612
	hidden_type_func:  LFUNC '(' ohidden_funarg_list ')'.ohidden_funres 
	ohidden_funres: .    (336)

	LCHAN  shift 349
	LFUNC  shift 351
	LINTERFACE  shift 347
	LMAP  shift 345
	LNAME  shift 343
	LSTRUCT  shift 346
	LCOMM  shift 350
	'*'  shift 348
	'('  shift 617
	'['  shift 344
	'@'  shift 13
	.  reduce 336 (src line 2176)

	hidden_importsym  goto 342
	hidden_funres  goto 616
	ohidden_funres  goto 647
	hidden_type  goto 618
	hidden_type_misc  goto 339
	hidden_type_func  goto 341
	hidden_type_recv_chan  goto 340

state 613
	hidden_constant:  '(' hidden_literal '+'.hidden_literal ')' 

	LLITERAL  shift 463
	LNAME  shift 10
	'-'  shift 464
	'?'  shift 12
	'@'  shift 13
	.  error

	sym  goto 465
	hidden_importsym  goto 11
	hidden_literal  goto 648

state 614
	hidden_import:  LCONST hidden_pkg_importsym hidden_type '=' hidden_constant ';'.    (308)

	.  reduce 308 (src line 1989)


state 615
	hidden_fndcl:  hidden_pkg_importsym '(' ohidden_funarg_list ')' ohidden_funres.    (208)

	.  reduce 208 (src line 1437)


state 616
	ohidden_funres:  hidden_funres.    (337)

	.  reduce 337 (src line 2180)


state 617
	hidden_funres:  '('.ohidden_funarg_list ')' 
	ohidden_funarg_list: .    (297)

	LNAME  shift 10
	'?'  shift 12
	'@'  shift 13
	.  reduce 297 (src line 1949)

	sym  goto 359
	hidden_importsym  goto 11
	hidden_funarg  goto 358
	hidden_funarg_list  goto 470
	ohidden_funarg_list  goto 649

state 618
	hidden_funres:  hidden_type.    (339)

	.  reduce 339 (src line 2187)


state 619
	hidden_fndcl:  '(' hidden_funarg_list ')' sym '('.ohidden_funarg_list ')' ohidden_funres 
	ohidden_funarg_list: .    (297)

	LNAME  shift 10
	'?'  shift 12
	'@'  shift 13
	.  reduce 297 (src line 1949)

	sym  goto 359
	hidden_importsym  goto 11
	hidden_funarg  goto 358
	hidden_funarg_list  goto 470
	ohidden_funarg_list  goto 650

state 620
	hidden_funarg:  sym LDDD hidden_type oliteral.    (332)

	.  reduce 332 (src line 2126)


state 621
	common_dcl:  lconst '(' constdcl ';' constdcl_list osemi ')'.    (33)

	.  reduce 33 (src line 330)


state 622
	constdcl_list:  constdcl_list ';' constdcl1.    (224)

	.  reduce 224 (src line 1564)


state 623
	fndcl:  '(' oarg_type_list_ocomma ')' sym '(' oarg_type_list_ocomma.')' fnres 

	')'  shift 651
	.  error


state 624
	fnres:  '(' oarg_type_list_ocomma ')'.    (215)

	.  reduce 215 (src line 1510)


state 625
	fndcl:  LLT sym LGT sym '(' oarg_type_list_ocomma.')' fnres 

	')'  shift 652
	.  error


state 626
	loop_body:  LBODY $$65 stmt_list '}'.    (66)

	.  reduce 66 (src line 604)


state 627
	for_header:  osimple_stmt ';' osimple_stmt ';' osimple_stmt.    (70)

	.  reduce 70 (src line 630)


state 628
	switch_stmt:  LSWITCH $$88 if_header $$89 LBODY caseblock_list '}'.    (90)

	.  reduce 90 (src line 768)


state 629
	caseblock:  case $$61 stmt_list.    (62)
	stmt_list:  stmt_list.';' stmt 

	';'  shift 419
	.  reduce 62 (src line 571)


state 630
	case:  LCASE expr_or_type_list ':'.    (55)

	.  reduce 55 (src line 473)


state 631
	case:  LCASE expr_or_type_list '='.expr ':' 

	LLITERAL  shift 68
	LCHAN  shift 78
	LFUNC  shift 125
	LINTERFACE  shift 83
	LMAP  shift 79
	LNAME  shift 10
	LSTRUCT  shift 82
	LCOMM  shift 65
	'+'  shift 60
	'-'  shift 61
	'^'  shift 64
	'*'  shift 58
	'&'  shift 59
	'('  shift 67
	'!'  shift 62
	'~'  shift 63
	'['  shift 77
	'?'  shift 12
	'@'  shift 13
	.  error

	sym  goto 124
	expr  goto 653
	fnliteral  goto 73
	name  goto 69
	pexpr  goto 57
	pexpr_no_paren  goto 66
	pseudocall  goto 70
	uexpr  goto 55
	convtype  goto 71
	comptype  goto 72
	interfacetype  goto 81
	structtype  goto 80
	othertype  goto 75
	fntype  goto 74
	hidden_importsym  goto 11
	fnlitdcl  goto 76

state 632
	case:  LCASE expr_or_type_list LCOLAS.expr ':' 

	LLITERAL  shift 68
	LCHAN  shift 78
	LFUNC  shift 125
	LINTERFACE  shift 83
	LMAP  shift 79
	LNAME  shift 10
	LSTRUCT  shift 82
	LCOMM  shift 65
	'+'  shift 60
	'-'  shift 61
	'^'  shift 64
	'*'  shift 58
	'&'  shift 59
	'('  shift 67
	'!'  shift 62
	'~'  shift 63
	'['  shift 77
	'?'  shift 12
	'@'  shift 13
	.  error

	sym  goto 124
	expr  goto 654
	fnliteral  goto 73
	name  goto 69
	pexpr  goto 57
	pexpr_no_paren  goto 66
	pseudocall  goto 70
	uexpr  goto 55
	convtype  goto 71
	comptype  goto 72
	interfacetype  goto 81
	structtype  goto 80
	othertype  goto 75
	fntype  goto 74
	hidden_importsym  goto 11
	fnlitdcl  goto 76

state 633
	expr_or_type_list:  expr_or_type_list ','.expr_or_type 

	LLITERAL  shift 68
	LCHAN  shift 78
	LFUNC  shift 125
	LINTERFACE  shift 83
	LMAP  shift 79
	LNAME  shift 10
	LSTRUCT  shift 82
	LCOMM  shift 180
	'+'  shift 60
	'-'  shift 61
	'^'  shift 64
	'*'  shift 179
	'&'  shift 59
	'('  shift 67
	'!'  shift 62
	'~'  shift 63
	'['  shift 77
	'?'  shift 12
	'@'  shift 13
	.  error

	sym  goto 124
	expr  goto 174
	expr_or_type  goto 515
	fnliteral  goto 73
	name  goto 69
	non_expr_type  goto 175
	pexpr  goto 57
	pexpr_no_paren  goto 66
	pseudocall  goto 70
	uexpr  goto 55
	convtype  goto 71
	comptype  goto 72
	interfacetype  goto 81
	structtype  goto 80
	recvchantype  goto 176
	othertype  goto 178
	fntype  goto 177
	hidden_importsym  goto 11
	fnlitdcl  goto 76

state 634
	if_stmt:  LIF $$78 if_header $$79 loop_body $$80 elseif_list.else 
	elseif_list:  elseif_list.elseif 
	else: .    (86)

	LELSE  shift 657
	.  reduce 86 (src line 743)

	elseif  goto 656
	else  goto 655

state 635
	pexpr_no_paren:  pexpr '[' oexpr ':' oexpr ':' oexpr.']' 

	']'  shift 658
	.  error


state 636
	complitexpr:  '{' start_complit.braced_keyval_list '}' 
	braced_keyval_list: .    (285)

	LLITERAL  shift 68
	LCHAN  shift 78
	LFUNC  shift 125
	LINTERFACE  shift 83
	LMAP  shift 79
	LNAME  shift 10
	LSTRUCT  shift 82
	LCOMM  shift 65
	'+'  shift 60
	'-'  shift 61
	'^'  shift 64
	'*'  shift 58
	'&'  shift 59
	'('  shift 67
	'{'  shift 406
	'!'  shift 62
	'~'  shift 63
	'['  shift 77
	'?'  shift 12
	'@'  shift 13
	.  reduce 285 (src line 1913)

	sym  goto 124
	expr  goto 405
	bare_complitexpr  goto 404
	fnliteral  goto 73
	keyval  goto 403
	name  goto 69
	pexpr  goto 57
	pexpr_no_paren  goto 66
	pseudocall  goto 70
	uexpr  goto 55
	keyval_list  goto 402
	braced_keyval_list  goto 659
	convtype  goto 71
	comptype  goto 72
	interfacetype  goto 81
	structtype  goto 80
	othertype  goto 75
	fntype  goto 74
	hidden_importsym  goto 11
	fnlitdcl  goto 76

state 637
	bare_complitexpr:  '{' start_complit braced_keyval_list '}'.    (143)

	.  reduce 143 (src line 1040)


state 638
	pexpr_no_paren:  '(' expr_or_type ')' '{' start_complit braced_keyval_list '}'.    (138)

	.  reduce 138 (src line 1004)


state 639
	structdcl:  '(' '*' embed ')' oliteral.    (235)

	.  reduce 235 (src line 1638)


state 640
	structdcl:  '*' '(' embed ')' oliteral.    (236)

	.  reduce 236 (src line 1645)


state 641
	indcl:  '(' oarg_type_list_ocomma ')' fnres.    (243)

	.  reduce 243 (src line 1700)


state 642
	hidden_type_misc:  LMAP '[' hidden_type ']' hidden_type.    (322)

	.  reduce 322 (src line 2068)


state 643
	hidden_structdcl_list:  hidden_structdcl_list ';' hidden_structdcl.    (350)

	.  reduce 350 (src line 2259)


state 644
	hidden_structdcl:  sym hidden_type oliteral.    (333)

	.  reduce 333 (src line 2142)


state 645
	hidden_interfacedcl_list:  hidden_interfacedcl_list ';' hidden_interfacedcl.    (352)

	.  reduce 352 (src line 2269)


state 646
	hidden_interfacedcl:  sym '(' ohidden_funarg_list.')' ohidden_funres 

	')'  shift 660
	.  error


state 647
	hidden_type_func:  LFUNC '(' ohidden_funarg_list ')' ohidden_funres.    (330)

	.  reduce 330 (src line 2111)


state 648
	hidden_constant:  '(' hidden_literal '+' hidden_literal.')' 

	')'  shift 661
	.  error


state 649
	hidden_funres:  '(' ohidden_funarg_list.')' 

	')'  shift 662
	.  error


state 650
	hidden_fndcl:  '(' hidden_funarg_list ')' sym '(' ohidden_funarg_list.')' ohidden_funres 

	')'  shift 663
	.  error


state 651
	fndcl:  '(' oarg_type_list_ocomma ')' sym '(' oarg_type_list_ocomma ')'.fnres 
	fnres: .    (213)

	LCHAN  shift 78
	LFUNC  shift 125
	LINTERFACE  shift 83
	LMAP  shift 79
	LNAME  shift 10
	LSTRUCT  shift 82
	LCOMM  shift 233
	'*'  shift 197
	'('  shift 491
	'['  shift 77
	'?'  shift 12
	'@'  shift 13
	.  reduce 213 (src line 1501)

	sym  goto 124
	dotname  goto 496
	name  goto 198
	fnres  goto 664
	interfacetype  goto 81
	structtype  goto 80
	ptrtype  goto 495
	recvchantype  goto 492
	othertype  goto 494
	fnret_type  goto 490
	fntype  goto 493
	hidden_importsym  goto 11

state 652
	fndcl:  LLT sym LGT sym '(' oarg_type_list_ocomma ')'.fnres 
	fnres: .    (213)

	LCHAN  shift 78
	LFUNC  shift 125
	LINTERFACE  shift 83
	LMAP  shift 79
	LNAME  shift 10
	LSTRUCT  shift 82
	LCOMM  shift 233
	'*'  shift 197
	'('  shift 491
	'['  shift 77
	'?'  shift 12
	'@'  shift 13
	.  reduce 213 (src line 1501)

	sym  goto 124
	dotname  goto 496
	name  goto 198
	fnres  goto 665
	interfacetype  goto 81
	structtype  goto 80
	ptrtype  goto 495
	recvchantype  goto 492
	othertype  goto 494
	fnret_type  goto 490
	fntype  goto 493
	hidden_importsym  goto 11

state 653
	case:  LCASE expr_or_type_list '=' expr.':' 
	expr:  expr.LOROR expr 
	expr:  expr.LANDAND expr 
	expr:  expr.LEQ expr 
	expr:  expr.LNE expr 
	expr:  expr.LLT expr 
	expr:  expr.LLE expr 
	expr:  expr.LGE expr 
	expr:  expr.LGT expr 
	expr:  expr.'+' expr 
	expr:  expr.'-' expr 
	expr:  expr.'|' expr 
	expr:  expr.'^' expr 
	expr:  expr.'*' expr 
	expr:  expr.'/' expr 
	expr:  expr.'%' expr 
	expr:  expr.'&' expr 
	expr:  expr.LANDNOT expr 
	expr:  expr.LLSH expr 
	expr:  expr.LRSH expr 
	expr:  expr.LCOMM expr 

	LANDAND  shift 135
	LANDNOT  shift 150
	LCOMM  shift 153
	LEQ  shift 136
	LGE  shift 140
	LGT  shift 141
	LLE  shift 139
	LLSH  shift 151
	LLT  shift 138
	LNE  shift 137
	LOROR  shift 134
	LRSH  shift 152
	'+'  shift 142
	'-'  shift 143
	'|'  shift 144
	'^'  shift 145
	'*'  shift 146
	'/'  shift 147
	'%'  shift 148
	'&'  shift 149
	':'  shift 666
	.  error


state 654
	case:  LCASE expr_or_type_list LCOLAS expr.':' 
	expr:  expr.LOROR expr 
	expr:  expr.LANDAND expr 
	expr:  expr.LEQ expr 
	expr:  expr.LNE expr 
	expr:  expr.LLT expr 
	expr:  expr.LLE expr 
	expr:  expr.LGE expr 
	expr:  expr.LGT expr 
	expr:  expr.'+' expr 
	expr:  expr.'-' expr 
	expr:  expr.'|' expr 
	expr:  expr.'^' expr 
	expr:  expr.'*' expr 
	expr:  expr.'/' expr 
	expr:  expr.'%' expr 
	expr:  expr.'&' expr 
	expr:  expr.LANDNOT expr 
	expr:  expr.LLSH expr 
	expr:  expr.LRSH expr 
	expr:  expr.LCOMM expr 

	LANDAND  shift 135
	LANDNOT  shift 150
	LCOMM  shift 153
	LEQ  shift 136
	LGE  shift 140
	LGT  shift 141
	LLE  shift 139
	LLSH  shift 151
	LLT  shift 138
	LNE  shift 137
	LOROR  shift 134
	LRSH  shift 152
	'+'  shift 142
	'-'  shift 143
	'|'  shift 144
	'^'  shift 145
	'*'  shift 146
	'/'  shift 147
	'%'  shift 148
	'&'  shift 149
	':'  shift 667
	.  error


state 655
	if_stmt:  LIF $$78 if_header $$79 loop_body $$80 elseif_list else.    (81)

	.  reduce 81 (src line 703)


state 656
	elseif_list:  elseif_list elseif.    (85)

	.  reduce 85 (src line 738)


state 657
	elseif:  LELSE.LIF $$82 if_header loop_body 
	else:  LELSE.compound_stmt 

	LIF  shift 668
	'{'  shift 310
	.  error

	compound_stmt  goto 669

state 658
	pexpr_no_paren:  pexpr '[' oexpr ':' oexpr ':' oexpr ']'.    (133)

	.  reduce 133 (src line 974)


state 659
	complitexpr:  '{' start_complit braced_keyval_list.'}' 

	'}'  shift 670
	.  error


state 660
	hidden_interfacedcl:  sym '(' ohidden_funarg_list ')'.ohidden_funres 
	ohidden_funres: .    (336)

	LCHAN  shift 349
	LFUNC  shift 351
	LINTERFACE  shift 347
	LMAP  shift 345
	LNAME  shift 343
	LSTRUCT  shift 346
	LCOMM  shift 350
	'*'  shift 348
	'('  shift 617
	'['  shift 344
	'@'  shift 13
	.  reduce 336 (src line 2176)

	hidden_importsym  goto 342
	hidden_funres  goto 616
	ohidden_funres  goto 671
	hidden_type  goto 618
	hidden_type_misc  goto 339
	hidden_type_func  goto 341
	hidden_type_recv_chan  goto 340

state 661
	hidden_constant:  '(' hidden_literal '+' hidden_literal ')'.    (344)

	.  reduce 344 (src line 2229)


state 662
	hidden_funres:  '(' ohidden_funarg_list ')'.    (338)

	.  reduce 338 (src line 2182)


state 663
	hidden_fndcl:  '(' hidden_funarg_list ')' sym '(' ohidden_funarg_list ')'.ohidden_funres 
	ohidden_funres: .    (336)

	LCHAN  shift 349
	LFUNC  shift 351
	LINTERFACE  shift 347
	LMAP  shift 345
	LNAME  shift 343
	LSTRUCT  shift 346
	LCOMM  shift 350
	'*'  shift 348
	'('  shift 617
	'['  shift 344
	'@'  shift 13
	.  reduce 336 (src line 2176)

	hidden_importsym  goto 342
	hidden_funres  goto 616
	ohidden_funres  goto 672
	hidden_type  goto 618
	hidden_type_misc  goto 339
	hidden_type_func  goto 341
	hidden_type_recv_chan  goto 340

state 664
	fndcl:  '(' oarg_type_list_ocomma ')' sym '(' oarg_type_list_ocomma ')' fnres.    (207)

	.  reduce 207 (src line 1400)


state 665
	fndcl:  LLT sym LGT sym '(' oarg_type_list_ocomma ')' fnres.    (205)

	.  reduce 205 (src line 1336)


state 666
	case:  LCASE expr_or_type_list '=' expr ':'.    (56)

	.  reduce 56 (src line 497)


state 667
	case:  LCASE expr_or_type_list LCOLAS expr ':'.    (57)

	.  reduce 57 (src line 515)


state 668
	elseif:  LELSE LIF.$$82 if_header loop_body 
	$$82: .    (82)

	.  reduce 82 (src line 720)

	$$82  goto 673

state 669
	else:  LELSE compound_stmt.    (87)

	.  reduce 87 (src line 747)


state 670
	complitexpr:  '{' start_complit braced_keyval_list '}'.    (145)

	.  reduce 145 (src line 1048)


state 671
	hidden_interfacedcl:  sym '(' ohidden_funarg_list ')' ohidden_funres.    (334)

	.  reduce 334 (src line 2166)


state 672
	hidden_fndcl:  '(' hidden_funarg_list ')' sym '(' ohidden_funarg_list ')' ohidden_funres.    (209)

	.  reduce 209 (src line 1463)


state 673
	elseif:  LELSE LIF $$82.if_header loop_body 
	osimple_stmt: .    (295)

	LLITERAL  shift 68
	LCHAN  shift 78
	LFUNC  shift 125
	LINTERFACE  shift 83
	LMAP  shift 79
	LNAME  shift 10
	LSTRUCT  shift 82
	LCOMM  shift 65
	'+'  shift 60
	'-'  shift 61
	'^'  shift 64
	'*'  shift 58
	'&'  shift 59
	'('  shift 67
	'!'  shift 62
	'~'  shift 63
	'['  shift 77
	'?'  shift 12
	'@'  shift 13
	.  reduce 295 (src line 1943)

	sym  goto 124
	expr  goto 48
	fnliteral  goto 73
	if_header  goto 674
	name  goto 69
	osimple_stmt  goto 288
	pexpr  goto 57
	pexpr_no_paren  goto 66
	pseudocall  goto 70
	simple_stmt  goto 284
	uexpr  goto 55
	expr_list  goto 49
	convtype  goto 71
	comptype  goto 72
	interfacetype  goto 81
	structtype  goto 80
	othertype  goto 75
	fntype  goto 74
	hidden_importsym  goto 11
	fnlitdcl  goto 76

state 674
	elseif:  LELSE LIF $$82 if_header.loop_body 

	LBODY  shift 385
	.  error

	loop_body  goto 675

state 675
	elseif:  LELSE LIF $$82 if_header loop_body.    (83)

	.  reduce 83 (src line 725)


76 terminals, 142 nonterminals
353 grammar rules, 676/2000 states
0 shift/reduce, 0 reduce/reduce conflicts reported
191 working sets used
memory: parser 3796/30000
446 extra closures
3128 shift entries, 64 exceptions
617 goto entries
1668 entries saved by goto default
Optimizer space used: output 2321/30000
2321 table entries, 743 zero
maximum spread: 76, maximum offset: 674
